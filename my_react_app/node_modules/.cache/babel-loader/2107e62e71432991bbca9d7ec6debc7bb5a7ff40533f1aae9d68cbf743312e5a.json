{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nimport { resetStateByKey, typeReducerForKey, loadersReducerForKey, errorsReducerForKey } from '../utils';\nimport { authStoreName } from '../../constants';\nconst apiTokensState = {\n  apiTokenType: null,\n  searchValue: '',\n  showAddTokenDialog: false,\n  createdByUserIdColumn: 'show',\n  deleteTokenDialog: {\n    open: false,\n    clientId: ''\n  },\n  successDialog: {\n    open: false,\n    secret: '',\n    clientId: ''\n  },\n  loaders: {},\n  apiTokensDataTenant: [],\n  apiTokensDataUser: [],\n  roles: [],\n  permissions: [],\n  errors: {}\n};\nconst reducers = {\n  setApiTokensLoader: loadersReducerForKey('apiTokensState'),\n  setApiTokensError: errorsReducerForKey('apiTokensState'),\n  setApiTokensState: typeReducerForKey('apiTokensState'),\n  resetApiTokensState: resetStateByKey('apiTokensState', {\n    apiTokensState\n  })\n};\nconst actions = {\n  loadApiTokens: createAction(`${authStoreName}/loadApiTokens`, payload => ({\n    payload\n  })),\n  loadUserApiTokens: createAction(`${authStoreName}/loadUserApiTokens`, payload => ({\n    payload\n  })),\n  loadTenantApiTokens: createAction(`${authStoreName}/loadTenantApiTokens`, payload => ({\n    payload\n  })),\n  initApiTokensData: createAction(`${authStoreName}/initApiTokensData`, payload => ({\n    payload\n  })),\n  addTenantApiToken: createAction(`${authStoreName}/addTenantApiToken`, payload => ({\n    payload\n  })),\n  addUserApiToken: createAction(`${authStoreName}/addUserApiToken`, payload => ({\n    payload\n  })),\n  deleteUserApiToken: createAction(`${authStoreName}/deleteUserApiToken`, payload => ({\n    payload\n  })),\n  deleteTenantApiToken: createAction(`${authStoreName}/deleteTenantApiToken`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { apiTokensState, reducers as apiTokensReducers, actions as apiTokensActions };","map":{"version":3,"names":["createAction","resetStateByKey","typeReducerForKey","loadersReducerForKey","errorsReducerForKey","authStoreName","apiTokensState","apiTokenType","searchValue","showAddTokenDialog","createdByUserIdColumn","deleteTokenDialog","open","clientId","successDialog","secret","loaders","apiTokensDataTenant","apiTokensDataUser","roles","permissions","errors","reducers","setApiTokensLoader","setApiTokensError","setApiTokensState","resetApiTokensState","actions","loadApiTokens","payload","loadUserApiTokens","loadTenantApiTokens","initApiTokensData","addTenantApiToken","addUserApiToken","deleteUserApiToken","deleteTenantApiToken","Matcher","apiTokensReducers","apiTokensActions"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/auth/ApiTokensState/index.js"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { resetStateByKey, typeReducerForKey, loadersReducerForKey, errorsReducerForKey } from '../utils';\nimport { authStoreName } from '../../constants';\nconst apiTokensState = {\n  apiTokenType: null,\n  searchValue: '',\n  showAddTokenDialog: false,\n  createdByUserIdColumn: 'show',\n  deleteTokenDialog: {\n    open: false,\n    clientId: ''\n  },\n  successDialog: {\n    open: false,\n    secret: '',\n    clientId: ''\n  },\n  loaders: {},\n  apiTokensDataTenant: [],\n  apiTokensDataUser: [],\n  roles: [],\n  permissions: [],\n  errors: {}\n};\nconst reducers = {\n  setApiTokensLoader: loadersReducerForKey('apiTokensState'),\n  setApiTokensError: errorsReducerForKey('apiTokensState'),\n  setApiTokensState: typeReducerForKey('apiTokensState'),\n  resetApiTokensState: resetStateByKey('apiTokensState', {\n    apiTokensState\n  })\n};\nconst actions = {\n  loadApiTokens: createAction(`${authStoreName}/loadApiTokens`, payload => ({\n    payload\n  })),\n  loadUserApiTokens: createAction(`${authStoreName}/loadUserApiTokens`, payload => ({\n    payload\n  })),\n  loadTenantApiTokens: createAction(`${authStoreName}/loadTenantApiTokens`, payload => ({\n    payload\n  })),\n  initApiTokensData: createAction(`${authStoreName}/initApiTokensData`, payload => ({\n    payload\n  })),\n  addTenantApiToken: createAction(`${authStoreName}/addTenantApiToken`, payload => ({\n    payload\n  })),\n  addUserApiToken: createAction(`${authStoreName}/addUserApiToken`, payload => ({\n    payload\n  })),\n  deleteUserApiToken: createAction(`${authStoreName}/deleteUserApiToken`, payload => ({\n    payload\n  })),\n  deleteTenantApiToken: createAction(`${authStoreName}/deleteTenantApiToken`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { apiTokensState, reducers as apiTokensReducers, actions as apiTokensActions };"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,eAAe,EAAEC,iBAAiB,EAAEC,oBAAoB,EAAEC,mBAAmB,QAAQ,UAAU;AACxG,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,MAAMC,cAAc,GAAG;EACrBC,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,EAAE;EACfC,kBAAkB,EAAE,KAAK;EACzBC,qBAAqB,EAAE,MAAM;EAC7BC,iBAAiB,EAAE;IACjBC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE;EACZ,CAAC;EACDC,aAAa,EAAE;IACbF,IAAI,EAAE,KAAK;IACXG,MAAM,EAAE,EAAE;IACVF,QAAQ,EAAE;EACZ,CAAC;EACDG,OAAO,EAAE,CAAC,CAAC;EACXC,mBAAmB,EAAE,EAAE;EACvBC,iBAAiB,EAAE,EAAE;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE,CAAC;AACX,CAAC;AACD,MAAMC,QAAQ,GAAG;EACfC,kBAAkB,EAAEpB,oBAAoB,CAAC,gBAAgB,CAAC;EAC1DqB,iBAAiB,EAAEpB,mBAAmB,CAAC,gBAAgB,CAAC;EACxDqB,iBAAiB,EAAEvB,iBAAiB,CAAC,gBAAgB,CAAC;EACtDwB,mBAAmB,EAAEzB,eAAe,CAAC,gBAAgB,EAAE;IACrDK;EACF,CAAC;AACH,CAAC;AACD,MAAMqB,OAAO,GAAG;EACdC,aAAa,EAAE5B,YAAY,CAAE,GAAEK,aAAc,gBAAe,EAAEwB,OAAO,KAAK;IACxEA;EACF,CAAC,CAAC,CAAC;EACHC,iBAAiB,EAAE9B,YAAY,CAAE,GAAEK,aAAc,oBAAmB,EAAEwB,OAAO,KAAK;IAChFA;EACF,CAAC,CAAC,CAAC;EACHE,mBAAmB,EAAE/B,YAAY,CAAE,GAAEK,aAAc,sBAAqB,EAAEwB,OAAO,KAAK;IACpFA;EACF,CAAC,CAAC,CAAC;EACHG,iBAAiB,EAAEhC,YAAY,CAAE,GAAEK,aAAc,oBAAmB,EAAEwB,OAAO,KAAK;IAChFA;EACF,CAAC,CAAC,CAAC;EACHI,iBAAiB,EAAEjC,YAAY,CAAE,GAAEK,aAAc,oBAAmB,EAAEwB,OAAO,KAAK;IAChFA;EACF,CAAC,CAAC,CAAC;EACHK,eAAe,EAAElC,YAAY,CAAE,GAAEK,aAAc,kBAAiB,EAAEwB,OAAO,KAAK;IAC5EA;EACF,CAAC,CAAC,CAAC;EACHM,kBAAkB,EAAEnC,YAAY,CAAE,GAAEK,aAAc,qBAAoB,EAAEwB,OAAO,KAAK;IAClFA;EACF,CAAC,CAAC,CAAC;EACHO,oBAAoB,EAAEpC,YAAY,CAAE,GAAEK,aAAc,uBAAsB,EAAEwB,OAAO,KAAK;IACtFA;EACF,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAMQ,OAAO,GAAG,CAAC,CAAC;AAClB,SAAS/B,cAAc,EAAEgB,QAAQ,IAAIgB,iBAAiB,EAAEX,OAAO,IAAIY,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}