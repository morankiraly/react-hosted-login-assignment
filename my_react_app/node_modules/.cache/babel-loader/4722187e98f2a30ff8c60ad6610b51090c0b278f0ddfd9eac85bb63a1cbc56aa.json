{"ast":null,"code":"const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nexport class InvalidCharacterError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\nfunction polyfill(input) {\n  const str = String(input).replace(/=+$/, '');\n  if (str.length % 4 === 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  let output = '';\n  for (let bc = 0, bs, buffer, idx = 0; buffer = str.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\nconst atob = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\nconst base64UrlDecode = str => {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += '==';\n      break;\n    case 3:\n      output += '=';\n      break;\n    default:\n      throw new Error('Illegal base64url string!');\n  }\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\nexport class InvalidTokenError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}\nexport const jwtDecode = function (token) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const pos = !!options.header ? 0 : 1;\n  try {\n    return JSON.parse(base64UrlDecode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};","map":{"version":3,"names":["chars","InvalidCharacterError","Error","constructor","message","polyfill","input","str","String","replace","length","output","bc","bs","buffer","idx","charAt","fromCharCode","indexOf","atob","window","bind","b64DecodeUnicode","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","base64UrlDecode","err","InvalidTokenError","jwtDecode","token","options","pos","header","JSON","parse","split","e"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/rest-api/jwt.js"],"sourcesContent":["const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nexport class InvalidCharacterError extends Error {\n  constructor(message) {\n    super(message);\n  }\n\n}\n\nfunction polyfill(input) {\n  const str = String(input).replace(/=+$/, '');\n\n  if (str.length % 4 === 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n\n  let output = '';\n\n  for (let bc = 0, bs, buffer, idx = 0; buffer = str.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n}\n\nconst atob = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase();\n\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n\n    return '%' + code;\n  }));\n}\n\nconst base64UrlDecode = str => {\n  let output = str.replace(/-/g, '+').replace(/_/g, '/');\n\n  switch (output.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      output += '==';\n      break;\n\n    case 3:\n      output += '=';\n      break;\n\n    default:\n      throw new Error('Illegal base64url string!');\n  }\n\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n\nexport class InvalidTokenError extends Error {\n  constructor(message) {\n    super(message);\n  }\n\n}\nexport const jwtDecode = (token, options = {}) => {\n  const pos = !!options.header ? 0 : 1;\n\n  try {\n    return JSON.parse(base64UrlDecode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}