{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"callback\"],\n  _excluded2 = [\"id\"];\nimport { all, call, put, takeEvery, takeLeading } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nfunction* loadCountForConnection(connection) {\n  const {\n    count\n  } = yield call(api.directory.countConfigurationUsers, connection.id);\n  return _extends({}, connection, {\n    count\n  });\n}\nfunction* loadScim2Connections() {\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n  try {\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\nfunction* createScim2Connection(_ref) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref,\n    newConnectionBody = _objectWithoutPropertiesLoose(_ref.payload, _excluded);\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n  try {\n    const newConnectionResponse = yield call(api.directory.createConfiguration, newConnectionBody);\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(newConnectionResponse);\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\nfunction* updateScim2Connection(_ref2) {\n  let {\n      payload: {\n        id\n      }\n    } = _ref2,\n    updateRequest = _objectWithoutPropertiesLoose(_ref2.payload, _excluded2);\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n  try {\n    yield call(api.directory.updateConfiguration, id, updateRequest);\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\nfunction deleteScim2Connection(_ref3) {\n  let {\n    payload: {\n      id,\n      callback\n    }\n  } = _ref3;\n  return function* () {\n    yield put(actions.setProvisioningState({\n      loading: true,\n      error: null\n    }));\n    try {\n      yield call(api.directory.deleteConfiguration, id);\n      const connections = yield call(api.directory.getConfigs);\n      const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n      yield put(actions.setProvisioningState({\n        connections: connectionsWithCount,\n        loading: false\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (e) {\n      yield put(actions.setProvisioningState({\n        error: e.message,\n        loading: false\n      }));\n      callback == null ? void 0 : callback(false, e);\n    }\n  }();\n}\nexport function* provisionSagas() {\n  yield takeLeading(actions.loadProvisionConnections, loadScim2Connections);\n  yield takeEvery(actions.createProvisionConnection, createScim2Connection);\n  yield takeEvery(actions.deleteProvisionConnection, deleteScim2Connection);\n  yield takeEvery(actions.updateProvisionConnection, updateScim2Connection);\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","all","call","put","takeEvery","takeLeading","api","actions","loadCountForConnection","connection","count","directory","countConfigurationUsers","id","loadScim2Connections","setProvisioningState","loading","error","connections","getConfigs","connectionsWithCount","map","e","message","createScim2Connection","_ref","payload","callback","newConnectionBody","newConnectionResponse","createConfiguration","updateScim2Connection","_ref2","updateRequest","updateConfiguration","deleteScim2Connection","deleteConfiguration","provisionSagas","loadProvisionConnections","createProvisionConnection","deleteProvisionConnection","updateProvisionConnection"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/auth/Provisioning/saga.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"callback\"],\n      _excluded2 = [\"id\"];\nimport { all, call, put, takeEvery, takeLeading } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\n\nfunction* loadCountForConnection(connection) {\n  const {\n    count\n  } = yield call(api.directory.countConfigurationUsers, connection.id);\n  return _extends({}, connection, {\n    count\n  });\n}\n\nfunction* loadScim2Connections() {\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* createScim2Connection(_ref) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref,\n      newConnectionBody = _objectWithoutPropertiesLoose(_ref.payload, _excluded);\n\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    const newConnectionResponse = yield call(api.directory.createConfiguration, newConnectionBody);\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(newConnectionResponse);\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* updateScim2Connection(_ref2) {\n  let {\n    payload: {\n      id\n    }\n  } = _ref2,\n      updateRequest = _objectWithoutPropertiesLoose(_ref2.payload, _excluded2);\n\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    yield call(api.directory.updateConfiguration, id, updateRequest);\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* deleteScim2Connection({\n  payload: {\n    id,\n    callback\n  }\n}) {\n  yield put(actions.setProvisioningState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    yield call(api.directory.deleteConfiguration, id);\n    const connections = yield call(api.directory.getConfigs);\n    const connectionsWithCount = yield all(connections.map(connection => loadCountForConnection(connection)));\n    yield put(actions.setProvisioningState({\n      connections: connectionsWithCount,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setProvisioningState({\n      error: e.message,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(false, e);\n  }\n}\n\nexport function* provisionSagas() {\n  yield takeLeading(actions.loadProvisionConnections, loadScim2Connections);\n  yield takeEvery(actions.createProvisionConnection, createScim2Connection);\n  yield takeEvery(actions.deleteProvisionConnection, deleteScim2Connection);\n  yield takeEvery(actions.updateProvisionConnection, updateScim2Connection);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}