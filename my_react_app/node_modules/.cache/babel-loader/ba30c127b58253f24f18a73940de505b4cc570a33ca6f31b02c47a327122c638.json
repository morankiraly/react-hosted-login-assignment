{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { typeReducerForKey } from '../utils';\nimport { createAction } from '@reduxjs/toolkit';\nimport { auditsStoreName } from '../../constants';\nconst auditsMetadataState = {\n  loading: true\n};\nconst reducers = {\n  setAuditsMetadataState: typeReducerForKey('auditsMetadataState'),\n  resetAuditsMetadataState: state => _extends({}, state, {\n    auditsMetadataState\n  })\n};\nconst actions = {\n  loadAuditsMetadata: createAction(`${auditsStoreName}/loadAuditsMetadata`)\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { auditsMetadataState, reducers as auditsMetadataReducers, actions as auditsMetadataActions };","map":{"version":3,"names":["_extends","typeReducerForKey","createAction","auditsStoreName","auditsMetadataState","loading","reducers","setAuditsMetadataState","resetAuditsMetadataState","state","actions","loadAuditsMetadata","Matcher","auditsMetadataReducers","auditsMetadataActions"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/audits/AuditsMetadataState/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { typeReducerForKey } from '../utils';\nimport { createAction } from '@reduxjs/toolkit';\nimport { auditsStoreName } from '../../constants';\nconst auditsMetadataState = {\n  loading: true\n};\nconst reducers = {\n  setAuditsMetadataState: typeReducerForKey('auditsMetadataState'),\n  resetAuditsMetadataState: state => _extends({}, state, {\n    auditsMetadataState\n  })\n};\nconst actions = {\n  loadAuditsMetadata: createAction(`${auditsStoreName}/loadAuditsMetadata`)\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { auditsMetadataState, reducers as auditsMetadataReducers, actions as auditsMetadataActions };"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,iBAAiB,QAAQ,UAAU;AAC5C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,eAAe,QAAQ,iBAAiB;AACjD,MAAMC,mBAAmB,GAAG;EAC1BC,OAAO,EAAE;AACX,CAAC;AACD,MAAMC,QAAQ,GAAG;EACfC,sBAAsB,EAAEN,iBAAiB,CAAC,qBAAqB,CAAC;EAChEO,wBAAwB,EAAEC,KAAK,IAAIT,QAAQ,CAAC,CAAC,CAAC,EAAES,KAAK,EAAE;IACrDL;EACF,CAAC;AACH,CAAC;AACD,MAAMM,OAAO,GAAG;EACdC,kBAAkB,EAAET,YAAY,CAAE,GAAEC,eAAgB,qBAAoB;AAC1E,CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAMS,OAAO,GAAG,CAAC,CAAC;AAClB,SAASR,mBAAmB,EAAEE,QAAQ,IAAIO,sBAAsB,EAAEH,OAAO,IAAII,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}