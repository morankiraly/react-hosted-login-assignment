{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { call, put, takeEvery, delay } from 'redux-saga/effects';\nimport { plansActions } from './index';\nimport { api } from '@frontegg/rest-api';\nimport { planResponseMock } from '../dummy';\nexport function* plansSagas() {\n  yield takeEvery(plansActions.loadPlans, loadPlans);\n}\nfunction* loadPlans() {\n  yield put(plansActions.setLoading(true));\n  try {\n    const products = yield call(api.subscriptions.getSubscriptionPlans);\n    const plans = products.map(item => {\n      var _item$price, _item$price2;\n      return {\n        id: item.id,\n        name: item.name,\n        description: item.description,\n        price: ((_item$price = item.price) == null ? void 0 : _item$price.amount) || 0,\n        currency: ((_item$price2 = item.price) == null ? void 0 : _item$price2.currency) || 'usd',\n        recurringInterval: 'month',\n        slug: item.slug\n      };\n    });\n    yield put(plansActions.setState({\n      fetching: false,\n      loading: false,\n      plans\n    }));\n  } catch (e) {\n    yield put(plansActions.setError(e.message));\n  }\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadPlansMock() {\n  yield put(plansActions.setLoading(true));\n  yield delay(500);\n  yield put(plansActions.setState({\n    fetching: false,\n    loading: false,\n    plans: planResponseMock.map(item => {\n      var _item$price3, _item$price4;\n      return _extends({}, item, {\n        price: ((_item$price3 = item.price) == null ? void 0 : _item$price3.amount) || 0,\n        currency: ((_item$price4 = item.price) == null ? void 0 : _item$price4.currency) || 'usd',\n        recurringInterval: 'month'\n      });\n    })\n  }));\n}\nexport function* plansSagasMock() {\n  yield takeEvery(plansActions.loadPlans, loadPlansMock);\n}","map":{"version":3,"names":["_extends","call","put","takeEvery","delay","plansActions","api","planResponseMock","plansSagas","loadPlans","setLoading","products","subscriptions","getSubscriptionPlans","plans","map","item","_item$price","_item$price2","id","name","description","price","amount","currency","recurringInterval","slug","setState","fetching","loading","e","setError","message","loadPlansMock","_item$price3","_item$price4","plansSagasMock"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/subscriptions/Plans/saga.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { call, put, takeEvery, delay } from 'redux-saga/effects';\nimport { plansActions } from './index';\nimport { api } from '@frontegg/rest-api';\nimport { planResponseMock } from '../dummy';\nexport function* plansSagas() {\n  yield takeEvery(plansActions.loadPlans, loadPlans);\n}\n\nfunction* loadPlans() {\n  yield put(plansActions.setLoading(true));\n\n  try {\n    const products = yield call(api.subscriptions.getSubscriptionPlans);\n    const plans = products.map(item => {\n      var _item$price, _item$price2;\n\n      return {\n        id: item.id,\n        name: item.name,\n        description: item.description,\n        price: ((_item$price = item.price) == null ? void 0 : _item$price.amount) || 0,\n        currency: ((_item$price2 = item.price) == null ? void 0 : _item$price2.currency) || 'usd',\n        recurringInterval: 'month',\n        slug: item.slug\n      };\n    });\n    yield put(plansActions.setState({\n      fetching: false,\n      loading: false,\n      plans\n    }));\n  } catch (e) {\n    yield put(plansActions.setError(e.message));\n  }\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\n\nfunction* loadPlansMock() {\n  yield put(plansActions.setLoading(true));\n  yield delay(500);\n  yield put(plansActions.setState({\n    fetching: false,\n    loading: false,\n    plans: planResponseMock.map(item => {\n      var _item$price3, _item$price4;\n\n      return _extends({}, item, {\n        price: ((_item$price3 = item.price) == null ? void 0 : _item$price3.amount) || 0,\n        currency: ((_item$price4 = item.price) == null ? void 0 : _item$price4.currency) || 'usd',\n        recurringInterval: 'month'\n      });\n    })\n  }));\n}\n\nexport function* plansSagasMock() {\n  yield takeEvery(plansActions.loadPlans, loadPlansMock);\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,oBAAoB;AAChE,SAASC,YAAY,QAAQ,SAAS;AACtC,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,OAAO,UAAUC,UAAU,GAAG;EAC5B,MAAML,SAAS,CAACE,YAAY,CAACI,SAAS,EAAEA,SAAS,CAAC;AACpD;AAEA,UAAUA,SAAS,GAAG;EACpB,MAAMP,GAAG,CAACG,YAAY,CAACK,UAAU,CAAC,IAAI,CAAC,CAAC;EAExC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACK,GAAG,CAACM,aAAa,CAACC,oBAAoB,CAAC;IACnE,MAAMC,KAAK,GAAGH,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAI;MACjC,IAAIC,WAAW,EAAEC,YAAY;MAE7B,OAAO;QACLC,EAAE,EAAEH,IAAI,CAACG,EAAE;QACXC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,WAAW,EAAEL,IAAI,CAACK,WAAW;QAC7BC,KAAK,EAAE,CAAC,CAACL,WAAW,GAAGD,IAAI,CAACM,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGL,WAAW,CAACM,MAAM,KAAK,CAAC;QAC9EC,QAAQ,EAAE,CAAC,CAACN,YAAY,GAAGF,IAAI,CAACM,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,YAAY,CAACM,QAAQ,KAAK,KAAK;QACzFC,iBAAiB,EAAE,OAAO;QAC1BC,IAAI,EAAEV,IAAI,CAACU;MACb,CAAC;IACH,CAAC,CAAC;IACF,MAAMxB,GAAG,CAACG,YAAY,CAACsB,QAAQ,CAAC;MAC9BC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,KAAK;MACdf;IACF,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOgB,CAAC,EAAE;IACV,MAAM5B,GAAG,CAACG,YAAY,CAAC0B,QAAQ,CAACD,CAAC,CAACE,OAAO,CAAC,CAAC;EAC7C;AACF;AACA;AACA;AACA;;AAGA,UAAUC,aAAa,GAAG;EACxB,MAAM/B,GAAG,CAACG,YAAY,CAACK,UAAU,CAAC,IAAI,CAAC,CAAC;EACxC,MAAMN,KAAK,CAAC,GAAG,CAAC;EAChB,MAAMF,GAAG,CAACG,YAAY,CAACsB,QAAQ,CAAC;IAC9BC,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE,KAAK;IACdf,KAAK,EAAEP,gBAAgB,CAACQ,GAAG,CAACC,IAAI,IAAI;MAClC,IAAIkB,YAAY,EAAEC,YAAY;MAE9B,OAAOnC,QAAQ,CAAC,CAAC,CAAC,EAAEgB,IAAI,EAAE;QACxBM,KAAK,EAAE,CAAC,CAACY,YAAY,GAAGlB,IAAI,CAACM,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGY,YAAY,CAACX,MAAM,KAAK,CAAC;QAChFC,QAAQ,EAAE,CAAC,CAACW,YAAY,GAAGnB,IAAI,CAACM,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGa,YAAY,CAACX,QAAQ,KAAK,KAAK;QACzFC,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,CAAC,CAAC;AACL;AAEA,OAAO,UAAUW,cAAc,GAAG;EAChC,MAAMjC,SAAS,CAACE,YAAY,CAACI,SAAS,EAAEwB,aAAa,CAAC;AACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}