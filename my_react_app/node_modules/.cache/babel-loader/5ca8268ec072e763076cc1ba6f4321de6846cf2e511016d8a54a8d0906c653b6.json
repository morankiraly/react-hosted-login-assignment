{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"callback\"],\n  _excluded2 = [\"callback\"];\nimport { takeLatest, put, call, takeLeading, select } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { sessionsConfigDummies } from '../dummy';\nfunction* loadSessionPolicyState() {\n  yield put(actions.setSessionsPolicyState({\n    loading: true,\n    error: null\n  }));\n  try {\n    const sessionsPolicy = yield call(api.auth.getSessionConfigurations);\n    yield put(actions.setSessionsPolicyState({\n      configurations: sessionsPolicy,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setSessionsState({\n      error: e,\n      loading: false\n    }));\n  }\n}\nfunction createOrUpdateSessionsPolicy(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    yield put(actions.setSessionsPolicyState({\n      loading: true,\n      error: null\n    }));\n    try {\n      const {\n          callback\n        } = payload,\n        rest = _objectWithoutPropertiesLoose(payload, _excluded);\n      yield call(api.auth.createOrUpdateSessionConfigrations, rest);\n      yield put(actions.loadSessionsPolicy());\n      callback == null ? void 0 : callback(true);\n    } catch (e) {\n      yield put(actions.setSessionsPolicyState({\n        error: e,\n        loading: false\n      }));\n    }\n  }();\n}\nexport function* sessionsPolicySaga() {\n  yield takeLeading(actions.loadSessionsPolicy, loadSessionPolicyState);\n  yield takeLatest(actions.createOrUpdateSessionsPolicy, createOrUpdateSessionsPolicy);\n}\nfunction* loadSessionPolicyStateMock() {\n  yield put(actions.setSessionsPolicyState({\n    loading: true,\n    error: null\n  }));\n  const sessionPolicyState = yield select(state => {\n    var _state$auth$sessionsP, _state$auth;\n    return (_state$auth$sessionsP = state == null ? void 0 : (_state$auth = state.auth) == null ? void 0 : _state$auth.sessionsPolicyState) != null ? _state$auth$sessionsP : sessionsConfigDummies;\n  });\n  yield put(actions.setSessionsPolicyState(_extends({}, sessionPolicyState, {\n    loading: false\n  })));\n}\nfunction createOrUpdateSessionsPolicyMock(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    yield put(actions.setSessionsPolicyState({\n      loading: true,\n      error: null\n    }));\n    const {\n        callback\n      } = payload,\n      rest = _objectWithoutPropertiesLoose(payload, _excluded2);\n    callback == null ? void 0 : callback(true);\n    yield put(actions.setSessionsPolicyState({\n      configurations: rest,\n      loading: false\n    }));\n  }();\n}\nexport function* sessionsPolicySagaMock() {\n  yield takeLeading(actions.loadSessionsPolicy, loadSessionPolicyStateMock);\n  yield takeLatest(actions.createOrUpdateSessionsPolicy, createOrUpdateSessionsPolicyMock);\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","takeLatest","put","call","takeLeading","select","api","actions","sessionsConfigDummies","loadSessionPolicyState","setSessionsPolicyState","loading","error","sessionsPolicy","auth","getSessionConfigurations","configurations","e","setSessionsState","createOrUpdateSessionsPolicy","payload","callback","rest","createOrUpdateSessionConfigrations","loadSessionsPolicy","sessionsPolicySaga","loadSessionPolicyStateMock","sessionPolicyState","state","_state$auth$sessionsP","_state$auth","sessionsPolicyState","createOrUpdateSessionsPolicyMock","sessionsPolicySagaMock"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/auth/SessionsPolicyState/saga.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"callback\"],\n      _excluded2 = [\"callback\"];\nimport { takeLatest, put, call, takeLeading, select } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { sessionsConfigDummies } from '../dummy';\n\nfunction* loadSessionPolicyState() {\n  yield put(actions.setSessionsPolicyState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    const sessionsPolicy = yield call(api.auth.getSessionConfigurations);\n    yield put(actions.setSessionsPolicyState({\n      configurations: sessionsPolicy,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setSessionsState({\n      error: e,\n      loading: false\n    }));\n  }\n}\n\nfunction* createOrUpdateSessionsPolicy({\n  payload\n}) {\n  yield put(actions.setSessionsPolicyState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    const {\n      callback\n    } = payload,\n          rest = _objectWithoutPropertiesLoose(payload, _excluded);\n\n    yield call(api.auth.createOrUpdateSessionConfigrations, rest);\n    yield put(actions.loadSessionsPolicy());\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setSessionsPolicyState({\n      error: e,\n      loading: false\n    }));\n  }\n}\n\nexport function* sessionsPolicySaga() {\n  yield takeLeading(actions.loadSessionsPolicy, loadSessionPolicyState);\n  yield takeLatest(actions.createOrUpdateSessionsPolicy, createOrUpdateSessionsPolicy);\n}\n\nfunction* loadSessionPolicyStateMock() {\n  yield put(actions.setSessionsPolicyState({\n    loading: true,\n    error: null\n  }));\n  const sessionPolicyState = yield select(state => {\n    var _state$auth$sessionsP, _state$auth;\n\n    return (_state$auth$sessionsP = state == null ? void 0 : (_state$auth = state.auth) == null ? void 0 : _state$auth.sessionsPolicyState) != null ? _state$auth$sessionsP : sessionsConfigDummies;\n  });\n  yield put(actions.setSessionsPolicyState(_extends({}, sessionPolicyState, {\n    loading: false\n  })));\n}\n\nfunction* createOrUpdateSessionsPolicyMock({\n  payload\n}) {\n  yield put(actions.setSessionsPolicyState({\n    loading: true,\n    error: null\n  }));\n\n  const {\n    callback\n  } = payload,\n        rest = _objectWithoutPropertiesLoose(payload, _excluded2);\n\n  callback == null ? void 0 : callback(true);\n  yield put(actions.setSessionsPolicyState({\n    configurations: rest,\n    loading: false\n  }));\n}\n\nexport function* sessionsPolicySagaMock() {\n  yield takeLeading(actions.loadSessionsPolicy, loadSessionPolicyStateMock);\n  yield takeLatest(actions.createOrUpdateSessionsPolicy, createOrUpdateSessionsPolicyMock);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}