{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { call, delay, put, takeEvery } from 'redux-saga/effects';\nimport { invoicesActions } from './index';\nimport { api } from '@frontegg/rest-api';\nimport { invoicesMock } from '../../dummy';\nexport function* subscriptionInvoicesSagas() {\n  yield takeEvery(invoicesActions.loadInvoices, loadInvoices);\n  yield takeEvery(invoicesActions.downloadInvoice, downloadInvoice);\n}\nexport function* loadInvoices() {\n  yield put(invoicesActions.setLoading(true));\n  try {\n    const responseInvoices = yield call(api.subscriptions.getSubscriptionInvoices);\n    const invoices = responseInvoices.map(invoice => ({\n      id: invoice.id,\n      externalId: invoice.externalId,\n      subscriptionId: invoice.subscriptionId,\n      paymentDate: new Date(Date.parse(invoice.paymentDate)),\n      totalAmount: +((invoice.totalAmount || 0) / 100).toFixed(2),\n      currency: invoice.currency || 'usd',\n      paid: invoice.paid || false,\n      receiptNumber: invoice.receiptNumber\n    }));\n    yield put(invoicesActions.setState({\n      loading: false,\n      fetching: false,\n      invoices\n    }));\n  } catch (e) {\n    yield put(invoicesActions.setError(e.message));\n  }\n}\nfunction downloadInvoice(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    yield put(invoicesActions.setInvoiceDownloadState({\n      loading: true,\n      error: null\n    }));\n    try {\n      yield call(api.subscriptions.getSubscriptionInvoicePdf, payload.invoiceId, payload.filename);\n      yield put(invoicesActions.setInvoiceDownloadState({\n        loading: false,\n        error: null\n      }));\n    } catch (e) {\n      yield put(invoicesActions.setInvoiceDownloadState({\n        loading: false,\n        error: e.message || null\n      }));\n    }\n  }();\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadInvoicesMock() {\n  yield put(invoicesActions.setLoading(true));\n  yield delay(500);\n  const selectPlanTitle = 'Premium';\n  yield put(invoicesActions.setState({\n    loading: false,\n    fetching: false,\n    invoices: invoicesMock.map(invoice => _extends({}, invoice, {\n      selectedPlan: selectPlanTitle,\n      paymentDate: new Date(Date.parse(invoice.paymentDate)),\n      totalAmount: +((invoice.totalAmount || 0) / 100).toFixed(2)\n    }))\n  }));\n  yield put(invoicesActions.setLoading(false));\n}\nexport function* subscriptionInvoicesSagasMock() {\n  yield takeEvery(invoicesActions.loadInvoices, loadInvoicesMock);\n}","map":{"version":3,"names":["_extends","call","delay","put","takeEvery","invoicesActions","api","invoicesMock","subscriptionInvoicesSagas","loadInvoices","downloadInvoice","setLoading","responseInvoices","subscriptions","getSubscriptionInvoices","invoices","map","invoice","id","externalId","subscriptionId","paymentDate","Date","parse","totalAmount","toFixed","currency","paid","receiptNumber","setState","loading","fetching","e","setError","message","payload","setInvoiceDownloadState","error","getSubscriptionInvoicePdf","invoiceId","filename","loadInvoicesMock","selectPlanTitle","selectedPlan","subscriptionInvoicesSagasMock"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/subscriptions/Billing/Invoices/saga.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { call, delay, put, takeEvery } from 'redux-saga/effects';\nimport { invoicesActions } from './index';\nimport { api } from '@frontegg/rest-api';\nimport { invoicesMock } from '../../dummy';\nexport function* subscriptionInvoicesSagas() {\n  yield takeEvery(invoicesActions.loadInvoices, loadInvoices);\n  yield takeEvery(invoicesActions.downloadInvoice, downloadInvoice);\n}\nexport function* loadInvoices() {\n  yield put(invoicesActions.setLoading(true));\n\n  try {\n    const responseInvoices = yield call(api.subscriptions.getSubscriptionInvoices);\n    const invoices = responseInvoices.map(invoice => ({\n      id: invoice.id,\n      externalId: invoice.externalId,\n      subscriptionId: invoice.subscriptionId,\n      paymentDate: new Date(Date.parse(invoice.paymentDate)),\n      totalAmount: +((invoice.totalAmount || 0) / 100).toFixed(2),\n      currency: invoice.currency || 'usd',\n      paid: invoice.paid || false,\n      receiptNumber: invoice.receiptNumber\n    }));\n    yield put(invoicesActions.setState({\n      loading: false,\n      fetching: false,\n      invoices\n    }));\n  } catch (e) {\n    yield put(invoicesActions.setError(e.message));\n  }\n}\n\nfunction* downloadInvoice({\n  payload\n}) {\n  yield put(invoicesActions.setInvoiceDownloadState({\n    loading: true,\n    error: null\n  }));\n\n  try {\n    yield call(api.subscriptions.getSubscriptionInvoicePdf, payload.invoiceId, payload.filename);\n    yield put(invoicesActions.setInvoiceDownloadState({\n      loading: false,\n      error: null\n    }));\n  } catch (e) {\n    yield put(invoicesActions.setInvoiceDownloadState({\n      loading: false,\n      error: e.message || null\n    }));\n  }\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\n\nfunction* loadInvoicesMock() {\n  yield put(invoicesActions.setLoading(true));\n  yield delay(500);\n  const selectPlanTitle = 'Premium';\n  yield put(invoicesActions.setState({\n    loading: false,\n    fetching: false,\n    invoices: invoicesMock.map(invoice => _extends({}, invoice, {\n      selectedPlan: selectPlanTitle,\n      paymentDate: new Date(Date.parse(invoice.paymentDate)),\n      totalAmount: +((invoice.totalAmount || 0) / 100).toFixed(2)\n    }))\n  }));\n  yield put(invoicesActions.setLoading(false));\n}\n\nexport function* subscriptionInvoicesSagasMock() {\n  yield takeEvery(invoicesActions.loadInvoices, loadInvoicesMock);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}