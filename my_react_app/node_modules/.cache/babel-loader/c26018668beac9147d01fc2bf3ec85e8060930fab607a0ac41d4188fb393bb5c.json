{"ast":null,"code":"import { AuthStrategyEnum } from '@frontegg/rest-api';\nexport let LoginStep;\n(function (LoginStep) {\n  LoginStep[\"preLogin\"] = \"preLogin\";\n  LoginStep[\"magicLinkPreLoginSuccess\"] = \"magicLinkPreLoginSuccess\";\n  LoginStep[\"loginWithSmsOtc\"] = \"loginWithSmsOtc\";\n  LoginStep[\"loginWithQuickSmsOtc\"] = \"loginWithQuickSmsOtc\";\n  LoginStep[\"loginWithOtc\"] = \"loginWithOtc\";\n  LoginStep[\"loginWithPassword\"] = \"loginWithPassword\";\n  LoginStep[\"loginWithTwoFactor\"] = \"loginWithTwoFactor\";\n  LoginStep[\"redirectToSSO\"] = \"redirectToSSO\";\n  LoginStep[\"loginWithSSOFailed\"] = \"loginWithSSOFailed\";\n  LoginStep[\"success\"] = \"success\";\n  LoginStep[\"forceTwoFactor\"] = \"forceTwoFactor\";\n  LoginStep[\"recoverTwoFactor\"] = \"recoverTwoFactor\";\n})(LoginStep || (LoginStep = {}));\nexport let LoginFlow;\n(function (LoginFlow) {\n  LoginFlow[\"Login\"] = \"login\";\n  LoginFlow[\"RegisterQuickLogin\"] = \"registerQuickLogin\";\n})(LoginFlow || (LoginFlow = {}));\nexport let QuickLoginStrategy;\n(function (QuickLoginStrategy) {\n  QuickLoginStrategy[\"Internal\"] = \"internal\";\n  QuickLoginStrategy[\"UsbKey\"] = \"usb-key\";\n  QuickLoginStrategy[\"Android\"] = \"android\";\n  QuickLoginStrategy[\"Sms\"] = \"sms\";\n})(QuickLoginStrategy || (QuickLoginStrategy = {}));\nexport { AuthStrategyEnum };","map":{"version":3,"names":["AuthStrategyEnum","LoginStep","LoginFlow","QuickLoginStrategy"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/auth/LoginState/interfaces.js"],"sourcesContent":["import { AuthStrategyEnum } from '@frontegg/rest-api';\nexport let LoginStep;\n\n(function (LoginStep) {\n  LoginStep[\"preLogin\"] = \"preLogin\";\n  LoginStep[\"magicLinkPreLoginSuccess\"] = \"magicLinkPreLoginSuccess\";\n  LoginStep[\"loginWithSmsOtc\"] = \"loginWithSmsOtc\";\n  LoginStep[\"loginWithQuickSmsOtc\"] = \"loginWithQuickSmsOtc\";\n  LoginStep[\"loginWithOtc\"] = \"loginWithOtc\";\n  LoginStep[\"loginWithPassword\"] = \"loginWithPassword\";\n  LoginStep[\"loginWithTwoFactor\"] = \"loginWithTwoFactor\";\n  LoginStep[\"redirectToSSO\"] = \"redirectToSSO\";\n  LoginStep[\"loginWithSSOFailed\"] = \"loginWithSSOFailed\";\n  LoginStep[\"success\"] = \"success\";\n  LoginStep[\"forceTwoFactor\"] = \"forceTwoFactor\";\n  LoginStep[\"recoverTwoFactor\"] = \"recoverTwoFactor\";\n})(LoginStep || (LoginStep = {}));\n\nexport let LoginFlow;\n\n(function (LoginFlow) {\n  LoginFlow[\"Login\"] = \"login\";\n  LoginFlow[\"RegisterQuickLogin\"] = \"registerQuickLogin\";\n})(LoginFlow || (LoginFlow = {}));\n\nexport let QuickLoginStrategy;\n\n(function (QuickLoginStrategy) {\n  QuickLoginStrategy[\"Internal\"] = \"internal\";\n  QuickLoginStrategy[\"UsbKey\"] = \"usb-key\";\n  QuickLoginStrategy[\"Android\"] = \"android\";\n  QuickLoginStrategy[\"Sms\"] = \"sms\";\n})(QuickLoginStrategy || (QuickLoginStrategy = {}));\n\nexport { AuthStrategyEnum };"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,OAAO,IAAIC,SAAS;AAEpB,CAAC,UAAUA,SAAS,EAAE;EACpBA,SAAS,CAAC,UAAU,CAAC,GAAG,UAAU;EAClCA,SAAS,CAAC,0BAA0B,CAAC,GAAG,0BAA0B;EAClEA,SAAS,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;EAChDA,SAAS,CAAC,sBAAsB,CAAC,GAAG,sBAAsB;EAC1DA,SAAS,CAAC,cAAc,CAAC,GAAG,cAAc;EAC1CA,SAAS,CAAC,mBAAmB,CAAC,GAAG,mBAAmB;EACpDA,SAAS,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;EACtDA,SAAS,CAAC,eAAe,CAAC,GAAG,eAAe;EAC5CA,SAAS,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;EACtDA,SAAS,CAAC,SAAS,CAAC,GAAG,SAAS;EAChCA,SAAS,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;EAC9CA,SAAS,CAAC,kBAAkB,CAAC,GAAG,kBAAkB;AACpD,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjC,OAAO,IAAIC,SAAS;AAEpB,CAAC,UAAUA,SAAS,EAAE;EACpBA,SAAS,CAAC,OAAO,CAAC,GAAG,OAAO;EAC5BA,SAAS,CAAC,oBAAoB,CAAC,GAAG,oBAAoB;AACxD,CAAC,EAAEA,SAAS,KAAKA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;AAEjC,OAAO,IAAIC,kBAAkB;AAE7B,CAAC,UAAUA,kBAAkB,EAAE;EAC7BA,kBAAkB,CAAC,UAAU,CAAC,GAAG,UAAU;EAC3CA,kBAAkB,CAAC,QAAQ,CAAC,GAAG,SAAS;EACxCA,kBAAkB,CAAC,SAAS,CAAC,GAAG,SAAS;EACzCA,kBAAkB,CAAC,KAAK,CAAC,GAAG,KAAK;AACnC,CAAC,EAAEA,kBAAkB,KAAKA,kBAAkB,GAAG,CAAC,CAAC,CAAC,CAAC;AAEnD,SAASH,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}