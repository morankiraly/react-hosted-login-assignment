{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from './reducer';\nimport { delay } from '../auth/utils';\nexport function* loadVendorPublicInfo() {\n  yield put(actions.setVendorState({\n    loading: true\n  }));\n  try {\n    const {\n      whiteLabelMode = false\n    } = yield api.vendor.getVendorPublicInfo();\n    yield put(actions.setVendorState({\n      whiteLabelMode,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setVendorState({\n      loading: false\n    }));\n    console.error('failed to getVendorPublicInfo - ', e);\n  }\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadVendorPublicInfoMock() {\n  try {\n    yield put(actions.setVendorState({\n      whiteLabelMode: false\n    }));\n    yield delay();\n  } catch (e) {\n    console.error('failed to getVendorPublicInfo - ', e);\n  }\n}\nexport function* vendorSagasMock() {\n  yield takeEvery(actions.loadVendorPublicInfo, loadVendorPublicInfoMock);\n}\nexport function* sagas() {\n  yield takeEvery(actions.loadVendorPublicInfo, loadVendorPublicInfo);\n}","map":{"version":3,"names":["put","takeEvery","api","actions","delay","loadVendorPublicInfo","setVendorState","loading","whiteLabelMode","vendor","getVendorPublicInfo","e","console","error","loadVendorPublicInfoMock","vendorSagasMock","sagas"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/redux-store/vendor/saga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from './reducer';\nimport { delay } from '../auth/utils';\nexport function* loadVendorPublicInfo() {\n  yield put(actions.setVendorState({\n    loading: true\n  }));\n\n  try {\n    const {\n      whiteLabelMode = false\n    } = yield api.vendor.getVendorPublicInfo();\n    yield put(actions.setVendorState({\n      whiteLabelMode,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setVendorState({\n      loading: false\n    }));\n    console.error('failed to getVendorPublicInfo - ', e);\n  }\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadVendorPublicInfoMock() {\n  try {\n    yield put(actions.setVendorState({\n      whiteLabelMode: false\n    }));\n    yield delay();\n  } catch (e) {\n    console.error('failed to getVendorPublicInfo - ', e);\n  }\n}\n\nexport function* vendorSagasMock() {\n  yield takeEvery(actions.loadVendorPublicInfo, loadVendorPublicInfoMock);\n}\nexport function* sagas() {\n  yield takeEvery(actions.loadVendorPublicInfo, loadVendorPublicInfo);\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACnD,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,KAAK,QAAQ,eAAe;AACrC,OAAO,UAAUC,oBAAoB,GAAG;EACtC,MAAML,GAAG,CAACG,OAAO,CAACG,cAAc,CAAC;IAC/BC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;EAEH,IAAI;IACF,MAAM;MACJC,cAAc,GAAG;IACnB,CAAC,GAAG,MAAMN,GAAG,CAACO,MAAM,CAACC,mBAAmB,EAAE;IAC1C,MAAMV,GAAG,CAACG,OAAO,CAACG,cAAc,CAAC;MAC/BE,cAAc;MACdD,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOI,CAAC,EAAE;IACV,MAAMX,GAAG,CAACG,OAAO,CAACG,cAAc,CAAC;MAC/BC,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;IACHK,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,CAAC,CAAC;EACtD;AACF;AACA;AACA;AACA;;AAEA,UAAUG,wBAAwB,GAAG;EACnC,IAAI;IACF,MAAMd,GAAG,CAACG,OAAO,CAACG,cAAc,CAAC;MAC/BE,cAAc,EAAE;IAClB,CAAC,CAAC,CAAC;IACH,MAAMJ,KAAK,EAAE;EACf,CAAC,CAAC,OAAOO,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,CAAC,CAAC;EACtD;AACF;AAEA,OAAO,UAAUI,eAAe,GAAG;EACjC,MAAMd,SAAS,CAACE,OAAO,CAACE,oBAAoB,EAAES,wBAAwB,CAAC;AACzE;AACA,OAAO,UAAUE,KAAK,GAAG;EACvB,MAAMf,SAAS,CAACE,OAAO,CAACE,oBAAoB,EAAEA,oBAAoB,CAAC;AACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}