{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { stripeActions } from './index';\nimport { api } from '@frontegg/rest-api';\nexport function* subscriptionStripeSagas() {\n  yield takeEvery(stripeActions.createCardSetupIntentSecret, createCardSetupIntentSecret);\n}\nfunction createCardSetupIntentSecret(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    yield put(stripeActions.setState({\n      loading: true,\n      error: null,\n      cardSetupIntentSecret: null\n    }));\n    try {\n      const request = {};\n      if (payload) {\n        request.paymentMethodId = payload;\n      }\n      const {\n        setupIntentSecret\n      } = yield call(api.subscriptions.createStripePaymentMethodSetupIntentSecret, request);\n      yield put(stripeActions.setState({\n        cardSetupIntentSecret: setupIntentSecret,\n        loading: false\n      }));\n    } catch (e) {\n      yield put(stripeActions.setError(e.message));\n    }\n  }();\n}","map":{"version":3,"names":["call","put","takeEvery","stripeActions","api","subscriptionStripeSagas","createCardSetupIntentSecret","payload","setState","loading","error","cardSetupIntentSecret","request","paymentMethodId","setupIntentSecret","subscriptions","createStripePaymentMethodSetupIntentSecret","e","setError","message"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/subscriptions/Stripe/saga.js"],"sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { stripeActions } from './index';\nimport { api } from '@frontegg/rest-api';\nexport function* subscriptionStripeSagas() {\n  yield takeEvery(stripeActions.createCardSetupIntentSecret, createCardSetupIntentSecret);\n}\n\nfunction* createCardSetupIntentSecret({\n  payload\n}) {\n  yield put(stripeActions.setState({\n    loading: true,\n    error: null,\n    cardSetupIntentSecret: null\n  }));\n\n  try {\n    const request = {};\n\n    if (payload) {\n      request.paymentMethodId = payload;\n    }\n\n    const {\n      setupIntentSecret\n    } = yield call(api.subscriptions.createStripePaymentMethodSetupIntentSecret, request);\n    yield put(stripeActions.setState({\n      cardSetupIntentSecret: setupIntentSecret,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(stripeActions.setError(e.message));\n  }\n}"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,SAASC,aAAa,QAAQ,SAAS;AACvC,SAASC,GAAG,QAAQ,oBAAoB;AACxC,OAAO,UAAUC,uBAAuB,GAAG;EACzC,MAAMH,SAAS,CAACC,aAAa,CAACG,2BAA2B,EAAEA,2BAA2B,CAAC;AACzF;AAEA,SAAUA,2BAA2B;EAAA,IAAC;IACpCC;EACF,CAAC;EAAA,oBAAE;IACD,MAAMN,GAAG,CAACE,aAAa,CAACK,QAAQ,CAAC;MAC/BC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAAC;IAEH,IAAI;MACF,MAAMC,OAAO,GAAG,CAAC,CAAC;MAElB,IAAIL,OAAO,EAAE;QACXK,OAAO,CAACC,eAAe,GAAGN,OAAO;MACnC;MAEA,MAAM;QACJO;MACF,CAAC,GAAG,MAAMd,IAAI,CAACI,GAAG,CAACW,aAAa,CAACC,0CAA0C,EAAEJ,OAAO,CAAC;MACrF,MAAMX,GAAG,CAACE,aAAa,CAACK,QAAQ,CAAC;QAC/BG,qBAAqB,EAAEG,iBAAiB;QACxCL,OAAO,EAAE;MACX,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACV,MAAMhB,GAAG,CAACE,aAAa,CAACe,QAAQ,CAACD,CAAC,CAACE,OAAO,CAAC,CAAC;IAC9C;EACF,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}