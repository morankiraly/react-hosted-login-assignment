{"ast":null,"code":"import { ISubscriptionStatus, ProviderType } from '@frontegg/rest-api';\nimport { SubscriptionCancellationPolicy, SubscriptionStatus } from './general.interfaces';\nexport function toApiPaymentProviderType(paymentProvider) {\n  return ProviderType.Stripe;\n}\nexport function toSubscriptionCancellation(_ref) {\n  let {\n    policy\n  } = _ref;\n  return {\n    policy: toSubscriptionCancellationPolicy(policy)\n  };\n}\nexport function toSubscriptionCancellationPolicy(policy) {\n  return SubscriptionCancellationPolicy.AT_PERIOD_END;\n}\nexport function toSubscriptionStatus(status) {\n  switch (status) {\n    case ISubscriptionStatus.ACTIVE:\n      return SubscriptionStatus.ACTIVE;\n    case ISubscriptionStatus.INCOMPLETE:\n      return SubscriptionStatus.INCOMPLETE;\n    case ISubscriptionStatus.CANCELED:\n      return SubscriptionStatus.CANCELED;\n    case ISubscriptionStatus.EXPIRED:\n      return SubscriptionStatus.EXPIRED;\n    case ISubscriptionStatus.TRIALING:\n      return SubscriptionStatus.TRIALING;\n    default:\n      return SubscriptionStatus.EXPIRED;\n  }\n}","map":{"version":3,"names":["ISubscriptionStatus","ProviderType","SubscriptionCancellationPolicy","SubscriptionStatus","toApiPaymentProviderType","paymentProvider","Stripe","toSubscriptionCancellation","policy","toSubscriptionCancellationPolicy","AT_PERIOD_END","toSubscriptionStatus","status","ACTIVE","INCOMPLETE","CANCELED","EXPIRED","TRIALING"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/subscriptions/mapper.js"],"sourcesContent":["import { ISubscriptionStatus, ProviderType } from '@frontegg/rest-api';\nimport { SubscriptionCancellationPolicy, SubscriptionStatus } from './general.interfaces';\nexport function toApiPaymentProviderType(paymentProvider) {\n  return ProviderType.Stripe;\n}\nexport function toSubscriptionCancellation({\n  policy\n}) {\n  return {\n    policy: toSubscriptionCancellationPolicy(policy)\n  };\n}\nexport function toSubscriptionCancellationPolicy(policy) {\n  return SubscriptionCancellationPolicy.AT_PERIOD_END;\n}\nexport function toSubscriptionStatus(status) {\n  switch (status) {\n    case ISubscriptionStatus.ACTIVE:\n      return SubscriptionStatus.ACTIVE;\n\n    case ISubscriptionStatus.INCOMPLETE:\n      return SubscriptionStatus.INCOMPLETE;\n\n    case ISubscriptionStatus.CANCELED:\n      return SubscriptionStatus.CANCELED;\n\n    case ISubscriptionStatus.EXPIRED:\n      return SubscriptionStatus.EXPIRED;\n\n    case ISubscriptionStatus.TRIALING:\n      return SubscriptionStatus.TRIALING;\n\n    default:\n      return SubscriptionStatus.EXPIRED;\n  }\n}"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,YAAY,QAAQ,oBAAoB;AACtE,SAASC,8BAA8B,EAAEC,kBAAkB,QAAQ,sBAAsB;AACzF,OAAO,SAASC,wBAAwB,CAACC,eAAe,EAAE;EACxD,OAAOJ,YAAY,CAACK,MAAM;AAC5B;AACA,OAAO,SAASC,0BAA0B,OAEvC;EAAA,IAFwC;IACzCC;EACF,CAAC;EACC,OAAO;IACLA,MAAM,EAAEC,gCAAgC,CAACD,MAAM;EACjD,CAAC;AACH;AACA,OAAO,SAASC,gCAAgC,CAACD,MAAM,EAAE;EACvD,OAAON,8BAA8B,CAACQ,aAAa;AACrD;AACA,OAAO,SAASC,oBAAoB,CAACC,MAAM,EAAE;EAC3C,QAAQA,MAAM;IACZ,KAAKZ,mBAAmB,CAACa,MAAM;MAC7B,OAAOV,kBAAkB,CAACU,MAAM;IAElC,KAAKb,mBAAmB,CAACc,UAAU;MACjC,OAAOX,kBAAkB,CAACW,UAAU;IAEtC,KAAKd,mBAAmB,CAACe,QAAQ;MAC/B,OAAOZ,kBAAkB,CAACY,QAAQ;IAEpC,KAAKf,mBAAmB,CAACgB,OAAO;MAC9B,OAAOb,kBAAkB,CAACa,OAAO;IAEnC,KAAKhB,mBAAmB,CAACiB,QAAQ;MAC/B,OAAOd,kBAAkB,CAACc,QAAQ;IAEpC;MACE,OAAOd,kBAAkB,CAACa,OAAO;EAAC;AAExC"},"metadata":{},"sourceType":"module","externalDependencies":[]}