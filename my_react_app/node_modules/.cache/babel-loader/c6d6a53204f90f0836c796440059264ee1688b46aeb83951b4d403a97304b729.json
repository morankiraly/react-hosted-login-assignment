{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"callback\"],\n  _excluded2 = [\"callback\"],\n  _excluded3 = [\"callback\"],\n  _excluded4 = [\"callback\"],\n  _excluded5 = [\"callback\", \"events\"],\n  _excluded6 = [\"callback\"],\n  _excluded7 = [\"callback\"],\n  _excluded8 = [\"callback\"],\n  _excluded9 = [\"callback\"],\n  _excluded10 = [\"callback\"],\n  _excluded11 = [\"callback\"],\n  _excluded12 = [\"callback\"],\n  _excluded13 = [\"callback\"],\n  _excluded14 = [\"callback\"],\n  _excluded15 = [\"callback\", \"deviceId\"],\n  _excluded16 = [\"callback\", \"deviceId\"],\n  _excluded17 = [\"callback\", \"deviceId\"],\n  _excluded18 = [\"callback\", \"deviceId\"];\nimport { all, call, delay, put, select, takeLeading } from 'redux-saga/effects';\nimport { api, AuthStrategyEnum, ContextHolder, fetch, MFAStrategyEnum } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { FRONTEGG_AFTER_AUTH_REDIRECT_URL, HOSTED_LOGIN_VERIFIER_KEY } from '../../constants';\nimport { UserVeirifedOriginTypes } from '../interfaces';\nimport { LoginFlow, LoginStep } from './interfaces';\nimport { loadAllowSignUps } from '../SignUp/saga';\nimport { MFAStep } from '../MfaState/interfaces';\nimport { dummyIps, userDemo } from '../dummy';\nimport { SamlVendors } from '../SSOState/interfaces';\nimport { loadVendorPublicInfo } from '../../vendor/saga';\nimport { createRandomString, generateCodeChallenge } from '../../helpers';\nimport { ResetPhoneNumberStep } from '../ResetPhoneNumberState/interfaces';\nimport { base64urlDecode, publicKeyCredentialToJSON } from '../utils';\nimport { loadPublicAuthStrategiesPolicy } from '../SecurityPolicyState/saga';\nconst authStrategyLoginStepMap = {\n  [AuthStrategyEnum.Code]: LoginStep.loginWithOtc,\n  [AuthStrategyEnum.EmailAndPassword]: LoginStep.loginWithPassword,\n  [AuthStrategyEnum.MagicLink]: LoginStep.magicLinkPreLoginSuccess,\n  [AuthStrategyEnum.SmsCode]: LoginStep.loginWithSmsOtc\n};\nexport function* afterAuthNavigation() {\n  var _window;\n  const onRedirectTo = ContextHolder.onRedirectTo;\n  const {\n    routes,\n    includeQueryParam\n  } = yield select(state => state.auth);\n  const {\n    loginUrl,\n    logoutUrl,\n    socialLoginCallbackUrl,\n    activateUrl\n  } = routes;\n  let {\n    authenticatedUrl\n  } = routes;\n  const afterAuthRedirect = window.localStorage.getItem(FRONTEGG_AFTER_AUTH_REDIRECT_URL);\n  if (afterAuthRedirect && ![loginUrl, logoutUrl, socialLoginCallbackUrl, activateUrl].includes(afterAuthRedirect)) {\n    authenticatedUrl = afterAuthRedirect;\n  }\n  window.localStorage.removeItem(FRONTEGG_AFTER_AUTH_REDIRECT_URL);\n  yield delay(200);\n  put(actions.resetLoginState());\n  const url = new URL((_window = window) == null ? void 0 : _window.location.href);\n  let redirectUrl = authenticatedUrl;\n  if (url.searchParams.get('redirectUrl')) {\n    var _url$searchParams$get;\n    redirectUrl = (_url$searchParams$get = url.searchParams.get('redirectUrl')) != null ? _url$searchParams$get : authenticatedUrl;\n  } else if (includeQueryParam) {\n    redirectUrl += window.location.search;\n  }\n  onRedirectTo(redirectUrl, {\n    refresh: redirectUrl.startsWith('http')\n  });\n}\nexport function* refreshMetadata() {\n  let ssoACS;\n  try {\n    var _metadata$configurati;\n    const metadata = yield call(api.metadata.getSamlMetadata);\n    ssoACS = metadata == null ? void 0 : (_metadata$configurati = metadata.configuration) == null ? void 0 : _metadata$configurati.acsUrl;\n  } catch (e) {\n    console.error(e);\n  }\n  yield put(actions.setState({\n    ssoACS\n  }));\n}\nexport function* loadSSOPublicConfigurationFunction() {\n  try {\n    const {\n      isActive\n    } = yield call(api.auth.getSSOPublicConfiguration);\n    yield put(actions.setState({\n      isSSOAuth: isActive\n    }));\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport const isMfaRequired = user => {\n  if (user.mfaRequired && user.mfaToken) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    return true;\n  } else {\n    ContextHolder.setAccessToken(user.accessToken);\n    ContextHolder.setUser(user);\n    return false;\n  }\n};\nconst getNumberOfMfaDevices = mfaDevices => {\n  const numberOfWebAuthnDevices = +Boolean(mfaDevices.webauthn.length);\n  const numberOfPhoneDevices = +Boolean(mfaDevices.phones.length);\n  const numberOfAuthenticators = +Boolean(mfaDevices.authenticators.length);\n  const totalDevices = numberOfWebAuthnDevices + numberOfPhoneDevices + numberOfAuthenticators;\n  return {\n    numberOfWebAuthnDevices,\n    numberOfPhoneDevices,\n    numberOfAuthenticators,\n    totalDevices\n  };\n};\nconst getMfaStepForEnrolledUsers = mfaDevices => {\n  const {\n    numberOfPhoneDevices,\n    numberOfAuthenticators,\n    totalDevices\n  } = getNumberOfMfaDevices(mfaDevices);\n  if (totalDevices === 1) {\n    if (numberOfAuthenticators) {\n      return MFAStep.authenticatorApp;\n    } else if (numberOfPhoneDevices) {\n      return MFAStep.smsVerifyCode;\n    }\n  }\n  return MFAStep.verify;\n};\nconst getMfaStepForNotEnrolledUsers = mfaStrategies => {\n  if (mfaStrategies.length === 1) {\n    const [strategy] = mfaStrategies;\n    if (strategy === MFAStrategyEnum.AuthenticatorApp) {\n      return MFAStep.authenticatorApp;\n    } else if (strategy === MFAStrategyEnum.SMS) {\n      return MFAStep.smsSetPhoneNumber;\n    }\n  }\n  return MFAStep.verify;\n};\nexport function* getMfaRequiredState(user) {\n  let step = LoginStep.loginWithTwoFactor;\n  let mfaState = {};\n  const {\n    loginState\n  } = yield select(state => state.auth);\n  const {\n    isAllowedToRemember,\n    mfaDeviceExpiration\n  } = yield call(api.auth.checkIfAllowToRememberMfaDevice, user.mfaToken);\n  const isEnrolled = !(user.hasOwnProperty('mfaEnrolled') && !user.mfaEnrolled);\n  if (isEnrolled) {\n    mfaState = {\n      mfaDevices: user.mfaDevices,\n      step: getMfaStepForEnrolledUsers(user.mfaDevices)\n    };\n  } else {\n    mfaState = {\n      step: getMfaStepForNotEnrolledUsers(user.mfaStrategies),\n      qrCode: user.qrCode,\n      recoveryCode: user.recoveryCode,\n      loading: false,\n      mfaToken: user.mfaToken,\n      mfaStrategies: user.mfaStrategies\n    };\n    step = LoginStep.forceTwoFactor;\n  }\n  let quickLoginState = {};\n  const quickLoginToRegister = localStorage.getItem('register-quick-login');\n  if (quickLoginToRegister) {\n    quickLoginState = {\n      quickLoginToRegister,\n      flow: LoginFlow.RegisterQuickLogin\n    };\n  }\n  return {\n    user: undefined,\n    isAuthenticated: false,\n    mfaState,\n    loginState: _extends({}, loginState, quickLoginState, {\n      mfaToken: user.mfaToken,\n      mfaRequired: user.mfaRequired,\n      loading: false,\n      error: undefined,\n      step,\n      tenantsLoading: true,\n      email: user.userEmail,\n      tenants: [],\n      allowRememberMfaDevice: isAllowedToRemember,\n      mfaDeviceExpiration\n    })\n  };\n}\nexport function* refreshToken() {\n  const {\n    hostedLoginBox\n  } = yield select(state => state.auth);\n  if (hostedLoginBox) {\n    yield call(refreshTokenHosted);\n  } else {\n    yield call(refreshTokenEmbedded);\n  }\n}\nfunction* refreshTokenHosted() {\n  const {\n    user\n  } = yield select(state => state.auth);\n  if (!(user != null && user.refreshToken)) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setState({\n      user: null,\n      isAuthenticated: false\n    }));\n    return;\n  }\n  try {\n    const body = {\n      grant_type: 'refresh_token',\n      refresh_token: user == null ? void 0 : user.refreshToken\n    };\n    const authenticatedUser = yield call(api.auth.exchangeOAuthTokens, body);\n    yield put(actions.setState({\n      user: authenticatedUser,\n      isAuthenticated: true\n    }));\n    yield put(actions.loadTenants());\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setState({\n      user: null,\n      isAuthenticated: false\n    }));\n  }\n}\nfunction* refreshTokenEmbedded() {\n  try {\n    const onRedirectTo = ContextHolder.onRedirectTo;\n    const {\n      routes,\n      loginState\n    } = yield select(state => state.auth);\n    const {\n      user,\n      tenants\n    } = yield call(api.auth.refreshTokenV2);\n    if (isMfaRequired(user)) {\n      const mfaRequiredState = yield getMfaRequiredState(user);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      var _ref, _window2;\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n      const quickLoginToRegister = (_ref = localStorage.getItem('register-quick-login')) != null ? _ref : loginState.quickLoginToRegister;\n      const shouldNavigateToRegisterQuickLogin = quickLoginToRegister && localStorage.getItem(`${user.id}-${quickLoginToRegister}`) !== 'true' && !window.location.pathname.endsWith(routes.logoutUrl);\n      yield put(actions.setTenantsState({\n        tenants,\n        loading: false\n      }));\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true,\n        loginState: _extends({}, loginState, {\n          quickLoginToRegister,\n          flow: shouldNavigateToRegisterQuickLogin ? LoginFlow.RegisterQuickLogin : LoginFlow.Login\n        })\n      }));\n      const url = new URL((_window2 = window) == null ? void 0 : _window2.location.href);\n      const invitationToken = url.searchParams.get('invitationToken');\n      const redirectRoutes = [routes.socialLoginCallbackUrl, routes.oidcRedirectUrl, routes.samlCallbackUrl];\n      if (!invitationToken) {\n        redirectRoutes.push(routes.loginUrl, routes.signUpUrl);\n      }\n      if (shouldNavigateToRegisterQuickLogin) {\n        onRedirectTo(routes.loginUrl);\n      } else if (redirectRoutes.some(url => url && window.location.pathname.endsWith(url))) {\n        if (loginState.isNewUser && routes.signUpSuccessUrl && routes.socialLoginCallbackUrl === window.location.pathname) {\n          onRedirectTo(routes.signUpSuccessUrl, {\n            refresh: routes.signUpSuccessUrl.startsWith('http')\n          });\n        } else {\n          yield afterAuthNavigation();\n        }\n      }\n    }\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setState({\n      user: undefined,\n      isAuthenticated: false\n    }));\n  }\n}\nfunction getUserIP(_ref20) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref20;\n  return function* () {\n    try {\n      const {\n        ip\n      } = yield call(api.metadata.getCurrentUserIpMetadata);\n      yield put(actions.setState({\n        userIp: ip\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (e) {\n      callback == null ? void 0 : callback(false);\n    }\n  }();\n}\nfunction requestAuthorize(_ref21) {\n  let {\n    payload: firstTime\n  } = _ref21;\n  return function* () {\n    const calls = [];\n    if (firstTime) {\n      yield put(actions.setState({\n        isLoading: true\n      }));\n      yield put(actions.loadSocialLoginsConfigurationV2());\n      calls.push(call(loadAllowSignUps));\n      calls.push(call(loadPublicAuthStrategiesPolicy));\n      calls.push(call(loadSSOPublicConfigurationFunction));\n      calls.push(call(loadVendorPublicInfo));\n      calls.push(call(refreshMetadata));\n    }\n    calls.push(call(refreshToken));\n    yield all(calls);\n    yield put(actions.setState({\n      isLoading: false\n    }));\n  }();\n}\nfunction isMFARequiredSSR(_ref22) {\n  let {\n    accessToken,\n    user\n  } = _ref22;\n  return function* () {\n    if (!accessToken) {\n      yield put(actions.setState({\n        user: undefined,\n        isAuthenticated: false\n      }));\n      return;\n    }\n    const onRedirectTo = ContextHolder.onRedirectTo;\n    const {\n      routes\n    } = yield select(state => state.auth);\n    if (isMfaRequired(user)) {\n      const mfaRequiredState = yield getMfaRequiredState(user);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    }\n  }();\n}\nfunction requestAuthorizeSSR(_ref23) {\n  let {\n    payload\n  } = _ref23;\n  return function* () {\n    const calls = [];\n    yield put(actions.loadSocialLoginsConfigurationV2());\n    calls.push(call(loadAllowSignUps));\n    calls.push(call(loadSSOPublicConfigurationFunction));\n    calls.push(call(loadVendorPublicInfo));\n    calls.push(call(refreshMetadata));\n    calls.push(call(isMFARequiredSSR, payload));\n    yield all(calls);\n  }();\n}\nconst getUri = urlStrategy => {\n  if (urlStrategy === 'path') {\n    var _window3;\n    return ((_window3 = window) != null ? _window3 : document).location.pathname;\n  } else {\n    var _window4;\n    let uri = (((_window4 = window) != null ? _window4 : document).location.hash || '#').substring(1);\n    if (uri.indexOf('?') !== -1) {\n      return uri.substring(0, uri.indexOf('?'));\n    } else {\n      return uri;\n    }\n  }\n};\nfunction* requestHostedLoginSilentAuthorize() {\n  const user = yield call(api.auth.silentOAuthRefreshToken);\n  if (user) {\n    yield put(actions.setState({\n      user,\n      isAuthenticated: true\n    }));\n    yield put(actions.loadTenants());\n    yield put(actions.setState({\n      isLoading: false\n    }));\n  } else {\n    throw new Error(`couldn't refresh user token with oauth service`);\n  }\n}\nfunction refreshOrRequestHostedLoginAuthorize(_ref24) {\n  let {\n    payload: additionalParams\n  } = _ref24;\n  return function* () {\n    const {\n      disableSilentRefresh\n    } = yield select(state => ({\n      disableSilentRefresh: state.auth.disableSilentRefresh\n    }));\n    try {\n      if (disableSilentRefresh) {\n        throw new Error('silent refresh is disabled');\n      }\n      yield requestHostedLoginSilentAuthorize();\n    } catch (e) {\n      yield requestHostedLoginAuthorize(additionalParams);\n    }\n  }();\n}\nfunction* requestHostedLoginAuthorize(additionalParams) {\n  const {\n    routes,\n    context,\n    onRedirectTo,\n    urlStrategy\n  } = yield select(state => ({\n    routes: state.auth.routes,\n    onRedirectTo: state.auth.onRedirectTo,\n    context: state.root.context,\n    urlStrategy: state.root.urlStrategy\n  }));\n  const activeUri = getUri(urlStrategy);\n  if (activeUri === routes.hostedLoginRedirectUrl) {\n    console.debug('Calling loginWithRedirect while in hostedLoginCallback route');\n    return;\n  }\n  yield put(actions.setState({\n    isLoading: true\n  })); // Generate the relevant params for the redirect\n\n  const nonce = createRandomString();\n  const code_verifier = createRandomString();\n  const code_challenge = yield call(generateCodeChallenge, code_verifier); // We are saving the verifier in session storage to be able to validate the response\n\n  localStorage.setItem(HOSTED_LOGIN_VERIFIER_KEY, code_verifier);\n  const redirectUrl = `${window.location.origin}${urlStrategy === 'path' ? '' : '#'}${routes.hostedLoginRedirectUrl}`;\n  const baseUrl = fetch.getBaseUrl(context, '/oauth/authorize'); // Hard coded for now\n\n  const oauthUrl = `${baseUrl}/oauth/authorize`;\n  const params = _extends({\n    response_type: 'code',\n    client_id: context.clientId || 'INVALID-CLIENT-ID',\n    scope: 'openid email profile',\n    redirect_uri: redirectUrl,\n    code_challenge: code_challenge,\n    code_challenge_method: 'S256',\n    nonce\n  }, additionalParams);\n  const searchParams = new URLSearchParams(params);\n  const url = `${oauthUrl}?${searchParams.toString()}`;\n  onRedirectTo(url, {\n    refresh: true\n  });\n}\nfunction handleHostedLoginCallback(_ref25) {\n  let {\n    payload\n  } = _ref25;\n  return function* () {\n    // Hard coded for now\n    const code_verifier = localStorage.getItem(HOSTED_LOGIN_VERIFIER_KEY) || 'INVALID-CODE-VERIFIER';\n    const {\n      routes,\n      urlStrategy\n    } = yield select(state => ({\n      routes: state.auth.routes,\n      urlStrategy: state.root.urlStrategy\n    }));\n    const redirectUrl = `${window.location.origin}${urlStrategy === 'path' ? '' : '#'}${routes.hostedLoginRedirectUrl}`;\n    const body = {\n      code: payload.code,\n      redirect_uri: redirectUrl,\n      code_verifier,\n      grant_type: 'authorization_code'\n    };\n    try {\n      const user = yield call(api.auth.exchangeOAuthTokens, body); // TODO: Validate nonce and aud\n\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true\n      }));\n      yield put(actions.loadTenants());\n    } catch (e) {\n      console.error('Failed to exchangeOAuthTokens', e);\n    } finally {\n      yield afterAuthNavigation();\n    }\n  }();\n}\nfunction* changePhoneNumberWithVerification(_ref2) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref2,\n    payload = _objectWithoutPropertiesLoose(_ref2.payload, _excluded);\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const changePhoneRes = yield call(api.auth.changePhoneNumberWithVerification, payload);\n    yield put(actions.setLoginState({\n      phoneNumber: payload.phoneNumber,\n      loading: false,\n      changePhoneId: changePhoneRes.changePhoneId,\n      step: LoginStep.loginWithQuickSmsOtc,\n      error: undefined\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\nfunction* verifyChangePhoneNumber(_ref3) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref3,\n    payload = _objectWithoutPropertiesLoose(_ref3.payload, _excluded2);\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    yield call(api.auth.verifyChangePhoneNumber, payload);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\nfunction* quickSmsPasswordlessPreLogin(_ref4) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref4,\n    payload = _objectWithoutPropertiesLoose(_ref4.payload, _excluded3);\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    })); // TODO: [Typescript 4.8] fix @frontegg/rest-api return value\n    // @ts-ignore\n\n    const preloginRes = yield call(api.auth.passwordlessPreLogin, _extends({}, payload, {\n      type: AuthStrategyEnum.SmsCode\n    }));\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithQuickSmsOtc,\n      loading: false,\n      phoneNumber: preloginRes == null ? void 0 : preloginRes.phoneNumber,\n      error: undefined\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(e);\n  }\n}\nfunction* passwordlessPreLogin(_ref5) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref5,\n    payload = _objectWithoutPropertiesLoose(_ref5.payload, _excluded4);\n  try {\n    const {\n      onRedirectTo,\n      routes\n    } = yield select(_ref26 => {\n      let {\n        auth: {\n          onRedirectTo,\n          routes\n        }\n      } = _ref26;\n      return {\n        onRedirectTo,\n        routes\n      };\n    });\n    yield put(actions.setLoginState({\n      loading: true\n    })); // TODO: [Typescript 4.8] fix @frontegg/rest-api return value\n    // @ts-ignore\n\n    const preloginRes = yield call(api.auth.passwordlessPreLogin, payload);\n    const step = authStrategyLoginStepMap[payload.type];\n    if (step === LoginStep.loginWithSmsOtc && preloginRes.resetPhoneNumberToken) {\n      yield put(actions.setResetPhoneNumberState({\n        resetPhoneNumberToken: preloginRes.resetPhoneNumberToken,\n        step: ResetPhoneNumberStep.VerifyResetPhoneNumber\n      }));\n      onRedirectTo(routes.resetPhoneNumberUrl);\n      return;\n    }\n    yield put(actions.setLoginState({\n      step,\n      loading: false,\n      phoneNumber: preloginRes == null ? void 0 : preloginRes.phoneNumber,\n      email: payload.email,\n      error: undefined\n    }));\n    callback == null ? void 0 : callback();\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n  }\n}\nfunction* passwordlessPostLogin(_ref6) {\n  let {\n      payload: {\n        callback,\n        events\n      }\n    } = _ref6,\n    payload = _objectWithoutPropertiesLoose(_ref6.payload, _excluded5);\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const data = yield call(api.auth.passwordlessPostLogin, payload);\n    const onRedirectTo = ContextHolder.onRedirectTo;\n    const {\n      routes\n    } = yield select(state => state.auth);\n    if (isMfaRequired(data)) {\n      const mfaRequiredState = yield getMfaRequiredState(data);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      const {\n        loginState\n      } = yield select(state => state.auth);\n      const user = yield call(api.auth.generateLoginResponse, data);\n      if (data.emailVerified) {\n        var _events$userVerified;\n        events == null ? void 0 : (_events$userVerified = events.userVerified) == null ? void 0 : _events$userVerified.call(events, {\n          email: user.email,\n          origin: UserVeirifedOriginTypes.PASSWORDLESS,\n          id: user.id,\n          tenantId: user.tenantId,\n          createdAt: new Date(),\n          name: user.name\n        });\n      }\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true\n      }));\n      yield put(actions.setLoginState({\n        error: undefined\n      }));\n      yield put(actions.loadTenants());\n      if (loginState.flow === LoginFlow.Login) {\n        yield afterAuthNavigation();\n      } else {\n        onRedirectTo(routes.loginUrl, {\n          preserveQueryParams: true\n        });\n      }\n      localStorage.removeItem('register-quick-login');\n      callback == null ? void 0 : callback(true);\n    }\n  } catch (e) {\n    var _e$message;\n    yield put(actions.setLoginState({\n      error: (_e$message = e.message) != null ? _e$message : 'Failed to authenticate'\n    }));\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\nfunction verifyInviteToken(_ref27) {\n  let {\n    payload\n  } = _ref27;\n  return function* () {\n    try {\n      yield put(actions.setLoginState({\n        loading: true\n      }));\n      const {\n        name: inviteTokenTenantName\n      } = yield call(api.auth.verifyInviteToken, payload);\n      yield put(actions.setLoginState({\n        inviteTokenTenantName\n      }));\n    } catch (e) {\n      var _e$message2;\n      console.error(e);\n      yield put(actions.setLoginState({\n        inviteTokenError: (_e$message2 = e.message) != null ? _e$message2 : `We couldn't verify your invitation`\n      }));\n    } finally {\n      yield put(actions.setLoginState({\n        loading: false\n      }));\n    }\n  }();\n}\nfunction preLogin(_ref28) {\n  let {\n    payload: {\n      email,\n      recaptchaToken,\n      invitationToken,\n      callback\n    }\n  } = _ref28;\n  return function* () {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    try {\n      const onRedirectTo = yield select(_ref29 => {\n        let {\n          auth: {\n            onRedirectTo\n          }\n        } = _ref29;\n        return onRedirectTo;\n      });\n      let {\n        address,\n        idpType\n      } = yield call(api.auth.preLoginV2, {\n        email\n      });\n      if (address) {\n        if (idpType === SamlVendors.Oidc && !address.includes('redirect_uri')) {\n          const {\n            routes: {\n              oidcRedirectUrl\n            }\n          } = yield select(_ref30 => {\n            let {\n              auth: {\n                routes\n              }\n            } = _ref30;\n            return {\n              routes\n            };\n          });\n          address += `&redirect_uri=${window.location.origin}${oidcRedirectUrl}`;\n        }\n        yield put(actions.setLoginState({\n          step: LoginStep.redirectToSSO,\n          loading: false,\n          ssoRedirectUrl: address\n        }));\n        setTimeout(() => {\n          onRedirectTo(address, {\n            refresh: true\n          });\n        }, 2000);\n      } else {\n        yield ssoPreloginFailed({\n          email,\n          recaptchaToken,\n          callback,\n          invitationToken\n        });\n      }\n    } catch (e) {\n      yield ssoPreloginFailed({\n        email,\n        recaptchaToken,\n        callback,\n        invitationToken\n      });\n    }\n  }();\n}\nfunction* ssoPreloginFailed(_ref7) {\n  let {\n      callback\n    } = _ref7,\n    body = _objectWithoutPropertiesLoose(_ref7, _excluded6);\n  const publicPolicy = yield select(_ref31 => {\n    let {\n      auth: {\n        securityPolicyState: {\n          publicPolicy: {\n            policy: publicPolicy\n          }\n        }\n      }\n    } = _ref31;\n    return publicPolicy;\n  });\n  if (!(publicPolicy != null && publicPolicy.authStrategy)) {\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithPassword,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n    return;\n  }\n  if ((publicPolicy == null ? void 0 : publicPolicy.authStrategy) === AuthStrategyEnum.EmailAndPassword) {\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithPassword,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n  } else if ([AuthStrategyEnum.MagicLink, AuthStrategyEnum.Code, AuthStrategyEnum.SmsCode].includes(publicPolicy == null ? void 0 : publicPolicy.authStrategy)) {\n    yield put(actions.passwordlessPreLogin(_extends({}, body, {\n      type: publicPolicy == null ? void 0 : publicPolicy.authStrategy,\n      callback\n    })));\n  } else {\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithPassword,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n  }\n}\nfunction webAuthnCreateNewDeviceSession(_ref32) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref32;\n  return function* () {\n    try {\n      yield put(actions.setLoginState({\n        loading: true\n      }));\n      const {\n        options\n      } = yield call(api.auth.webAuthnCreateNewDeviceSession);\n      options.user.id = base64urlDecode(options.user.id);\n      options.challenge = base64urlDecode(options.challenge);\n      options.excludeCredentials = [];\n      callback == null ? void 0 : callback(options);\n    } catch (e) {\n      yield put(actions.setLoginState({\n        error: e.message\n      }));\n      callback == null ? void 0 : callback(null);\n    } finally {\n      yield put(actions.setLoginState({\n        loading: false\n      }));\n    }\n  }();\n}\nfunction* webAuthnVerifyNewDeviceSession(_ref8) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref8,\n    body = _objectWithoutPropertiesLoose(_ref8.payload, _excluded7);\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const publicKey = publicKeyCredentialToJSON(body.publicKey);\n    yield call(api.auth.verifyNewDeviceSession, {\n      id: publicKey.id,\n      response: publicKey.response\n    });\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\nfunction* webAuthnPrelogin(_ref9) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref9,\n    body = _objectWithoutPropertiesLoose(_ref9.payload, _excluded8);\n  try {\n    var _options$allowCredent;\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const {\n      options\n    } = yield call(api.auth.webAuthnPreLogin, body);\n    options.challenge = base64urlDecode(options.challenge);\n    options.allowCredentials = (_options$allowCredent = options.allowCredentials) == null ? void 0 : _options$allowCredent.map(credentials => _extends({}, credentials, {\n      id: base64urlDecode(credentials.id)\n    }));\n    yield put(actions.setLoginState({\n      error: undefined\n    }));\n    callback == null ? void 0 : callback(options);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\nfunction* webAuthnPostLogin(_ref10) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref10,\n    body = _objectWithoutPropertiesLoose(_ref10.payload, _excluded9);\n  try {\n    var _publicKey$response$u;\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const publicKey = publicKeyCredentialToJSON(body.publicKey);\n    const data = yield call(api.auth.webAuthnPostLogin, _extends({}, publicKey, {\n      response: _extends({}, publicKey.response, {\n        userHandle: (_publicKey$response$u = publicKey.response.userHandle) != null ? _publicKey$response$u : undefined\n      }),\n      recaptchaToken: body.recaptchaToken,\n      invitationToken: body.invitationToken\n    }));\n    if (isMfaRequired(data)) {\n      const onRedirectTo = ContextHolder.onRedirectTo;\n      const {\n        routes\n      } = yield select(state => state.auth);\n      const mfaRequiredState = yield getMfaRequiredState(data);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      const user = yield call(api.auth.generateLoginResponse, data);\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n      yield put(actions.loadTenants());\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true\n      }));\n      yield put(actions.setLoginState({\n        error: undefined\n      }));\n      yield afterAuthNavigation(); // TODO: Itamar why moving callback to inside the else block\n\n      callback == null ? void 0 : callback(true);\n    } // callback?.(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\nfunction postLogin(_ref33) {\n  let {\n    payload\n  } = _ref33;\n  return function* () {\n    const {\n      onRedirectTo,\n      routes\n    } = yield select(_ref34 => {\n      let {\n        auth: {\n          onRedirectTo,\n          routes\n        }\n      } = _ref34;\n      return {\n        onRedirectTo,\n        routes\n      };\n    });\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    try {\n      const user = yield call(api.auth.postLogin, payload);\n      ContextHolder.setAccessToken(user.accessToken);\n      ContextHolder.setUser(user);\n      yield put(actions.setState({\n        user: !!user.accessToken ? user : undefined,\n        isAuthenticated: !!user.accessToken\n      }));\n      yield afterAuthNavigation();\n    } catch (e) {\n      setTimeout(() => {\n        onRedirectTo(routes.authenticatedUrl);\n      }, 1000);\n      yield put(actions.setLoginState({\n        step: LoginStep.loginWithSSOFailed,\n        loading: false\n      }));\n    }\n  }();\n}\nfunction login(_ref35) {\n  let {\n    payload: {\n      email,\n      password,\n      recaptchaToken,\n      invitationToken,\n      callback\n    }\n  } = _ref35;\n  return function* () {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    try {\n      const user = yield call(api.auth.login, {\n        email,\n        password,\n        recaptchaToken,\n        invitationToken\n      });\n      ContextHolder.setAccessToken(user.accessToken);\n      ContextHolder.setUser(user);\n      const onRedirectTo = ContextHolder.onRedirectTo;\n      const {\n        routes\n      } = yield select(state => state.auth);\n      if (isMfaRequired(user)) {\n        const mfaRequiredState = yield getMfaRequiredState(user);\n        yield put(actions.setState(mfaRequiredState));\n        onRedirectTo(routes.loginUrl, {\n          preserveQueryParams: true\n        });\n      } else {\n        const {\n          loginState\n        } = yield select(state => state.auth);\n        const isAuthenticated = !!user.accessToken;\n        if (user.id) {\n          localStorage.setItem('userId', user.id);\n        }\n        yield put(actions.setState({\n          user,\n          isAuthenticated,\n          loginState: {\n            flow: loginState.flow,\n            quickLoginToRegister: loginState.quickLoginToRegister,\n            email,\n            loading: false,\n            error: undefined,\n            mfaToken: user.mfaToken,\n            step: loginState.flow === LoginFlow.Login ? LoginStep.success : loginState.step,\n            tenants: [],\n            tenantsLoading: true\n          }\n        }));\n        yield put(actions.loadTenants());\n        if (isAuthenticated && loginState.flow === LoginFlow.Login) {\n          yield afterAuthNavigation();\n        }\n      } // TODO: extract item name to constants\n\n      localStorage.removeItem('register-quick-login');\n      callback == null ? void 0 : callback(true);\n    } catch (e) {\n      ContextHolder.setAccessToken(null);\n      ContextHolder.setUser(null);\n      yield put(actions.setLoginState({\n        email,\n        error: e.message,\n        loading: false\n      }));\n    }\n  }();\n}\nfunction loginWithMfa(_ref36) {\n  let {\n    payload: {\n      mfaToken,\n      value,\n      rememberDevice,\n      callback\n    }\n  } = _ref36;\n  return function* () {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    try {\n      const user = yield call(api.auth.loginWithMfa, {\n        mfaToken,\n        value,\n        rememberDevice\n      });\n      const {\n        loginState\n      } = yield select(state => state.auth);\n      const step = loginState.flow === LoginFlow.Login ? LoginStep.success : loginState.step;\n      yield put(actions.setState({\n        loginState: {\n          flow: loginState.flow,\n          quickLoginToRegister: loginState.quickLoginToRegister,\n          loading: false,\n          step,\n          error: undefined,\n          tenantsLoading: true,\n          tenants: []\n        },\n        user,\n        isAuthenticated: true\n      }));\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n      yield put(actions.loadTenants());\n      yield put(actions.setLoginState({\n        error: undefined,\n        loading: false\n      }));\n      if (loginState.flow === LoginFlow.Login) {\n        yield afterAuthNavigation();\n      }\n      callback == null ? void 0 : callback(true);\n    } catch (e) {\n      yield put(actions.setLoginState({\n        error: e.message,\n        loading: false\n      }));\n      callback == null ? void 0 : callback(false, e);\n    }\n  }();\n}\nfunction recoverMfa(_ref37) {\n  let {\n    payload\n  } = _ref37;\n  return function* () {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    try {\n      yield call(api.auth.recoverMfaToken, payload);\n      yield put(actions.setLoginState({\n        loading: false,\n        error: undefined,\n        step: LoginStep.preLogin\n      }));\n      yield put(actions.setState({\n        user: undefined,\n        isAuthenticated: false\n      }));\n    } catch (e) {\n      yield put(actions.setLoginState({\n        error: e.message,\n        loading: false\n      }));\n    }\n  }();\n}\nfunction logout(_ref38) {\n  let {\n    payload\n  } = _ref38;\n  return function* () {\n    const {\n      hostedLoginBox\n    } = yield select(state => state.auth);\n    yield put(actions.setState({\n      isLoading: true\n    }));\n    try {\n      if (hostedLoginBox) {\n        yield call(api.auth.OAuthLogout);\n      } else {\n        yield call(api.auth.logout);\n      }\n    } catch {}\n    yield put(actions.resetState());\n    yield put(actions.requestAuthorize(true));\n    payload == null ? void 0 : payload();\n  }();\n}\nfunction silentLogout(_ref39) {\n  let {\n    payload\n  } = _ref39;\n  return function* () {\n    var _payload$callbackTime;\n    try {\n      yield call(api.auth.logout);\n    } catch {}\n    setTimeout(() => {\n      var _payload$callback;\n      return payload == null ? void 0 : (_payload$callback = payload.callback) == null ? void 0 : _payload$callback.call(payload, true);\n    }, (_payload$callbackTime = payload == null ? void 0 : payload.callbackTimeout) != null ? _payload$callbackTime : 500);\n  }();\n}\nfunction handleEnrollMFAResponse(_ref40) {\n  let {\n    user,\n    tenants\n  } = _ref40;\n  return function* () {\n    const mfaState = {\n      step: MFAStep.recoveryCode,\n      loading: false,\n      error: undefined,\n      saving: false\n    };\n    if (user != null && user.recoveryCode) {\n      mfaState.recoveryCode = user.recoveryCode;\n    }\n    yield put(actions.setMfaState(mfaState));\n    yield put(actions.setUser(user));\n    yield put(actions.setTenantsState({\n      tenants,\n      loading: false\n    }));\n    if (user.id) {\n      localStorage.setItem('userId', user.id);\n    }\n  }();\n}\nfunction handleVerifyMFAResponse(_ref41) {\n  let {\n    user,\n    tenants\n  } = _ref41;\n  return function* () {\n    const {\n      loginState\n    } = yield select(state => state.auth);\n    yield put(actions.setUser(user));\n    yield put(actions.setTenantsState({\n      tenants,\n      loading: false\n    }));\n    if (user.id) {\n      localStorage.setItem('userId', user.id);\n    }\n    if (loginState.flow === LoginFlow.Login) {\n      yield afterAuthNavigation();\n    }\n    yield put(actions.setState({\n      isAuthenticated: true\n    }));\n  }();\n}\nfunction* preEnrollMFASMSForLogin(_ref11) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref11,\n    payload = _objectWithoutPropertiesLoose(_ref11.payload, _excluded10);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const data = yield call(api.auth.preEnrollMFASMSForLogin, payload);\n    yield put(actions.setMfaState({\n      otcToken: data.otcToken,\n      step: MFAStep.smsVerifyCode,\n      phoneNumber: data.phoneNumber\n    }));\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* enrollMFASMSForLogin(_ref12) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref12,\n    payload = _objectWithoutPropertiesLoose(_ref12.payload, _excluded11);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const data = yield call(api.auth.enrollMFASMSForLogin, payload);\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleEnrollMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* preEnrollMFAWebAuthnForLogin(_ref13) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref13,\n    payload = _objectWithoutPropertiesLoose(_ref13.payload, _excluded12);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    var _data$options$exclude;\n    const data = yield call(api.auth.preEnrollMFAWebAuthnForLogin, payload);\n    const options = _extends({}, data.options, {\n      challenge: base64urlDecode(data.options.challenge),\n      user: _extends({}, data.options.user, {\n        id: base64urlDecode(data.options.user.id)\n      }),\n      excludeCredentials: (_data$options$exclude = data.options.excludeCredentials) == null ? void 0 : _data$options$exclude.map(credentials => _extends({}, credentials, {\n        id: base64urlDecode(credentials.id)\n      }))\n    });\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback({\n      options,\n      webauthnToken: data.webauthnToken\n    });\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* enrollMFAWebAuthnForLogin(_ref14) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref14,\n    payload = _objectWithoutPropertiesLoose(_ref14.payload, _excluded13);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const publicKey = publicKeyCredentialToJSON(payload.publicKey);\n    const data = yield call(api.auth.enrollMFAWebAuthnForLogin, _extends({}, payload, {\n      options: publicKey\n    }));\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleEnrollMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* enrollMFAAuthenticatorAppForLogin(_ref15) {\n  let {\n      payload: {\n        callback\n      }\n    } = _ref15,\n    payload = _objectWithoutPropertiesLoose(_ref15.payload, _excluded14);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const data = yield call(api.auth.enrollMFAAuthenticatorAppForLogin, payload);\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleEnrollMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* preVerifyMFASMSForLogin(_ref16) {\n  let {\n      payload: {\n        callback,\n        deviceId\n      }\n    } = _ref16,\n    payload = _objectWithoutPropertiesLoose(_ref16.payload, _excluded15);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const data = yield call(api.auth.preVerifyMFASMSForLogin, deviceId, payload);\n    yield put(actions.setMfaState({\n      otcToken: data.otcToken,\n      step: MFAStep.smsVerifyCode,\n      phoneNumber: data.phoneNumber\n    }));\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* verifyMFASMSForLogin(_ref17) {\n  let {\n      payload: {\n        callback,\n        deviceId\n      }\n    } = _ref17,\n    payload = _objectWithoutPropertiesLoose(_ref17.payload, _excluded16);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const data = yield call(api.auth.verifyMFASMSForLogin, deviceId, payload);\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleVerifyMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* preVerifyMFAWebAuthnForLogin(_ref18) {\n  let {\n      payload: {\n        callback,\n        deviceId\n      }\n    } = _ref18,\n    payload = _objectWithoutPropertiesLoose(_ref18.payload, _excluded17);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    var _data$options$allowCr;\n    const data = yield call(api.auth.preVerifyMFAWebAuthnForLogin, deviceId, payload);\n    const options = _extends({}, data.options, {\n      challenge: base64urlDecode(data.options.challenge),\n      allowCredentials: (_data$options$allowCr = data.options.allowCredentials) == null ? void 0 : _data$options$allowCr.map(credentials => _extends({}, credentials, {\n        id: base64urlDecode(credentials.id)\n      }))\n    });\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback({\n      options,\n      webauthnToken: data.webauthnToken\n    });\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nfunction* verifyMFAWebAuthnForLogin(_ref19) {\n  let {\n      payload: {\n        callback,\n        deviceId\n      }\n    } = _ref19,\n    payload = _objectWithoutPropertiesLoose(_ref19.payload, _excluded18);\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n  try {\n    const publicKey = publicKeyCredentialToJSON(payload.publicKey);\n    const data = yield call(api.auth.verifyMFAWebAuthnForLogin, deviceId, _extends({}, payload, {\n      options: publicKey\n    }));\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleVerifyMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\nexport function* loginSagas() {\n  yield takeLeading(actions.requestAuthorize, requestAuthorize);\n  yield takeLeading(actions.requestAuthorizeSSR, requestAuthorizeSSR);\n  yield takeLeading(actions.requestHostedLoginAuthorize, refreshOrRequestHostedLoginAuthorize);\n  yield takeLeading(actions.handleHostedLoginCallback, handleHostedLoginCallback);\n  yield takeLeading(actions.preLogin, preLogin);\n  yield takeLeading(actions.postLogin, postLogin);\n  yield takeLeading(actions.login, login);\n  yield takeLeading(actions.logout, logout);\n  yield takeLeading(actions.silentLogout, silentLogout);\n  yield takeLeading(actions.loginWithMfa, loginWithMfa);\n  yield takeLeading(actions.recoverMfa, recoverMfa);\n  yield takeLeading(actions.quickSmsPasswordlessPreLogin, quickSmsPasswordlessPreLogin);\n  yield takeLeading(actions.changePhoneNumberWithVerification, changePhoneNumberWithVerification);\n  yield takeLeading(actions.verifyChangePhoneNumber, verifyChangePhoneNumber);\n  yield takeLeading(actions.passwordlessPreLogin, passwordlessPreLogin);\n  yield takeLeading(actions.passwordlessPostLogin, passwordlessPostLogin);\n  yield takeLeading(actions.verifyInviteToken, verifyInviteToken);\n  yield takeLeading(actions.webAuthnPrelogin, webAuthnPrelogin);\n  yield takeLeading(actions.webAuthnPostLogin, webAuthnPostLogin);\n  yield takeLeading(actions.webAuthnCreateNewDeviceSession, webAuthnCreateNewDeviceSession);\n  yield takeLeading(actions.webAuthnVerifyNewDeviceSession, webAuthnVerifyNewDeviceSession);\n  yield takeLeading(actions.afterAuthNavigation, afterAuthNavigation);\n  yield takeLeading(actions.getUserIP, getUserIP);\n  yield takeLeading(actions.preEnrollMFASMSForLogin, preEnrollMFASMSForLogin);\n  yield takeLeading(actions.enrollMFASMSForLogin, enrollMFASMSForLogin);\n  yield takeLeading(actions.preEnrollMFAWebAuthnForLogin, preEnrollMFAWebAuthnForLogin);\n  yield takeLeading(actions.enrollMFAWebAuthnForLogin, enrollMFAWebAuthnForLogin);\n  yield takeLeading(actions.enrollMFAAuthenticatorAppForLogin, enrollMFAAuthenticatorAppForLogin);\n  yield takeLeading(actions.preVerifyMFASMSForLogin, preVerifyMFASMSForLogin);\n  yield takeLeading(actions.verifyMFASMSForLogin, verifyMFASMSForLogin);\n  yield takeLeading(actions.preVerifyMFAWebAuthnForLogin, preVerifyMFAWebAuthnForLogin);\n  yield takeLeading(actions.verifyMFAWebAuthnForLogin, verifyMFAWebAuthnForLogin);\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction requestAuthorizeMock(_ref42) {\n  let {\n    payload: firstTime\n  } = _ref42;\n  return function* () {\n    if (firstTime) {\n      yield put(actions.setState({\n        isLoading: true\n      }));\n    }\n    const user = userDemo;\n    yield put(actions.loadTenants());\n    yield put(actions.setState({\n      user,\n      isAuthenticated: true,\n      isLoading: false\n    }));\n  }();\n}\nfunction getUserIPMock(_ref43) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref43;\n  return function* () {\n    try {\n      const {\n        ip\n      } = dummyIps[0];\n      yield put(actions.setState({\n        userIp: ip\n      }));\n      callback == null ? void 0 : callback(true, ip);\n    } catch (e) {\n      callback == null ? void 0 : callback(false, e);\n    }\n  }();\n}\nexport function* loginSagasMock() {\n  yield takeLeading(actions.requestAuthorize, requestAuthorizeMock);\n  yield takeLeading(actions.afterAuthNavigation, afterAuthNavigation);\n  yield takeLeading(actions.getUserIP, getUserIPMock);\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","_excluded3","_excluded4","_excluded5","_excluded6","_excluded7","_excluded8","_excluded9","_excluded10","_excluded11","_excluded12","_excluded13","_excluded14","_excluded15","_excluded16","_excluded17","_excluded18","all","call","delay","put","select","takeLeading","api","AuthStrategyEnum","ContextHolder","fetch","MFAStrategyEnum","actions","FRONTEGG_AFTER_AUTH_REDIRECT_URL","HOSTED_LOGIN_VERIFIER_KEY","UserVeirifedOriginTypes","LoginFlow","LoginStep","loadAllowSignUps","MFAStep","dummyIps","userDemo","SamlVendors","loadVendorPublicInfo","createRandomString","generateCodeChallenge","ResetPhoneNumberStep","base64urlDecode","publicKeyCredentialToJSON","loadPublicAuthStrategiesPolicy","authStrategyLoginStepMap","Code","loginWithOtc","EmailAndPassword","loginWithPassword","MagicLink","magicLinkPreLoginSuccess","SmsCode","loginWithSmsOtc","afterAuthNavigation","_window","onRedirectTo","routes","includeQueryParam","state","auth","loginUrl","logoutUrl","socialLoginCallbackUrl","activateUrl","authenticatedUrl","afterAuthRedirect","window","localStorage","getItem","includes","removeItem","resetLoginState","url","URL","location","href","redirectUrl","searchParams","get","_url$searchParams$get","search","refresh","startsWith","refreshMetadata","ssoACS","_metadata$configurati","metadata","getSamlMetadata","configuration","acsUrl","e","console","error","setState","loadSSOPublicConfigurationFunction","isActive","getSSOPublicConfiguration","isSSOAuth","isMfaRequired","user","mfaRequired","mfaToken","setAccessToken","setUser","accessToken","getNumberOfMfaDevices","mfaDevices","numberOfWebAuthnDevices","Boolean","webauthn","length","numberOfPhoneDevices","phones","numberOfAuthenticators","authenticators","totalDevices","getMfaStepForEnrolledUsers","authenticatorApp","smsVerifyCode","verify","getMfaStepForNotEnrolledUsers","mfaStrategies","strategy","AuthenticatorApp","SMS","smsSetPhoneNumber","getMfaRequiredState","step","loginWithTwoFactor","mfaState","loginState","isAllowedToRemember","mfaDeviceExpiration","checkIfAllowToRememberMfaDevice","isEnrolled","hasOwnProperty","mfaEnrolled","qrCode","recoveryCode","loading","forceTwoFactor","quickLoginState","quickLoginToRegister","flow","RegisterQuickLogin","undefined","isAuthenticated","tenantsLoading","email","userEmail","tenants","allowRememberMfaDevice","refreshToken","hostedLoginBox","refreshTokenHosted","refreshTokenEmbedded","body","grant_type","refresh_token","authenticatedUser","exchangeOAuthTokens","loadTenants","refreshTokenV2","mfaRequiredState","preserveQueryParams","_ref","_window2","id","setItem","shouldNavigateToRegisterQuickLogin","pathname","endsWith","setTenantsState","Login","invitationToken","redirectRoutes","oidcRedirectUrl","samlCallbackUrl","push","signUpUrl","some","isNewUser","signUpSuccessUrl","getUserIP","payload","callback","ip","getCurrentUserIpMetadata","userIp","requestAuthorize","firstTime","calls","isLoading","loadSocialLoginsConfigurationV2","isMFARequiredSSR","requestAuthorizeSSR","getUri","urlStrategy","_window3","document","_window4","uri","hash","substring","indexOf","requestHostedLoginSilentAuthorize","silentOAuthRefreshToken","Error","refreshOrRequestHostedLoginAuthorize","additionalParams","disableSilentRefresh","requestHostedLoginAuthorize","context","root","activeUri","hostedLoginRedirectUrl","debug","nonce","code_verifier","code_challenge","origin","baseUrl","getBaseUrl","oauthUrl","params","response_type","client_id","clientId","scope","redirect_uri","code_challenge_method","URLSearchParams","toString","handleHostedLoginCallback","code","changePhoneNumberWithVerification","_ref2","setLoginState","changePhoneRes","phoneNumber","changePhoneId","loginWithQuickSmsOtc","message","verifyChangePhoneNumber","_ref3","quickSmsPasswordlessPreLogin","_ref4","preloginRes","passwordlessPreLogin","type","_ref5","resetPhoneNumberToken","setResetPhoneNumberState","VerifyResetPhoneNumber","resetPhoneNumberUrl","passwordlessPostLogin","_ref6","events","data","generateLoginResponse","emailVerified","_events$userVerified","userVerified","PASSWORDLESS","tenantId","createdAt","Date","name","_e$message","verifyInviteToken","inviteTokenTenantName","_e$message2","inviteTokenError","preLogin","recaptchaToken","address","idpType","preLoginV2","Oidc","redirectToSSO","ssoRedirectUrl","setTimeout","ssoPreloginFailed","_ref7","publicPolicy","securityPolicyState","policy","authStrategy","webAuthnCreateNewDeviceSession","options","challenge","excludeCredentials","webAuthnVerifyNewDeviceSession","_ref8","publicKey","verifyNewDeviceSession","response","webAuthnPrelogin","_ref9","_options$allowCredent","webAuthnPreLogin","allowCredentials","map","credentials","webAuthnPostLogin","_ref10","_publicKey$response$u","userHandle","postLogin","loginWithSSOFailed","login","password","success","loginWithMfa","value","rememberDevice","recoverMfa","recoverMfaToken","logout","OAuthLogout","resetState","silentLogout","_payload$callbackTime","_payload$callback","callbackTimeout","handleEnrollMFAResponse","saving","setMfaState","handleVerifyMFAResponse","preEnrollMFASMSForLogin","_ref11","otcToken","enrollMFASMSForLogin","_ref12","generateLoginResponseV2","preEnrollMFAWebAuthnForLogin","_ref13","_data$options$exclude","webauthnToken","enrollMFAWebAuthnForLogin","_ref14","enrollMFAAuthenticatorAppForLogin","_ref15","preVerifyMFASMSForLogin","_ref16","deviceId","verifyMFASMSForLogin","_ref17","preVerifyMFAWebAuthnForLogin","_ref18","_data$options$allowCr","verifyMFAWebAuthnForLogin","_ref19","loginSagas","requestAuthorizeMock","getUserIPMock","loginSagasMock"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/redux-store/auth/LoginState/saga.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"callback\"],\n      _excluded2 = [\"callback\"],\n      _excluded3 = [\"callback\"],\n      _excluded4 = [\"callback\"],\n      _excluded5 = [\"callback\", \"events\"],\n      _excluded6 = [\"callback\"],\n      _excluded7 = [\"callback\"],\n      _excluded8 = [\"callback\"],\n      _excluded9 = [\"callback\"],\n      _excluded10 = [\"callback\"],\n      _excluded11 = [\"callback\"],\n      _excluded12 = [\"callback\"],\n      _excluded13 = [\"callback\"],\n      _excluded14 = [\"callback\"],\n      _excluded15 = [\"callback\", \"deviceId\"],\n      _excluded16 = [\"callback\", \"deviceId\"],\n      _excluded17 = [\"callback\", \"deviceId\"],\n      _excluded18 = [\"callback\", \"deviceId\"];\nimport { all, call, delay, put, select, takeLeading } from 'redux-saga/effects';\nimport { api, AuthStrategyEnum, ContextHolder, fetch, MFAStrategyEnum } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { FRONTEGG_AFTER_AUTH_REDIRECT_URL, HOSTED_LOGIN_VERIFIER_KEY } from '../../constants';\nimport { UserVeirifedOriginTypes } from '../interfaces';\nimport { LoginFlow, LoginStep } from './interfaces';\nimport { loadAllowSignUps } from '../SignUp/saga';\nimport { MFAStep } from '../MfaState/interfaces';\nimport { dummyIps, userDemo } from '../dummy';\nimport { SamlVendors } from '../SSOState/interfaces';\nimport { loadVendorPublicInfo } from '../../vendor/saga';\nimport { createRandomString, generateCodeChallenge } from '../../helpers';\nimport { ResetPhoneNumberStep } from '../ResetPhoneNumberState/interfaces';\nimport { base64urlDecode, publicKeyCredentialToJSON } from '../utils';\nimport { loadPublicAuthStrategiesPolicy } from '../SecurityPolicyState/saga';\nconst authStrategyLoginStepMap = {\n  [AuthStrategyEnum.Code]: LoginStep.loginWithOtc,\n  [AuthStrategyEnum.EmailAndPassword]: LoginStep.loginWithPassword,\n  [AuthStrategyEnum.MagicLink]: LoginStep.magicLinkPreLoginSuccess,\n  [AuthStrategyEnum.SmsCode]: LoginStep.loginWithSmsOtc\n};\nexport function* afterAuthNavigation() {\n  var _window;\n\n  const onRedirectTo = ContextHolder.onRedirectTo;\n  const {\n    routes,\n    includeQueryParam\n  } = yield select(state => state.auth);\n  const {\n    loginUrl,\n    logoutUrl,\n    socialLoginCallbackUrl,\n    activateUrl\n  } = routes;\n  let {\n    authenticatedUrl\n  } = routes;\n  const afterAuthRedirect = window.localStorage.getItem(FRONTEGG_AFTER_AUTH_REDIRECT_URL);\n\n  if (afterAuthRedirect && ![loginUrl, logoutUrl, socialLoginCallbackUrl, activateUrl].includes(afterAuthRedirect)) {\n    authenticatedUrl = afterAuthRedirect;\n  }\n\n  window.localStorage.removeItem(FRONTEGG_AFTER_AUTH_REDIRECT_URL);\n  yield delay(200);\n  put(actions.resetLoginState());\n  const url = new URL((_window = window) == null ? void 0 : _window.location.href);\n  let redirectUrl = authenticatedUrl;\n\n  if (url.searchParams.get('redirectUrl')) {\n    var _url$searchParams$get;\n\n    redirectUrl = (_url$searchParams$get = url.searchParams.get('redirectUrl')) != null ? _url$searchParams$get : authenticatedUrl;\n  } else if (includeQueryParam) {\n    redirectUrl += window.location.search;\n  }\n\n  onRedirectTo(redirectUrl, {\n    refresh: redirectUrl.startsWith('http')\n  });\n}\nexport function* refreshMetadata() {\n  let ssoACS;\n\n  try {\n    var _metadata$configurati;\n\n    const metadata = yield call(api.metadata.getSamlMetadata);\n    ssoACS = metadata == null ? void 0 : (_metadata$configurati = metadata.configuration) == null ? void 0 : _metadata$configurati.acsUrl;\n  } catch (e) {\n    console.error(e);\n  }\n\n  yield put(actions.setState({\n    ssoACS\n  }));\n}\nexport function* loadSSOPublicConfigurationFunction() {\n  try {\n    const {\n      isActive\n    } = yield call(api.auth.getSSOPublicConfiguration);\n    yield put(actions.setState({\n      isSSOAuth: isActive\n    }));\n  } catch (e) {\n    console.error(e);\n  }\n}\nexport const isMfaRequired = user => {\n  if (user.mfaRequired && user.mfaToken) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    return true;\n  } else {\n    ContextHolder.setAccessToken(user.accessToken);\n    ContextHolder.setUser(user);\n    return false;\n  }\n};\n\nconst getNumberOfMfaDevices = mfaDevices => {\n  const numberOfWebAuthnDevices = +Boolean(mfaDevices.webauthn.length);\n  const numberOfPhoneDevices = +Boolean(mfaDevices.phones.length);\n  const numberOfAuthenticators = +Boolean(mfaDevices.authenticators.length);\n  const totalDevices = numberOfWebAuthnDevices + numberOfPhoneDevices + numberOfAuthenticators;\n  return {\n    numberOfWebAuthnDevices,\n    numberOfPhoneDevices,\n    numberOfAuthenticators,\n    totalDevices\n  };\n};\n\nconst getMfaStepForEnrolledUsers = mfaDevices => {\n  const {\n    numberOfPhoneDevices,\n    numberOfAuthenticators,\n    totalDevices\n  } = getNumberOfMfaDevices(mfaDevices);\n\n  if (totalDevices === 1) {\n    if (numberOfAuthenticators) {\n      return MFAStep.authenticatorApp;\n    } else if (numberOfPhoneDevices) {\n      return MFAStep.smsVerifyCode;\n    }\n  }\n\n  return MFAStep.verify;\n};\n\nconst getMfaStepForNotEnrolledUsers = mfaStrategies => {\n  if (mfaStrategies.length === 1) {\n    const [strategy] = mfaStrategies;\n\n    if (strategy === MFAStrategyEnum.AuthenticatorApp) {\n      return MFAStep.authenticatorApp;\n    } else if (strategy === MFAStrategyEnum.SMS) {\n      return MFAStep.smsSetPhoneNumber;\n    }\n  }\n\n  return MFAStep.verify;\n};\n\nexport function* getMfaRequiredState(user) {\n  let step = LoginStep.loginWithTwoFactor;\n  let mfaState = {};\n  const {\n    loginState\n  } = yield select(state => state.auth);\n  const {\n    isAllowedToRemember,\n    mfaDeviceExpiration\n  } = yield call(api.auth.checkIfAllowToRememberMfaDevice, user.mfaToken);\n  const isEnrolled = !(user.hasOwnProperty('mfaEnrolled') && !user.mfaEnrolled);\n\n  if (isEnrolled) {\n    mfaState = {\n      mfaDevices: user.mfaDevices,\n      step: getMfaStepForEnrolledUsers(user.mfaDevices)\n    };\n  } else {\n    mfaState = {\n      step: getMfaStepForNotEnrolledUsers(user.mfaStrategies),\n      qrCode: user.qrCode,\n      recoveryCode: user.recoveryCode,\n      loading: false,\n      mfaToken: user.mfaToken,\n      mfaStrategies: user.mfaStrategies\n    };\n    step = LoginStep.forceTwoFactor;\n  }\n\n  let quickLoginState = {};\n  const quickLoginToRegister = localStorage.getItem('register-quick-login');\n\n  if (quickLoginToRegister) {\n    quickLoginState = {\n      quickLoginToRegister,\n      flow: LoginFlow.RegisterQuickLogin\n    };\n  }\n\n  return {\n    user: undefined,\n    isAuthenticated: false,\n    mfaState,\n    loginState: _extends({}, loginState, quickLoginState, {\n      mfaToken: user.mfaToken,\n      mfaRequired: user.mfaRequired,\n      loading: false,\n      error: undefined,\n      step,\n      tenantsLoading: true,\n      email: user.userEmail,\n      tenants: [],\n      allowRememberMfaDevice: isAllowedToRemember,\n      mfaDeviceExpiration\n    })\n  };\n}\nexport function* refreshToken() {\n  const {\n    hostedLoginBox\n  } = yield select(state => state.auth);\n\n  if (hostedLoginBox) {\n    yield call(refreshTokenHosted);\n  } else {\n    yield call(refreshTokenEmbedded);\n  }\n}\n\nfunction* refreshTokenHosted() {\n  const {\n    user\n  } = yield select(state => state.auth);\n\n  if (!(user != null && user.refreshToken)) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setState({\n      user: null,\n      isAuthenticated: false\n    }));\n    return;\n  }\n\n  try {\n    const body = {\n      grant_type: 'refresh_token',\n      refresh_token: user == null ? void 0 : user.refreshToken\n    };\n    const authenticatedUser = yield call(api.auth.exchangeOAuthTokens, body);\n    yield put(actions.setState({\n      user: authenticatedUser,\n      isAuthenticated: true\n    }));\n    yield put(actions.loadTenants());\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setState({\n      user: null,\n      isAuthenticated: false\n    }));\n  }\n}\n\nfunction* refreshTokenEmbedded() {\n  try {\n    const onRedirectTo = ContextHolder.onRedirectTo;\n    const {\n      routes,\n      loginState\n    } = yield select(state => state.auth);\n    const {\n      user,\n      tenants\n    } = yield call(api.auth.refreshTokenV2);\n\n    if (isMfaRequired(user)) {\n      const mfaRequiredState = yield getMfaRequiredState(user);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      var _ref, _window2;\n\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n\n      const quickLoginToRegister = (_ref = localStorage.getItem('register-quick-login')) != null ? _ref : loginState.quickLoginToRegister;\n      const shouldNavigateToRegisterQuickLogin = quickLoginToRegister && localStorage.getItem(`${user.id}-${quickLoginToRegister}`) !== 'true' && !window.location.pathname.endsWith(routes.logoutUrl);\n      yield put(actions.setTenantsState({\n        tenants,\n        loading: false\n      }));\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true,\n        loginState: _extends({}, loginState, {\n          quickLoginToRegister,\n          flow: shouldNavigateToRegisterQuickLogin ? LoginFlow.RegisterQuickLogin : LoginFlow.Login\n        })\n      }));\n      const url = new URL((_window2 = window) == null ? void 0 : _window2.location.href);\n      const invitationToken = url.searchParams.get('invitationToken');\n      const redirectRoutes = [routes.socialLoginCallbackUrl, routes.oidcRedirectUrl, routes.samlCallbackUrl];\n\n      if (!invitationToken) {\n        redirectRoutes.push(routes.loginUrl, routes.signUpUrl);\n      }\n\n      if (shouldNavigateToRegisterQuickLogin) {\n        onRedirectTo(routes.loginUrl);\n      } else if (redirectRoutes.some(url => url && window.location.pathname.endsWith(url))) {\n        if (loginState.isNewUser && routes.signUpSuccessUrl && routes.socialLoginCallbackUrl === window.location.pathname) {\n          onRedirectTo(routes.signUpSuccessUrl, {\n            refresh: routes.signUpSuccessUrl.startsWith('http')\n          });\n        } else {\n          yield afterAuthNavigation();\n        }\n      }\n    }\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setState({\n      user: undefined,\n      isAuthenticated: false\n    }));\n  }\n}\n\nfunction* getUserIP({\n  payload: {\n    callback\n  }\n}) {\n  try {\n    const {\n      ip\n    } = yield call(api.metadata.getCurrentUserIpMetadata);\n    yield put(actions.setState({\n      userIp: ip\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    callback == null ? void 0 : callback(false);\n  }\n}\n\nfunction* requestAuthorize({\n  payload: firstTime\n}) {\n  const calls = [];\n\n  if (firstTime) {\n    yield put(actions.setState({\n      isLoading: true\n    }));\n    yield put(actions.loadSocialLoginsConfigurationV2());\n    calls.push(call(loadAllowSignUps));\n    calls.push(call(loadPublicAuthStrategiesPolicy));\n    calls.push(call(loadSSOPublicConfigurationFunction));\n    calls.push(call(loadVendorPublicInfo));\n    calls.push(call(refreshMetadata));\n  }\n\n  calls.push(call(refreshToken));\n  yield all(calls);\n  yield put(actions.setState({\n    isLoading: false\n  }));\n}\n\nfunction* isMFARequiredSSR({\n  accessToken,\n  user\n}) {\n  if (!accessToken) {\n    yield put(actions.setState({\n      user: undefined,\n      isAuthenticated: false\n    }));\n    return;\n  }\n\n  const onRedirectTo = ContextHolder.onRedirectTo;\n  const {\n    routes\n  } = yield select(state => state.auth);\n\n  if (isMfaRequired(user)) {\n    const mfaRequiredState = yield getMfaRequiredState(user);\n    yield put(actions.setState(mfaRequiredState));\n    onRedirectTo(routes.loginUrl, {\n      preserveQueryParams: true\n    });\n  }\n}\n\nfunction* requestAuthorizeSSR({\n  payload\n}) {\n  const calls = [];\n  yield put(actions.loadSocialLoginsConfigurationV2());\n  calls.push(call(loadAllowSignUps));\n  calls.push(call(loadSSOPublicConfigurationFunction));\n  calls.push(call(loadVendorPublicInfo));\n  calls.push(call(refreshMetadata));\n  calls.push(call(isMFARequiredSSR, payload));\n  yield all(calls);\n}\n\nconst getUri = urlStrategy => {\n  if (urlStrategy === 'path') {\n    var _window3;\n\n    return ((_window3 = window) != null ? _window3 : document).location.pathname;\n  } else {\n    var _window4;\n\n    let uri = (((_window4 = window) != null ? _window4 : document).location.hash || '#').substring(1);\n\n    if (uri.indexOf('?') !== -1) {\n      return uri.substring(0, uri.indexOf('?'));\n    } else {\n      return uri;\n    }\n  }\n};\n\nfunction* requestHostedLoginSilentAuthorize() {\n  const user = yield call(api.auth.silentOAuthRefreshToken);\n\n  if (user) {\n    yield put(actions.setState({\n      user,\n      isAuthenticated: true\n    }));\n    yield put(actions.loadTenants());\n    yield put(actions.setState({\n      isLoading: false\n    }));\n  } else {\n    throw new Error(`couldn't refresh user token with oauth service`);\n  }\n}\n\nfunction* refreshOrRequestHostedLoginAuthorize({\n  payload: additionalParams\n}) {\n  const {\n    disableSilentRefresh\n  } = yield select(state => ({\n    disableSilentRefresh: state.auth.disableSilentRefresh\n  }));\n\n  try {\n    if (disableSilentRefresh) {\n      throw new Error('silent refresh is disabled');\n    }\n\n    yield requestHostedLoginSilentAuthorize();\n  } catch (e) {\n    yield requestHostedLoginAuthorize(additionalParams);\n  }\n}\n\nfunction* requestHostedLoginAuthorize(additionalParams) {\n  const {\n    routes,\n    context,\n    onRedirectTo,\n    urlStrategy\n  } = yield select(state => ({\n    routes: state.auth.routes,\n    onRedirectTo: state.auth.onRedirectTo,\n    context: state.root.context,\n    urlStrategy: state.root.urlStrategy\n  }));\n  const activeUri = getUri(urlStrategy);\n\n  if (activeUri === routes.hostedLoginRedirectUrl) {\n    console.debug('Calling loginWithRedirect while in hostedLoginCallback route');\n    return;\n  }\n\n  yield put(actions.setState({\n    isLoading: true\n  })); // Generate the relevant params for the redirect\n\n  const nonce = createRandomString();\n  const code_verifier = createRandomString();\n  const code_challenge = yield call(generateCodeChallenge, code_verifier); // We are saving the verifier in session storage to be able to validate the response\n\n  localStorage.setItem(HOSTED_LOGIN_VERIFIER_KEY, code_verifier);\n  const redirectUrl = `${window.location.origin}${urlStrategy === 'path' ? '' : '#'}${routes.hostedLoginRedirectUrl}`;\n  const baseUrl = fetch.getBaseUrl(context, '/oauth/authorize'); // Hard coded for now\n\n  const oauthUrl = `${baseUrl}/oauth/authorize`;\n\n  const params = _extends({\n    response_type: 'code',\n    client_id: context.clientId || 'INVALID-CLIENT-ID',\n    scope: 'openid email profile',\n    redirect_uri: redirectUrl,\n    code_challenge: code_challenge,\n    code_challenge_method: 'S256',\n    nonce\n  }, additionalParams);\n\n  const searchParams = new URLSearchParams(params);\n  const url = `${oauthUrl}?${searchParams.toString()}`;\n  onRedirectTo(url, {\n    refresh: true\n  });\n}\n\nfunction* handleHostedLoginCallback({\n  payload\n}) {\n  // Hard coded for now\n  const code_verifier = localStorage.getItem(HOSTED_LOGIN_VERIFIER_KEY) || 'INVALID-CODE-VERIFIER';\n  const {\n    routes,\n    urlStrategy\n  } = yield select(state => ({\n    routes: state.auth.routes,\n    urlStrategy: state.root.urlStrategy\n  }));\n  const redirectUrl = `${window.location.origin}${urlStrategy === 'path' ? '' : '#'}${routes.hostedLoginRedirectUrl}`;\n  const body = {\n    code: payload.code,\n    redirect_uri: redirectUrl,\n    code_verifier,\n    grant_type: 'authorization_code'\n  };\n\n  try {\n    const user = yield call(api.auth.exchangeOAuthTokens, body); // TODO: Validate nonce and aud\n\n    yield put(actions.setState({\n      user,\n      isAuthenticated: true\n    }));\n    yield put(actions.loadTenants());\n  } catch (e) {\n    console.error('Failed to exchangeOAuthTokens', e);\n  } finally {\n    yield afterAuthNavigation();\n  }\n}\n\nfunction* changePhoneNumberWithVerification(_ref2) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref2,\n      payload = _objectWithoutPropertiesLoose(_ref2.payload, _excluded);\n\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const changePhoneRes = yield call(api.auth.changePhoneNumberWithVerification, payload);\n    yield put(actions.setLoginState({\n      phoneNumber: payload.phoneNumber,\n      loading: false,\n      changePhoneId: changePhoneRes.changePhoneId,\n      step: LoginStep.loginWithQuickSmsOtc,\n      error: undefined\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* verifyChangePhoneNumber(_ref3) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref3,\n      payload = _objectWithoutPropertiesLoose(_ref3.payload, _excluded2);\n\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    yield call(api.auth.verifyChangePhoneNumber, payload);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* quickSmsPasswordlessPreLogin(_ref4) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref4,\n      payload = _objectWithoutPropertiesLoose(_ref4.payload, _excluded3);\n\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    })); // TODO: [Typescript 4.8] fix @frontegg/rest-api return value\n    // @ts-ignore\n\n    const preloginRes = yield call(api.auth.passwordlessPreLogin, _extends({}, payload, {\n      type: AuthStrategyEnum.SmsCode\n    }));\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithQuickSmsOtc,\n      loading: false,\n      phoneNumber: preloginRes == null ? void 0 : preloginRes.phoneNumber,\n      error: undefined\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(e);\n  }\n}\n\nfunction* passwordlessPreLogin(_ref5) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref5,\n      payload = _objectWithoutPropertiesLoose(_ref5.payload, _excluded4);\n\n  try {\n    const {\n      onRedirectTo,\n      routes\n    } = yield select(({\n      auth: {\n        onRedirectTo,\n        routes\n      }\n    }) => ({\n      onRedirectTo,\n      routes\n    }));\n    yield put(actions.setLoginState({\n      loading: true\n    })); // TODO: [Typescript 4.8] fix @frontegg/rest-api return value\n    // @ts-ignore\n\n    const preloginRes = yield call(api.auth.passwordlessPreLogin, payload);\n    const step = authStrategyLoginStepMap[payload.type];\n\n    if (step === LoginStep.loginWithSmsOtc && preloginRes.resetPhoneNumberToken) {\n      yield put(actions.setResetPhoneNumberState({\n        resetPhoneNumberToken: preloginRes.resetPhoneNumberToken,\n        step: ResetPhoneNumberStep.VerifyResetPhoneNumber\n      }));\n      onRedirectTo(routes.resetPhoneNumberUrl);\n      return;\n    }\n\n    yield put(actions.setLoginState({\n      step,\n      loading: false,\n      phoneNumber: preloginRes == null ? void 0 : preloginRes.phoneNumber,\n      email: payload.email,\n      error: undefined\n    }));\n    callback == null ? void 0 : callback();\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n  }\n}\n\nfunction* passwordlessPostLogin(_ref6) {\n  let {\n    payload: {\n      callback,\n      events\n    }\n  } = _ref6,\n      payload = _objectWithoutPropertiesLoose(_ref6.payload, _excluded5);\n\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const data = yield call(api.auth.passwordlessPostLogin, payload);\n    const onRedirectTo = ContextHolder.onRedirectTo;\n    const {\n      routes\n    } = yield select(state => state.auth);\n\n    if (isMfaRequired(data)) {\n      const mfaRequiredState = yield getMfaRequiredState(data);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      const {\n        loginState\n      } = yield select(state => state.auth);\n      const user = yield call(api.auth.generateLoginResponse, data);\n\n      if (data.emailVerified) {\n        var _events$userVerified;\n\n        events == null ? void 0 : (_events$userVerified = events.userVerified) == null ? void 0 : _events$userVerified.call(events, {\n          email: user.email,\n          origin: UserVeirifedOriginTypes.PASSWORDLESS,\n          id: user.id,\n          tenantId: user.tenantId,\n          createdAt: new Date(),\n          name: user.name\n        });\n      }\n\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true\n      }));\n      yield put(actions.setLoginState({\n        error: undefined\n      }));\n      yield put(actions.loadTenants());\n\n      if (loginState.flow === LoginFlow.Login) {\n        yield afterAuthNavigation();\n      } else {\n        onRedirectTo(routes.loginUrl, {\n          preserveQueryParams: true\n        });\n      }\n\n      localStorage.removeItem('register-quick-login');\n      callback == null ? void 0 : callback(true);\n    }\n  } catch (e) {\n    var _e$message;\n\n    yield put(actions.setLoginState({\n      error: (_e$message = e.message) != null ? _e$message : 'Failed to authenticate'\n    }));\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\n\nfunction* verifyInviteToken({\n  payload\n}) {\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const {\n      name: inviteTokenTenantName\n    } = yield call(api.auth.verifyInviteToken, payload);\n    yield put(actions.setLoginState({\n      inviteTokenTenantName\n    }));\n  } catch (e) {\n    var _e$message2;\n\n    console.error(e);\n    yield put(actions.setLoginState({\n      inviteTokenError: (_e$message2 = e.message) != null ? _e$message2 : `We couldn't verify your invitation`\n    }));\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\n\nfunction* preLogin({\n  payload: {\n    email,\n    recaptchaToken,\n    invitationToken,\n    callback\n  }\n}) {\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const onRedirectTo = yield select(({\n      auth: {\n        onRedirectTo\n      }\n    }) => onRedirectTo);\n    let {\n      address,\n      idpType\n    } = yield call(api.auth.preLoginV2, {\n      email\n    });\n\n    if (address) {\n      if (idpType === SamlVendors.Oidc && !address.includes('redirect_uri')) {\n        const {\n          routes: {\n            oidcRedirectUrl\n          }\n        } = yield select(({\n          auth: {\n            routes\n          }\n        }) => ({\n          routes\n        }));\n        address += `&redirect_uri=${window.location.origin}${oidcRedirectUrl}`;\n      }\n\n      yield put(actions.setLoginState({\n        step: LoginStep.redirectToSSO,\n        loading: false,\n        ssoRedirectUrl: address\n      }));\n      setTimeout(() => {\n        onRedirectTo(address, {\n          refresh: true\n        });\n      }, 2000);\n    } else {\n      yield ssoPreloginFailed({\n        email,\n        recaptchaToken,\n        callback,\n        invitationToken\n      });\n    }\n  } catch (e) {\n    yield ssoPreloginFailed({\n      email,\n      recaptchaToken,\n      callback,\n      invitationToken\n    });\n  }\n}\n\nfunction* ssoPreloginFailed(_ref7) {\n  let {\n    callback\n  } = _ref7,\n      body = _objectWithoutPropertiesLoose(_ref7, _excluded6);\n\n  const publicPolicy = yield select(({\n    auth: {\n      securityPolicyState: {\n        publicPolicy: {\n          policy: publicPolicy\n        }\n      }\n    }\n  }) => publicPolicy);\n\n  if (!(publicPolicy != null && publicPolicy.authStrategy)) {\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithPassword,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n    return;\n  }\n\n  if ((publicPolicy == null ? void 0 : publicPolicy.authStrategy) === AuthStrategyEnum.EmailAndPassword) {\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithPassword,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n  } else if ([AuthStrategyEnum.MagicLink, AuthStrategyEnum.Code, AuthStrategyEnum.SmsCode].includes(publicPolicy == null ? void 0 : publicPolicy.authStrategy)) {\n    yield put(actions.passwordlessPreLogin(_extends({}, body, {\n      type: publicPolicy == null ? void 0 : publicPolicy.authStrategy,\n      callback\n    })));\n  } else {\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithPassword,\n      loading: false\n    }));\n    callback == null ? void 0 : callback();\n  }\n}\n\nfunction* webAuthnCreateNewDeviceSession({\n  payload: {\n    callback\n  }\n}) {\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const {\n      options\n    } = yield call(api.auth.webAuthnCreateNewDeviceSession);\n    options.user.id = base64urlDecode(options.user.id);\n    options.challenge = base64urlDecode(options.challenge);\n    options.excludeCredentials = [];\n    callback == null ? void 0 : callback(options);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\n\nfunction* webAuthnVerifyNewDeviceSession(_ref8) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref8,\n      body = _objectWithoutPropertiesLoose(_ref8.payload, _excluded7);\n\n  try {\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const publicKey = publicKeyCredentialToJSON(body.publicKey);\n    yield call(api.auth.verifyNewDeviceSession, {\n      id: publicKey.id,\n      response: publicKey.response\n    });\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\n\nfunction* webAuthnPrelogin(_ref9) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref9,\n      body = _objectWithoutPropertiesLoose(_ref9.payload, _excluded8);\n\n  try {\n    var _options$allowCredent;\n\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const {\n      options\n    } = yield call(api.auth.webAuthnPreLogin, body);\n    options.challenge = base64urlDecode(options.challenge);\n    options.allowCredentials = (_options$allowCredent = options.allowCredentials) == null ? void 0 : _options$allowCredent.map(credentials => _extends({}, credentials, {\n      id: base64urlDecode(credentials.id)\n    }));\n    yield put(actions.setLoginState({\n      error: undefined\n    }));\n    callback == null ? void 0 : callback(options);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\n\nfunction* webAuthnPostLogin(_ref10) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref10,\n      body = _objectWithoutPropertiesLoose(_ref10.payload, _excluded9);\n\n  try {\n    var _publicKey$response$u;\n\n    yield put(actions.setLoginState({\n      loading: true\n    }));\n    const publicKey = publicKeyCredentialToJSON(body.publicKey);\n    const data = yield call(api.auth.webAuthnPostLogin, _extends({}, publicKey, {\n      response: _extends({}, publicKey.response, {\n        userHandle: (_publicKey$response$u = publicKey.response.userHandle) != null ? _publicKey$response$u : undefined\n      }),\n      recaptchaToken: body.recaptchaToken,\n      invitationToken: body.invitationToken\n    }));\n\n    if (isMfaRequired(data)) {\n      const onRedirectTo = ContextHolder.onRedirectTo;\n      const {\n        routes\n      } = yield select(state => state.auth);\n      const mfaRequiredState = yield getMfaRequiredState(data);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      const user = yield call(api.auth.generateLoginResponse, data);\n\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n\n      yield put(actions.loadTenants());\n      yield put(actions.setState({\n        user,\n        isAuthenticated: true\n      }));\n      yield put(actions.setLoginState({\n        error: undefined\n      }));\n      yield afterAuthNavigation(); // TODO: Itamar why moving callback to inside the else block\n\n      callback == null ? void 0 : callback(true);\n    } // callback?.(true);\n\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  } finally {\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n  }\n}\n\nfunction* postLogin({\n  payload\n}) {\n  const {\n    onRedirectTo,\n    routes\n  } = yield select(({\n    auth: {\n      onRedirectTo,\n      routes\n    }\n  }) => ({\n    onRedirectTo,\n    routes\n  }));\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const user = yield call(api.auth.postLogin, payload);\n    ContextHolder.setAccessToken(user.accessToken);\n    ContextHolder.setUser(user);\n    yield put(actions.setState({\n      user: !!user.accessToken ? user : undefined,\n      isAuthenticated: !!user.accessToken\n    }));\n    yield afterAuthNavigation();\n  } catch (e) {\n    setTimeout(() => {\n      onRedirectTo(routes.authenticatedUrl);\n    }, 1000);\n    yield put(actions.setLoginState({\n      step: LoginStep.loginWithSSOFailed,\n      loading: false\n    }));\n  }\n}\n\nfunction* login({\n  payload: {\n    email,\n    password,\n    recaptchaToken,\n    invitationToken,\n    callback\n  }\n}) {\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const user = yield call(api.auth.login, {\n      email,\n      password,\n      recaptchaToken,\n      invitationToken\n    });\n    ContextHolder.setAccessToken(user.accessToken);\n    ContextHolder.setUser(user);\n    const onRedirectTo = ContextHolder.onRedirectTo;\n    const {\n      routes\n    } = yield select(state => state.auth);\n\n    if (isMfaRequired(user)) {\n      const mfaRequiredState = yield getMfaRequiredState(user);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl, {\n        preserveQueryParams: true\n      });\n    } else {\n      const {\n        loginState\n      } = yield select(state => state.auth);\n      const isAuthenticated = !!user.accessToken;\n\n      if (user.id) {\n        localStorage.setItem('userId', user.id);\n      }\n\n      yield put(actions.setState({\n        user,\n        isAuthenticated,\n        loginState: {\n          flow: loginState.flow,\n          quickLoginToRegister: loginState.quickLoginToRegister,\n          email,\n          loading: false,\n          error: undefined,\n          mfaToken: user.mfaToken,\n          step: loginState.flow === LoginFlow.Login ? LoginStep.success : loginState.step,\n          tenants: [],\n          tenantsLoading: true\n        }\n      }));\n      yield put(actions.loadTenants());\n\n      if (isAuthenticated && loginState.flow === LoginFlow.Login) {\n        yield afterAuthNavigation();\n      }\n    } // TODO: extract item name to constants\n\n\n    localStorage.removeItem('register-quick-login');\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setLoginState({\n      email,\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* loginWithMfa({\n  payload: {\n    mfaToken,\n    value,\n    rememberDevice,\n    callback\n  }\n}) {\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const user = yield call(api.auth.loginWithMfa, {\n      mfaToken,\n      value,\n      rememberDevice\n    });\n    const {\n      loginState\n    } = yield select(state => state.auth);\n    const step = loginState.flow === LoginFlow.Login ? LoginStep.success : loginState.step;\n    yield put(actions.setState({\n      loginState: {\n        flow: loginState.flow,\n        quickLoginToRegister: loginState.quickLoginToRegister,\n        loading: false,\n        step,\n        error: undefined,\n        tenantsLoading: true,\n        tenants: []\n      },\n      user,\n      isAuthenticated: true\n    }));\n\n    if (user.id) {\n      localStorage.setItem('userId', user.id);\n    }\n\n    yield put(actions.loadTenants());\n    yield put(actions.setLoginState({\n      error: undefined,\n      loading: false\n    }));\n\n    if (loginState.flow === LoginFlow.Login) {\n      yield afterAuthNavigation();\n    }\n\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n    callback == null ? void 0 : callback(false, e);\n  }\n}\n\nfunction* recoverMfa({\n  payload\n}) {\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    yield call(api.auth.recoverMfaToken, payload);\n    yield put(actions.setLoginState({\n      loading: false,\n      error: undefined,\n      step: LoginStep.preLogin\n    }));\n    yield put(actions.setState({\n      user: undefined,\n      isAuthenticated: false\n    }));\n  } catch (e) {\n    yield put(actions.setLoginState({\n      error: e.message,\n      loading: false\n    }));\n  }\n}\n\nfunction* logout({\n  payload\n}) {\n  const {\n    hostedLoginBox\n  } = yield select(state => state.auth);\n  yield put(actions.setState({\n    isLoading: true\n  }));\n\n  try {\n    if (hostedLoginBox) {\n      yield call(api.auth.OAuthLogout);\n    } else {\n      yield call(api.auth.logout);\n    }\n  } catch {}\n\n  yield put(actions.resetState());\n  yield put(actions.requestAuthorize(true));\n  payload == null ? void 0 : payload();\n}\n\nfunction* silentLogout({\n  payload\n}) {\n  var _payload$callbackTime;\n\n  try {\n    yield call(api.auth.logout);\n  } catch {}\n\n  setTimeout(() => {\n    var _payload$callback;\n\n    return payload == null ? void 0 : (_payload$callback = payload.callback) == null ? void 0 : _payload$callback.call(payload, true);\n  }, (_payload$callbackTime = payload == null ? void 0 : payload.callbackTimeout) != null ? _payload$callbackTime : 500);\n}\n\nfunction* handleEnrollMFAResponse({\n  user,\n  tenants\n}) {\n  const mfaState = {\n    step: MFAStep.recoveryCode,\n    loading: false,\n    error: undefined,\n    saving: false\n  };\n\n  if (user != null && user.recoveryCode) {\n    mfaState.recoveryCode = user.recoveryCode;\n  }\n\n  yield put(actions.setMfaState(mfaState));\n  yield put(actions.setUser(user));\n  yield put(actions.setTenantsState({\n    tenants,\n    loading: false\n  }));\n\n  if (user.id) {\n    localStorage.setItem('userId', user.id);\n  }\n}\n\nfunction* handleVerifyMFAResponse({\n  user,\n  tenants\n}) {\n  const {\n    loginState\n  } = yield select(state => state.auth);\n  yield put(actions.setUser(user));\n  yield put(actions.setTenantsState({\n    tenants,\n    loading: false\n  }));\n\n  if (user.id) {\n    localStorage.setItem('userId', user.id);\n  }\n\n  if (loginState.flow === LoginFlow.Login) {\n    yield afterAuthNavigation();\n  }\n\n  yield put(actions.setState({\n    isAuthenticated: true\n  }));\n}\n\nfunction* preEnrollMFASMSForLogin(_ref11) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref11,\n      payload = _objectWithoutPropertiesLoose(_ref11.payload, _excluded10);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const data = yield call(api.auth.preEnrollMFASMSForLogin, payload);\n    yield put(actions.setMfaState({\n      otcToken: data.otcToken,\n      step: MFAStep.smsVerifyCode,\n      phoneNumber: data.phoneNumber\n    }));\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* enrollMFASMSForLogin(_ref12) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref12,\n      payload = _objectWithoutPropertiesLoose(_ref12.payload, _excluded11);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const data = yield call(api.auth.enrollMFASMSForLogin, payload);\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleEnrollMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* preEnrollMFAWebAuthnForLogin(_ref13) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref13,\n      payload = _objectWithoutPropertiesLoose(_ref13.payload, _excluded12);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    var _data$options$exclude;\n\n    const data = yield call(api.auth.preEnrollMFAWebAuthnForLogin, payload);\n\n    const options = _extends({}, data.options, {\n      challenge: base64urlDecode(data.options.challenge),\n      user: _extends({}, data.options.user, {\n        id: base64urlDecode(data.options.user.id)\n      }),\n      excludeCredentials: (_data$options$exclude = data.options.excludeCredentials) == null ? void 0 : _data$options$exclude.map(credentials => _extends({}, credentials, {\n        id: base64urlDecode(credentials.id)\n      }))\n    });\n\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback({\n      options,\n      webauthnToken: data.webauthnToken\n    });\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* enrollMFAWebAuthnForLogin(_ref14) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref14,\n      payload = _objectWithoutPropertiesLoose(_ref14.payload, _excluded13);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const publicKey = publicKeyCredentialToJSON(payload.publicKey);\n    const data = yield call(api.auth.enrollMFAWebAuthnForLogin, _extends({}, payload, {\n      options: publicKey\n    }));\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleEnrollMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* enrollMFAAuthenticatorAppForLogin(_ref15) {\n  let {\n    payload: {\n      callback\n    }\n  } = _ref15,\n      payload = _objectWithoutPropertiesLoose(_ref15.payload, _excluded14);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const data = yield call(api.auth.enrollMFAAuthenticatorAppForLogin, payload);\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleEnrollMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* preVerifyMFASMSForLogin(_ref16) {\n  let {\n    payload: {\n      callback,\n      deviceId\n    }\n  } = _ref16,\n      payload = _objectWithoutPropertiesLoose(_ref16.payload, _excluded15);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const data = yield call(api.auth.preVerifyMFASMSForLogin, deviceId, payload);\n    yield put(actions.setMfaState({\n      otcToken: data.otcToken,\n      step: MFAStep.smsVerifyCode,\n      phoneNumber: data.phoneNumber\n    }));\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* verifyMFASMSForLogin(_ref17) {\n  let {\n    payload: {\n      callback,\n      deviceId\n    }\n  } = _ref17,\n      payload = _objectWithoutPropertiesLoose(_ref17.payload, _excluded16);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const data = yield call(api.auth.verifyMFASMSForLogin, deviceId, payload);\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleVerifyMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* preVerifyMFAWebAuthnForLogin(_ref18) {\n  let {\n    payload: {\n      callback,\n      deviceId\n    }\n  } = _ref18,\n      payload = _objectWithoutPropertiesLoose(_ref18.payload, _excluded17);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    var _data$options$allowCr;\n\n    const data = yield call(api.auth.preVerifyMFAWebAuthnForLogin, deviceId, payload);\n\n    const options = _extends({}, data.options, {\n      challenge: base64urlDecode(data.options.challenge),\n      allowCredentials: (_data$options$allowCr = data.options.allowCredentials) == null ? void 0 : _data$options$allowCr.map(credentials => _extends({}, credentials, {\n        id: base64urlDecode(credentials.id)\n      }))\n    });\n\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback({\n      options,\n      webauthnToken: data.webauthnToken\n    });\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nfunction* verifyMFAWebAuthnForLogin(_ref19) {\n  let {\n    payload: {\n      callback,\n      deviceId\n    }\n  } = _ref19,\n      payload = _objectWithoutPropertiesLoose(_ref19.payload, _excluded18);\n\n  yield put(actions.setLoginState({\n    loading: true\n  }));\n\n  try {\n    const publicKey = publicKeyCredentialToJSON(payload.publicKey);\n    const data = yield call(api.auth.verifyMFAWebAuthnForLogin, deviceId, _extends({}, payload, {\n      options: publicKey\n    }));\n    const response = yield call(api.auth.generateLoginResponseV2, data);\n    yield handleVerifyMFAResponse(response);\n    yield put(actions.setLoginState({\n      loading: false\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (e) {\n    yield put(actions.setLoginState({\n      loading: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null);\n  }\n}\n\nexport function* loginSagas() {\n  yield takeLeading(actions.requestAuthorize, requestAuthorize);\n  yield takeLeading(actions.requestAuthorizeSSR, requestAuthorizeSSR);\n  yield takeLeading(actions.requestHostedLoginAuthorize, refreshOrRequestHostedLoginAuthorize);\n  yield takeLeading(actions.handleHostedLoginCallback, handleHostedLoginCallback);\n  yield takeLeading(actions.preLogin, preLogin);\n  yield takeLeading(actions.postLogin, postLogin);\n  yield takeLeading(actions.login, login);\n  yield takeLeading(actions.logout, logout);\n  yield takeLeading(actions.silentLogout, silentLogout);\n  yield takeLeading(actions.loginWithMfa, loginWithMfa);\n  yield takeLeading(actions.recoverMfa, recoverMfa);\n  yield takeLeading(actions.quickSmsPasswordlessPreLogin, quickSmsPasswordlessPreLogin);\n  yield takeLeading(actions.changePhoneNumberWithVerification, changePhoneNumberWithVerification);\n  yield takeLeading(actions.verifyChangePhoneNumber, verifyChangePhoneNumber);\n  yield takeLeading(actions.passwordlessPreLogin, passwordlessPreLogin);\n  yield takeLeading(actions.passwordlessPostLogin, passwordlessPostLogin);\n  yield takeLeading(actions.verifyInviteToken, verifyInviteToken);\n  yield takeLeading(actions.webAuthnPrelogin, webAuthnPrelogin);\n  yield takeLeading(actions.webAuthnPostLogin, webAuthnPostLogin);\n  yield takeLeading(actions.webAuthnCreateNewDeviceSession, webAuthnCreateNewDeviceSession);\n  yield takeLeading(actions.webAuthnVerifyNewDeviceSession, webAuthnVerifyNewDeviceSession);\n  yield takeLeading(actions.afterAuthNavigation, afterAuthNavigation);\n  yield takeLeading(actions.getUserIP, getUserIP);\n  yield takeLeading(actions.preEnrollMFASMSForLogin, preEnrollMFASMSForLogin);\n  yield takeLeading(actions.enrollMFASMSForLogin, enrollMFASMSForLogin);\n  yield takeLeading(actions.preEnrollMFAWebAuthnForLogin, preEnrollMFAWebAuthnForLogin);\n  yield takeLeading(actions.enrollMFAWebAuthnForLogin, enrollMFAWebAuthnForLogin);\n  yield takeLeading(actions.enrollMFAAuthenticatorAppForLogin, enrollMFAAuthenticatorAppForLogin);\n  yield takeLeading(actions.preVerifyMFASMSForLogin, preVerifyMFASMSForLogin);\n  yield takeLeading(actions.verifyMFASMSForLogin, verifyMFASMSForLogin);\n  yield takeLeading(actions.preVerifyMFAWebAuthnForLogin, preVerifyMFAWebAuthnForLogin);\n  yield takeLeading(actions.verifyMFAWebAuthnForLogin, verifyMFAWebAuthnForLogin);\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* requestAuthorizeMock({\n  payload: firstTime\n}) {\n  if (firstTime) {\n    yield put(actions.setState({\n      isLoading: true\n    }));\n  }\n\n  const user = userDemo;\n  yield put(actions.loadTenants());\n  yield put(actions.setState({\n    user,\n    isAuthenticated: true,\n    isLoading: false\n  }));\n}\n\nfunction* getUserIPMock({\n  payload: {\n    callback\n  }\n}) {\n  try {\n    const {\n      ip\n    } = dummyIps[0];\n    yield put(actions.setState({\n      userIp: ip\n    }));\n    callback == null ? void 0 : callback(true, ip);\n  } catch (e) {\n    callback == null ? void 0 : callback(false, e);\n  }\n}\n\nexport function* loginSagasMock() {\n  yield takeLeading(actions.requestAuthorize, requestAuthorizeMock);\n  yield takeLeading(actions.afterAuthNavigation, afterAuthNavigation);\n  yield takeLeading(actions.getUserIP, getUserIPMock);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}