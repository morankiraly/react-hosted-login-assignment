{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useContext, useMemo } from 'react';\nimport { bindActionCreators } from '@frontegg/redux-store';\nimport { authActions, authStoreName } from '@frontegg/redux-store';\nimport { shallowEqual } from 'react-redux';\nimport { useSelector, useDispatch } from '../FronteggStoreContext';\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { ShadowDomContext } from '../common';\nconst defaultMapper = {\n  state: state => state,\n  actions: actions => actions\n};\nexport function useAuth() {\n  let stateMapper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultMapper.state;\n  return useSelector(state => stateMapper(state[authStoreName]), shallowEqual);\n}\n/**\n * ```jsx\n * export const MyFunctionComponent = () => {\n *   const { isAuthenticated, user } = useAuth();\n *   const loginWithRedirect = useLoginWithRedirect();\n *\n *   if (!isAuthenticated) {\n *     loginWithRedirect();\n *     return <></>;\n *   }\n *\n *   return (<div>Hello User {user.name}</div>);\n * }\n * ```\n *\n * use this frontegg hook function to get if user is \"Authenticated\"\n */\n\nexport const useLoginWithRedirect = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(authActions.requestHostedLoginAuthorize, dispatch), [authActions.requestHostedLoginAuthorize]);\n};\nexport const useAuthActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(authActions, dispatch), [authActions]);\n};\nexport const useOnRedirectTo = () => {\n  var _context$onRedirectTo;\n  const context = useContext(ShadowDomContext);\n  return (_context$onRedirectTo = context == null ? void 0 : context.onRedirectTo) != null ? _context$onRedirectTo : ContextHolder.onRedirectTo;\n};\nexport const useAuthRoutes = () => useAuth(state => _extends({}, state.routes));\n/**\n * ```jsx\n * export const MyFunctionComponent = () => {\n *   const isAuthenticated  = useIsAuthenticated();\n *   return isAuthenticated ? <div>Hello User</div> : <Redirect to={'/login'}/>\n * }\n * ```\n *\n * use this frontegg hook function to get if user is \"Authenticated\"\n */\n\nexport const useIsAuthenticated = () => useSelector(_ref => {\n  let {\n    [authStoreName]: {\n      isAuthenticated\n    }\n  } = _ref;\n  return isAuthenticated;\n}, shallowEqual);\n/**\n * ```jsx\n * export const MyFunctionComponent = () => {\n *   const user = useAuthUser();\n *   return user ? <div>Hello {user.name}!</div> : <div>Hello Guest!</div>\n * }\n * ```\n *\n * use this frontegg hook function to get the authenticated user\n * the return user is null if not authenticated\n */\n\nexport const useAuthUser = () => {\n  const routes = useAuthRoutes();\n  const onRedirectTo = useOnRedirectTo();\n  const user = useAuthUserOrNull();\n  const isSSR = typeof window === 'undefined';\n  const noUser = {};\n  if (user == null && !isSSR) {\n    onRedirectTo(routes.loginUrl, {\n      refresh: true\n    });\n    return noUser;\n  }\n  return user || noUser;\n};\nexport const useAuthUserOrNull = () => {\n  const {\n    user\n  } = useSelector(_ref2 => {\n    let {\n      [authStoreName]: {\n        user\n      }\n    } = _ref2;\n    return {\n      user\n    };\n  }, shallowEqual);\n  return user || null;\n};\n/**\n * hooks helpers\n */\n\nexport const sliceReducerActionsBy = reducer => {\n  const reducerKeys = Object.keys(reducer);\n  const reducerActions = reducerKeys.map(key => ({\n    [key]: authActions[key]\n  }));\n  return reducerActions.reduce((p, n) => _extends({}, p, n), {});\n};\nexport const stateHookGenerator = (stateMapper, subState) => {\n  return useSelector(state => {\n    var _stateMapper;\n    return (_stateMapper = stateMapper == null ? void 0 : stateMapper(state[authStoreName][subState])) != null ? _stateMapper : state[authStoreName][subState];\n  }, shallowEqual);\n};\nexport const reducerActionsGenerator = (actions, reducers) => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(_extends({}, actions, sliceReducerActionsBy(reducers)), dispatch), [dispatch]);\n};","map":{"version":3,"names":["_extends","useContext","useMemo","bindActionCreators","authActions","authStoreName","shallowEqual","useSelector","useDispatch","ContextHolder","ShadowDomContext","defaultMapper","state","actions","useAuth","stateMapper","useLoginWithRedirect","dispatch","requestHostedLoginAuthorize","useAuthActions","useOnRedirectTo","_context$onRedirectTo","context","onRedirectTo","useAuthRoutes","routes","useIsAuthenticated","isAuthenticated","useAuthUser","user","useAuthUserOrNull","isSSR","window","noUser","loginUrl","refresh","sliceReducerActionsBy","reducer","reducerKeys","Object","keys","reducerActions","map","key","reduce","p","n","stateHookGenerator","subState","_stateMapper","reducerActionsGenerator","reducers"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/react-hooks/auth/hooks.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useContext, useMemo } from 'react';\nimport { bindActionCreators } from '@frontegg/redux-store';\nimport { authActions, authStoreName } from '@frontegg/redux-store';\nimport { shallowEqual } from 'react-redux';\nimport { useSelector, useDispatch } from '../FronteggStoreContext';\nimport { ContextHolder } from '@frontegg/rest-api';\nimport { ShadowDomContext } from '../common';\nconst defaultMapper = {\n  state: state => state,\n  actions: actions => actions\n};\nexport function useAuth(stateMapper = defaultMapper.state) {\n  return useSelector(state => stateMapper(state[authStoreName]), shallowEqual);\n}\n/**\n * ```jsx\n * export const MyFunctionComponent = () => {\n *   const { isAuthenticated, user } = useAuth();\n *   const loginWithRedirect = useLoginWithRedirect();\n *\n *   if (!isAuthenticated) {\n *     loginWithRedirect();\n *     return <></>;\n *   }\n *\n *   return (<div>Hello User {user.name}</div>);\n * }\n * ```\n *\n * use this frontegg hook function to get if user is \"Authenticated\"\n */\n\nexport const useLoginWithRedirect = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(authActions.requestHostedLoginAuthorize, dispatch), [authActions.requestHostedLoginAuthorize]);\n};\nexport const useAuthActions = () => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(authActions, dispatch), [authActions]);\n};\nexport const useOnRedirectTo = () => {\n  var _context$onRedirectTo;\n\n  const context = useContext(ShadowDomContext);\n  return (_context$onRedirectTo = context == null ? void 0 : context.onRedirectTo) != null ? _context$onRedirectTo : ContextHolder.onRedirectTo;\n};\nexport const useAuthRoutes = () => useAuth(state => _extends({}, state.routes));\n/**\n * ```jsx\n * export const MyFunctionComponent = () => {\n *   const isAuthenticated  = useIsAuthenticated();\n *   return isAuthenticated ? <div>Hello User</div> : <Redirect to={'/login'}/>\n * }\n * ```\n *\n * use this frontegg hook function to get if user is \"Authenticated\"\n */\n\nexport const useIsAuthenticated = () => useSelector(({\n  [authStoreName]: {\n    isAuthenticated\n  }\n}) => isAuthenticated, shallowEqual);\n/**\n * ```jsx\n * export const MyFunctionComponent = () => {\n *   const user = useAuthUser();\n *   return user ? <div>Hello {user.name}!</div> : <div>Hello Guest!</div>\n * }\n * ```\n *\n * use this frontegg hook function to get the authenticated user\n * the return user is null if not authenticated\n */\n\nexport const useAuthUser = () => {\n  const routes = useAuthRoutes();\n  const onRedirectTo = useOnRedirectTo();\n  const user = useAuthUserOrNull();\n  const isSSR = typeof window === 'undefined';\n  const noUser = {};\n\n  if (user == null && !isSSR) {\n    onRedirectTo(routes.loginUrl, {\n      refresh: true\n    });\n    return noUser;\n  }\n\n  return user || noUser;\n};\nexport const useAuthUserOrNull = () => {\n  const {\n    user\n  } = useSelector(({\n    [authStoreName]: {\n      user\n    }\n  }) => ({\n    user\n  }), shallowEqual);\n  return user || null;\n};\n/**\n * hooks helpers\n */\n\nexport const sliceReducerActionsBy = reducer => {\n  const reducerKeys = Object.keys(reducer);\n  const reducerActions = reducerKeys.map(key => ({\n    [key]: authActions[key]\n  }));\n  return reducerActions.reduce((p, n) => _extends({}, p, n), {});\n};\nexport const stateHookGenerator = (stateMapper, subState) => {\n  return useSelector(state => {\n    var _stateMapper;\n\n    return (_stateMapper = stateMapper == null ? void 0 : stateMapper(state[authStoreName][subState])) != null ? _stateMapper : state[authStoreName][subState];\n  }, shallowEqual);\n};\nexport const reducerActionsGenerator = (actions, reducers) => {\n  const dispatch = useDispatch();\n  return useMemo(() => bindActionCreators(_extends({}, actions, sliceReducerActionsBy(reducers)), dispatch), [dispatch]);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}