{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"callback\"],\n  _excluded2 = [\"callback\", \"ssoConfigId\"],\n  _excluded3 = [\"callback\", \"ssoConfigId\"];\nimport { all, call, put, select, takeEvery } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { SSOStateKeys } from './interfaces';\nimport { readFileAsText } from '../../helpers';\nfunction* loadOidc() {\n  try {\n    const oidcConfiguration = yield call(api.auth.getOidcConfiguration);\n    return oidcConfiguration;\n  } catch (e) {\n    return null;\n  }\n}\nfunction* loadSaml() {\n  try {\n    const samlMetadata = yield call(api.metadata.getSamlMetadata);\n    return samlMetadata;\n  } catch (e) {\n    return null;\n  }\n}\nfunction* loadSSOConfigurationsV2() {\n  try {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.LOAD_SSO_CONFIGURATIONS,\n      value: true\n    }));\n    const [oidcConfiguration, samlMetadata] = yield all([call(loadOidc), call(loadSaml)]);\n    const ssoConfigurations = yield call(api.auth.getSSOConfigurations);\n    yield put(actions.setSSOState({\n      ssoConfigurations,\n      oidcConfiguration,\n      samlMetadata\n    }));\n  } catch (e) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.LOAD_SSO_CONFIGURATIONS,\n      value: e.message\n    }));\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.LOAD_SSO_CONFIGURATIONS,\n      value: false\n    }));\n  }\n}\nfunction saveSSOConfigurationV2(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_CONFIGURATION,\n      value: true\n    }));\n    const {\n        callback\n      } = payload,\n      ssoConfiguration = _objectWithoutPropertiesLoose(payload, _excluded);\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      var _ssoConfiguration$ena;\n      const newSsoConfiguration = yield call(api.auth.createSSOConfiguration, _extends({}, ssoConfiguration, {\n        enabled: (_ssoConfiguration$ena = ssoConfiguration.enabled) != null ? _ssoConfiguration$ena : false\n      }));\n      yield put(actions.setSSOState({\n        ssoConfigurations: [...ssoConfigurations, newSsoConfiguration]\n      }));\n      callback == null ? void 0 : callback(newSsoConfiguration);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.SAVE_SSO_CONFIGURATION,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.SAVE_SSO_CONFIGURATION,\n        value: false\n      }));\n    }\n  }();\n}\nfunction saveSSOConfigurationByMetadata(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_CONFIGURATION_BY_METADATA,\n      value: true\n    }));\n    const {\n      configFile,\n      callback\n    } = payload;\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      const metadata = yield readFileAsText(configFile);\n      const newSsoConfiguration = yield call(api.auth.createSSOConfigurationByMetadata, {\n        metadata\n      });\n      yield put(actions.setSSOState({\n        ssoConfigurations: [...ssoConfigurations, newSsoConfiguration]\n      }));\n      callback == null ? void 0 : callback(newSsoConfiguration);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.SAVE_SSO_CONFIGURATION_BY_METADATA,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.SAVE_SSO_CONFIGURATION_BY_METADATA,\n        value: false\n      }));\n    }\n  }();\n}\nfunction updateSSOConfiguration(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n      value: true\n    }));\n    const {\n        callback,\n        ssoConfigId\n      } = payload,\n      ssoConfiguration = _objectWithoutPropertiesLoose(payload, _excluded2);\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      const newSsoConfiguration = yield call(api.auth.updateSSOConfiguration, ssoConfigId, ssoConfiguration);\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => ssoConfig.id === ssoConfigId ? newSsoConfiguration : ssoConfig);\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(newSsoConfiguration);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n        value: false\n      }));\n    }\n  }();\n}\nfunction updateSSOConfigurationByMetadata(_ref4) {\n  let {\n    payload\n  } = _ref4;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.UPDATE_SSO_CONFIGURATION_BY_METADATA,\n      value: true\n    }));\n    const {\n      callback,\n      ssoConfigId,\n      configFile\n    } = payload;\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      const metadata = yield readFileAsText(configFile);\n      const newSsoConfiguration = yield call(api.auth.updateSSOConfigurationByMetadata, ssoConfigId, {\n        metadata\n      });\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => ssoConfig.id === ssoConfigId ? newSsoConfiguration : ssoConfig);\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(newSsoConfiguration);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n        value: false\n      }));\n    }\n  }();\n}\nfunction deleteSSOConfiguration(_ref5) {\n  let {\n    payload\n  } = _ref5;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.DELETE_SSO_CONFIGURATION,\n      value: true\n    }));\n    const {\n      ssoConfigId,\n      callback\n    } = payload;\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      yield call(api.auth.deleteSSOConfiguration, ssoConfigId);\n      yield put(actions.setSSOState({\n        ssoConfigurations: ssoConfigurations.filter(_ref6 => {\n          let {\n            id\n          } = _ref6;\n          return id !== ssoConfigId;\n        })\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.DELETE_SSO_CONFIGURATION,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.DELETE_SSO_CONFIGURATION,\n        value: false\n      }));\n    }\n  }();\n}\nfunction saveSSODomain(_ref7) {\n  let {\n    payload\n  } = _ref7;\n  return function* () {\n    const {\n        callback,\n        ssoConfigId\n      } = payload,\n      body = _objectWithoutPropertiesLoose(payload, _excluded3);\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_DOMAIN,\n      value: true\n    }));\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      const domain = yield call(api.auth.createSSODomain, ssoConfigId, body);\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n        if (ssoConfig.id === ssoConfigId) {\n          return _extends({}, ssoConfig, {\n            domains: [...ssoConfig.domains, domain]\n          });\n        }\n        return ssoConfig;\n      });\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(domain);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.SAVE_SSO_DOMAIN,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.SAVE_SSO_DOMAIN,\n        value: false\n      }));\n    }\n  }();\n}\nfunction deleteSSODomain(_ref8) {\n  let {\n    payload\n  } = _ref8;\n  return function* () {\n    const {\n      ssoConfigId,\n      domainId,\n      callback\n    } = payload;\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.DELETE_SSO_DOMAIN,\n      value: true\n    }));\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      yield call(api.auth.deleteSSODomain, ssoConfigId, domainId);\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n        if (ssoConfig.id === ssoConfigId) {\n          return _extends({}, ssoConfig, {\n            domains: ssoConfig.domains.filter(_ref9 => {\n              let {\n                id\n              } = _ref9;\n              return id !== domainId;\n            })\n          });\n        }\n        return ssoConfig;\n      });\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.DELETE_SSO_DOMAIN,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.DELETE_SSO_DOMAIN,\n        value: false\n      }));\n    }\n  }();\n}\nfunction validateSSODomainV2(_ref10) {\n  let {\n    payload\n  } = _ref10;\n  return function* () {\n    const {\n      callback,\n      domainId,\n      ssoConfigId\n    } = payload;\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.VALIDATE_SSO_DOMAIN,\n      value: true\n    }));\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      yield call(api.auth.validateSSODomain, ssoConfigId, domainId);\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n        if (ssoConfig.id === ssoConfigId) {\n          return _extends({}, ssoConfig, {\n            domains: ssoConfig.domains.map(ssoDomain => ssoDomain.id === domainId ? _extends({}, ssoDomain, {\n              validated: true\n            }) : ssoDomain)\n          });\n        }\n        return ssoConfig;\n      });\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.VALIDATE_SSO_DOMAIN,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.VALIDATE_SSO_DOMAIN,\n        value: false\n      }));\n    }\n  }();\n}\nfunction setSSODefaultRoles(_ref11) {\n  let {\n    payload: {\n      callback,\n      ssoConfigId,\n      roleIds\n    }\n  } = _ref11;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.UPDATE_SSO_DEFAULT_ROLES,\n      value: true\n    }));\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      yield call(api.auth.setSSODefaultRoles, ssoConfigId, {\n        roleIds\n      });\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n        if (ssoConfig.id === ssoConfigId) {\n          return _extends({}, ssoConfig, {\n            roleIds\n          });\n        }\n        return ssoConfig;\n      });\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.UPDATE_SSO_DEFAULT_ROLES,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.UPDATE_SSO_DEFAULT_ROLES,\n        value: false\n      }));\n    }\n  }();\n}\nfunction setSSOGroups(_ref12) {\n  let {\n    payload: {\n      groupsToAdd,\n      groupsToDelete,\n      ssoConfigId,\n      callback\n    }\n  } = _ref12;\n  return function* () {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_GROUPS,\n      value: true\n    }));\n    const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n    try {\n      yield all(groupsToDelete.map(groupId => call(api.auth.deleteSSOGroup, ssoConfigId, groupId)));\n      yield all(groupsToAdd.map(group => call(api.auth.createSSOGroup, ssoConfigId, group)));\n      const groups = yield call(api.auth.getSSOGroups, ssoConfigId);\n      const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n        if (ssoConfig.id === ssoConfigId) {\n          return _extends({}, ssoConfig, {\n            groups\n          });\n        }\n        return ssoConfig;\n      });\n      yield put(actions.setSSOState({\n        ssoConfigurations: newSsoConfigurations\n      }));\n      callback == null ? void 0 : callback(true);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.SAVE_SSO_GROUPS,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.SAVE_SSO_GROUPS,\n        value: false\n      }));\n    }\n  }();\n}\nfunction updateSSOGroups(_ref13) {\n  let {\n    payload: {\n      ssoConfigId,\n      changedGroups,\n      callback\n    }\n  } = _ref13;\n  return function* () {\n    try {\n      yield all(changedGroups.map(group => call(api.auth.updateSSOGroup, ssoConfigId, group)));\n      callback == null ? void 0 : callback(true);\n    } catch (error) {\n      yield put(actions.setSSOError({\n        key: SSOStateKeys.SAVE_SSO_GROUPS,\n        value: error.message\n      }));\n      callback == null ? void 0 : callback(null, error);\n    } finally {\n      yield put(actions.setSSOLoader({\n        key: SSOStateKeys.SAVE_SSO_GROUPS,\n        value: false\n      }));\n    }\n  }();\n}\nexport function* ssoSagas() {\n  yield takeEvery(actions.loadSSOConfigurationsV2, loadSSOConfigurationsV2);\n  yield takeEvery(actions.saveSSOConfigurationV2, saveSSOConfigurationV2);\n  yield takeEvery(actions.saveSSODomain, saveSSODomain);\n  yield takeEvery(actions.deleteSSODomain, deleteSSODomain);\n  yield takeEvery(actions.validateSSODomainV2, validateSSODomainV2);\n  yield takeEvery(actions.updateSSOConfiguration, updateSSOConfiguration);\n  yield takeEvery(actions.deleteSSOConfiguration, deleteSSOConfiguration);\n  yield takeEvery(actions.setSSOGroups, setSSOGroups);\n  yield takeEvery(actions.updateSSOGroups, updateSSOGroups);\n  yield takeEvery(actions.setSSODefaultRoles, setSSODefaultRoles);\n  yield takeEvery(actions.saveSSOConfigurationByMetadata, saveSSOConfigurationByMetadata);\n  yield takeEvery(actions.updateSSOConfigurationByMetadata, updateSSOConfigurationByMetadata);\n}","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","all","call","put","select","takeEvery","api","actions","SSOStateKeys","readFileAsText","loadOidc","oidcConfiguration","auth","getOidcConfiguration","e","loadSaml","samlMetadata","metadata","getSamlMetadata","loadSSOConfigurationsV2","setSSOLoader","key","LOAD_SSO_CONFIGURATIONS","value","ssoConfigurations","getSSOConfigurations","setSSOState","setSSOError","message","saveSSOConfigurationV2","payload","SAVE_SSO_CONFIGURATION","callback","ssoConfiguration","state","ssoState","_ssoConfiguration$ena","newSsoConfiguration","createSSOConfiguration","enabled","error","saveSSOConfigurationByMetadata","SAVE_SSO_CONFIGURATION_BY_METADATA","configFile","createSSOConfigurationByMetadata","updateSSOConfiguration","UPDATE_SSO_CONFIGURATION","ssoConfigId","newSsoConfigurations","map","ssoConfig","id","updateSSOConfigurationByMetadata","UPDATE_SSO_CONFIGURATION_BY_METADATA","deleteSSOConfiguration","DELETE_SSO_CONFIGURATION","filter","saveSSODomain","body","SAVE_SSO_DOMAIN","domain","createSSODomain","domains","deleteSSODomain","domainId","DELETE_SSO_DOMAIN","validateSSODomainV2","VALIDATE_SSO_DOMAIN","validateSSODomain","ssoDomain","validated","setSSODefaultRoles","roleIds","UPDATE_SSO_DEFAULT_ROLES","setSSOGroups","groupsToAdd","groupsToDelete","SAVE_SSO_GROUPS","groupId","deleteSSOGroup","group","createSSOGroup","groups","getSSOGroups","updateSSOGroups","changedGroups","updateSSOGroup","ssoSagas"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/auth/SSOState/saga.v2.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"callback\"],\n      _excluded2 = [\"callback\", \"ssoConfigId\"],\n      _excluded3 = [\"callback\", \"ssoConfigId\"];\nimport { all, call, put, select, takeEvery } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { SSOStateKeys } from './interfaces';\nimport { readFileAsText } from '../../helpers';\n\nfunction* loadOidc() {\n  try {\n    const oidcConfiguration = yield call(api.auth.getOidcConfiguration);\n    return oidcConfiguration;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction* loadSaml() {\n  try {\n    const samlMetadata = yield call(api.metadata.getSamlMetadata);\n    return samlMetadata;\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction* loadSSOConfigurationsV2() {\n  try {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.LOAD_SSO_CONFIGURATIONS,\n      value: true\n    }));\n    const [oidcConfiguration, samlMetadata] = yield all([call(loadOidc), call(loadSaml)]);\n    const ssoConfigurations = yield call(api.auth.getSSOConfigurations);\n    yield put(actions.setSSOState({\n      ssoConfigurations,\n      oidcConfiguration,\n      samlMetadata\n    }));\n  } catch (e) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.LOAD_SSO_CONFIGURATIONS,\n      value: e.message\n    }));\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.LOAD_SSO_CONFIGURATIONS,\n      value: false\n    }));\n  }\n}\n\nfunction* saveSSOConfigurationV2({\n  payload\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.SAVE_SSO_CONFIGURATION,\n    value: true\n  }));\n\n  const {\n    callback\n  } = payload,\n        ssoConfiguration = _objectWithoutPropertiesLoose(payload, _excluded);\n\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    var _ssoConfiguration$ena;\n\n    const newSsoConfiguration = yield call(api.auth.createSSOConfiguration, _extends({}, ssoConfiguration, {\n      enabled: (_ssoConfiguration$ena = ssoConfiguration.enabled) != null ? _ssoConfiguration$ena : false\n    }));\n    yield put(actions.setSSOState({\n      ssoConfigurations: [...ssoConfigurations, newSsoConfiguration]\n    }));\n    callback == null ? void 0 : callback(newSsoConfiguration);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.SAVE_SSO_CONFIGURATION,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_CONFIGURATION,\n      value: false\n    }));\n  }\n}\n\nfunction* saveSSOConfigurationByMetadata({\n  payload\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.SAVE_SSO_CONFIGURATION_BY_METADATA,\n    value: true\n  }));\n  const {\n    configFile,\n    callback\n  } = payload;\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    const metadata = yield readFileAsText(configFile);\n    const newSsoConfiguration = yield call(api.auth.createSSOConfigurationByMetadata, {\n      metadata\n    });\n    yield put(actions.setSSOState({\n      ssoConfigurations: [...ssoConfigurations, newSsoConfiguration]\n    }));\n    callback == null ? void 0 : callback(newSsoConfiguration);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.SAVE_SSO_CONFIGURATION_BY_METADATA,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_CONFIGURATION_BY_METADATA,\n      value: false\n    }));\n  }\n}\n\nfunction* updateSSOConfiguration({\n  payload\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n    value: true\n  }));\n\n  const {\n    callback,\n    ssoConfigId\n  } = payload,\n        ssoConfiguration = _objectWithoutPropertiesLoose(payload, _excluded2);\n\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    const newSsoConfiguration = yield call(api.auth.updateSSOConfiguration, ssoConfigId, ssoConfiguration);\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => ssoConfig.id === ssoConfigId ? newSsoConfiguration : ssoConfig);\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(newSsoConfiguration);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n      value: false\n    }));\n  }\n}\n\nfunction* updateSSOConfigurationByMetadata({\n  payload\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.UPDATE_SSO_CONFIGURATION_BY_METADATA,\n    value: true\n  }));\n  const {\n    callback,\n    ssoConfigId,\n    configFile\n  } = payload;\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    const metadata = yield readFileAsText(configFile);\n    const newSsoConfiguration = yield call(api.auth.updateSSOConfigurationByMetadata, ssoConfigId, {\n      metadata\n    });\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => ssoConfig.id === ssoConfigId ? newSsoConfiguration : ssoConfig);\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(newSsoConfiguration);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.UPDATE_SSO_CONFIGURATION,\n      value: false\n    }));\n  }\n}\n\nfunction* deleteSSOConfiguration({\n  payload\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.DELETE_SSO_CONFIGURATION,\n    value: true\n  }));\n  const {\n    ssoConfigId,\n    callback\n  } = payload;\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    yield call(api.auth.deleteSSOConfiguration, ssoConfigId);\n    yield put(actions.setSSOState({\n      ssoConfigurations: ssoConfigurations.filter(({\n        id\n      }) => id !== ssoConfigId)\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.DELETE_SSO_CONFIGURATION,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.DELETE_SSO_CONFIGURATION,\n      value: false\n    }));\n  }\n}\n\nfunction* saveSSODomain({\n  payload\n}) {\n  const {\n    callback,\n    ssoConfigId\n  } = payload,\n        body = _objectWithoutPropertiesLoose(payload, _excluded3);\n\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.SAVE_SSO_DOMAIN,\n    value: true\n  }));\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    const domain = yield call(api.auth.createSSODomain, ssoConfigId, body);\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n      if (ssoConfig.id === ssoConfigId) {\n        return _extends({}, ssoConfig, {\n          domains: [...ssoConfig.domains, domain]\n        });\n      }\n\n      return ssoConfig;\n    });\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(domain);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.SAVE_SSO_DOMAIN,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_DOMAIN,\n      value: false\n    }));\n  }\n}\n\nfunction* deleteSSODomain({\n  payload\n}) {\n  const {\n    ssoConfigId,\n    domainId,\n    callback\n  } = payload;\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.DELETE_SSO_DOMAIN,\n    value: true\n  }));\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    yield call(api.auth.deleteSSODomain, ssoConfigId, domainId);\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n      if (ssoConfig.id === ssoConfigId) {\n        return _extends({}, ssoConfig, {\n          domains: ssoConfig.domains.filter(({\n            id\n          }) => id !== domainId)\n        });\n      }\n\n      return ssoConfig;\n    });\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.DELETE_SSO_DOMAIN,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.DELETE_SSO_DOMAIN,\n      value: false\n    }));\n  }\n}\n\nfunction* validateSSODomainV2({\n  payload\n}) {\n  const {\n    callback,\n    domainId,\n    ssoConfigId\n  } = payload;\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.VALIDATE_SSO_DOMAIN,\n    value: true\n  }));\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    yield call(api.auth.validateSSODomain, ssoConfigId, domainId);\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n      if (ssoConfig.id === ssoConfigId) {\n        return _extends({}, ssoConfig, {\n          domains: ssoConfig.domains.map(ssoDomain => ssoDomain.id === domainId ? _extends({}, ssoDomain, {\n            validated: true\n          }) : ssoDomain)\n        });\n      }\n\n      return ssoConfig;\n    });\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.VALIDATE_SSO_DOMAIN,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.VALIDATE_SSO_DOMAIN,\n      value: false\n    }));\n  }\n}\n\nfunction* setSSODefaultRoles({\n  payload: {\n    callback,\n    ssoConfigId,\n    roleIds\n  }\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.UPDATE_SSO_DEFAULT_ROLES,\n    value: true\n  }));\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    yield call(api.auth.setSSODefaultRoles, ssoConfigId, {\n      roleIds\n    });\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n      if (ssoConfig.id === ssoConfigId) {\n        return _extends({}, ssoConfig, {\n          roleIds\n        });\n      }\n\n      return ssoConfig;\n    });\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.UPDATE_SSO_DEFAULT_ROLES,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.UPDATE_SSO_DEFAULT_ROLES,\n      value: false\n    }));\n  }\n}\n\nfunction* setSSOGroups({\n  payload: {\n    groupsToAdd,\n    groupsToDelete,\n    ssoConfigId,\n    callback\n  }\n}) {\n  yield put(actions.setSSOLoader({\n    key: SSOStateKeys.SAVE_SSO_GROUPS,\n    value: true\n  }));\n  const ssoConfigurations = yield select(state => state.auth.ssoState.ssoConfigurations);\n\n  try {\n    yield all(groupsToDelete.map(groupId => call(api.auth.deleteSSOGroup, ssoConfigId, groupId)));\n    yield all(groupsToAdd.map(group => call(api.auth.createSSOGroup, ssoConfigId, group)));\n    const groups = yield call(api.auth.getSSOGroups, ssoConfigId);\n    const newSsoConfigurations = ssoConfigurations.map(ssoConfig => {\n      if (ssoConfig.id === ssoConfigId) {\n        return _extends({}, ssoConfig, {\n          groups\n        });\n      }\n\n      return ssoConfig;\n    });\n    yield put(actions.setSSOState({\n      ssoConfigurations: newSsoConfigurations\n    }));\n    callback == null ? void 0 : callback(true);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.SAVE_SSO_GROUPS,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_GROUPS,\n      value: false\n    }));\n  }\n}\n\nfunction* updateSSOGroups({\n  payload: {\n    ssoConfigId,\n    changedGroups,\n    callback\n  }\n}) {\n  try {\n    yield all(changedGroups.map(group => call(api.auth.updateSSOGroup, ssoConfigId, group)));\n    callback == null ? void 0 : callback(true);\n  } catch (error) {\n    yield put(actions.setSSOError({\n      key: SSOStateKeys.SAVE_SSO_GROUPS,\n      value: error.message\n    }));\n    callback == null ? void 0 : callback(null, error);\n  } finally {\n    yield put(actions.setSSOLoader({\n      key: SSOStateKeys.SAVE_SSO_GROUPS,\n      value: false\n    }));\n  }\n}\n\nexport function* ssoSagas() {\n  yield takeEvery(actions.loadSSOConfigurationsV2, loadSSOConfigurationsV2);\n  yield takeEvery(actions.saveSSOConfigurationV2, saveSSOConfigurationV2);\n  yield takeEvery(actions.saveSSODomain, saveSSODomain);\n  yield takeEvery(actions.deleteSSODomain, deleteSSODomain);\n  yield takeEvery(actions.validateSSODomainV2, validateSSODomainV2);\n  yield takeEvery(actions.updateSSOConfiguration, updateSSOConfiguration);\n  yield takeEvery(actions.deleteSSOConfiguration, deleteSSOConfiguration);\n  yield takeEvery(actions.setSSOGroups, setSSOGroups);\n  yield takeEvery(actions.updateSSOGroups, updateSSOGroups);\n  yield takeEvery(actions.setSSODefaultRoles, setSSODefaultRoles);\n  yield takeEvery(actions.saveSSOConfigurationByMetadata, saveSSOConfigurationByMetadata);\n  yield takeEvery(actions.updateSSOConfigurationByMetadata, updateSSOConfigurationByMetadata);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}