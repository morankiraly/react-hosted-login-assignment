{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nimport { MFAStep } from './interfaces';\nimport { resetStateByKey, typeReducerForKey } from '../utils';\nimport { authStoreName } from '../../constants';\nconst mfaState = {\n  step: MFAStep.verify,\n  loading: false,\n  saving: false\n};\nconst reducers = {\n  setMfaState: typeReducerForKey('mfaState'),\n  resetMfaState: resetStateByKey('mfaState', {\n    mfaState\n  })\n};\nconst actions = {\n  enrollMfa: createAction(`${authStoreName}/enrollMfa`),\n  getMFADevices: createAction(`${authStoreName}/getMFADevices`),\n  getMFAStrategies: createAction(`${authStoreName}/getMFAStrategies`),\n  verifyMfa: createAction(`${authStoreName}/verifyMfa`, payload => ({\n    payload\n  })),\n  verifyMfaAfterForce: createAction(`${authStoreName}/verifyMfaAfterForce`, payload => ({\n    payload\n  })),\n  disableMfa: createAction(`${authStoreName}/disableMfa`, payload => ({\n    payload\n  })),\n  preDisableMfaSms: createAction(`${authStoreName}/preDisableMfaSms`, payload => ({\n    payload\n  })),\n  disableMfaSms: createAction(`${authStoreName}/disableMfaSms`, payload => ({\n    payload\n  })),\n  preEnrollMfaSms: createAction(`${authStoreName}/preEnrollMfaSms`, payload => ({\n    payload\n  })),\n  enrollMfaSms: createAction(`${authStoreName}/enrollMfaSms`, payload => ({\n    payload\n  })),\n  preEnrollMfaWebAuthn: createAction(`${authStoreName}/preEnrollMfaWebAuthn`, payload => ({\n    payload\n  })),\n  enrollMfaWebAuthn: createAction(`${authStoreName}/enrollMfaWebAuthn`, payload => ({\n    payload\n  })),\n  preDisableMfaWebAuthn: createAction(`${authStoreName}/preDisableMfaWebAuthn`, payload => ({\n    payload\n  })),\n  disableMfaWebAuthn: createAction(`${authStoreName}/disableMfaWebAuthn`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { mfaState, reducers as mfaReducers, actions as mfaActions };","map":{"version":3,"names":["createAction","MFAStep","resetStateByKey","typeReducerForKey","authStoreName","mfaState","step","verify","loading","saving","reducers","setMfaState","resetMfaState","actions","enrollMfa","getMFADevices","getMFAStrategies","verifyMfa","payload","verifyMfaAfterForce","disableMfa","preDisableMfaSms","disableMfaSms","preEnrollMfaSms","enrollMfaSms","preEnrollMfaWebAuthn","enrollMfaWebAuthn","preDisableMfaWebAuthn","disableMfaWebAuthn","Matcher","mfaReducers","mfaActions"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/redux-store/auth/MfaState/index.js"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { MFAStep } from './interfaces';\nimport { resetStateByKey, typeReducerForKey } from '../utils';\nimport { authStoreName } from '../../constants';\nconst mfaState = {\n  step: MFAStep.verify,\n  loading: false,\n  saving: false\n};\nconst reducers = {\n  setMfaState: typeReducerForKey('mfaState'),\n  resetMfaState: resetStateByKey('mfaState', {\n    mfaState\n  })\n};\nconst actions = {\n  enrollMfa: createAction(`${authStoreName}/enrollMfa`),\n  getMFADevices: createAction(`${authStoreName}/getMFADevices`),\n  getMFAStrategies: createAction(`${authStoreName}/getMFAStrategies`),\n  verifyMfa: createAction(`${authStoreName}/verifyMfa`, payload => ({\n    payload\n  })),\n  verifyMfaAfterForce: createAction(`${authStoreName}/verifyMfaAfterForce`, payload => ({\n    payload\n  })),\n  disableMfa: createAction(`${authStoreName}/disableMfa`, payload => ({\n    payload\n  })),\n  preDisableMfaSms: createAction(`${authStoreName}/preDisableMfaSms`, payload => ({\n    payload\n  })),\n  disableMfaSms: createAction(`${authStoreName}/disableMfaSms`, payload => ({\n    payload\n  })),\n  preEnrollMfaSms: createAction(`${authStoreName}/preEnrollMfaSms`, payload => ({\n    payload\n  })),\n  enrollMfaSms: createAction(`${authStoreName}/enrollMfaSms`, payload => ({\n    payload\n  })),\n  preEnrollMfaWebAuthn: createAction(`${authStoreName}/preEnrollMfaWebAuthn`, payload => ({\n    payload\n  })),\n  enrollMfaWebAuthn: createAction(`${authStoreName}/enrollMfaWebAuthn`, payload => ({\n    payload\n  })),\n  preDisableMfaWebAuthn: createAction(`${authStoreName}/preDisableMfaWebAuthn`, payload => ({\n    payload\n  })),\n  disableMfaWebAuthn: createAction(`${authStoreName}/disableMfaWebAuthn`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { mfaState, reducers as mfaReducers, actions as mfaActions };"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,UAAU;AAC7D,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,MAAMC,QAAQ,GAAG;EACfC,IAAI,EAAEL,OAAO,CAACM,MAAM;EACpBC,OAAO,EAAE,KAAK;EACdC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,QAAQ,GAAG;EACfC,WAAW,EAAER,iBAAiB,CAAC,UAAU,CAAC;EAC1CS,aAAa,EAAEV,eAAe,CAAC,UAAU,EAAE;IACzCG;EACF,CAAC;AACH,CAAC;AACD,MAAMQ,OAAO,GAAG;EACdC,SAAS,EAAEd,YAAY,CAAE,GAAEI,aAAc,YAAW,CAAC;EACrDW,aAAa,EAAEf,YAAY,CAAE,GAAEI,aAAc,gBAAe,CAAC;EAC7DY,gBAAgB,EAAEhB,YAAY,CAAE,GAAEI,aAAc,mBAAkB,CAAC;EACnEa,SAAS,EAAEjB,YAAY,CAAE,GAAEI,aAAc,YAAW,EAAEc,OAAO,KAAK;IAChEA;EACF,CAAC,CAAC,CAAC;EACHC,mBAAmB,EAAEnB,YAAY,CAAE,GAAEI,aAAc,sBAAqB,EAAEc,OAAO,KAAK;IACpFA;EACF,CAAC,CAAC,CAAC;EACHE,UAAU,EAAEpB,YAAY,CAAE,GAAEI,aAAc,aAAY,EAAEc,OAAO,KAAK;IAClEA;EACF,CAAC,CAAC,CAAC;EACHG,gBAAgB,EAAErB,YAAY,CAAE,GAAEI,aAAc,mBAAkB,EAAEc,OAAO,KAAK;IAC9EA;EACF,CAAC,CAAC,CAAC;EACHI,aAAa,EAAEtB,YAAY,CAAE,GAAEI,aAAc,gBAAe,EAAEc,OAAO,KAAK;IACxEA;EACF,CAAC,CAAC,CAAC;EACHK,eAAe,EAAEvB,YAAY,CAAE,GAAEI,aAAc,kBAAiB,EAAEc,OAAO,KAAK;IAC5EA;EACF,CAAC,CAAC,CAAC;EACHM,YAAY,EAAExB,YAAY,CAAE,GAAEI,aAAc,eAAc,EAAEc,OAAO,KAAK;IACtEA;EACF,CAAC,CAAC,CAAC;EACHO,oBAAoB,EAAEzB,YAAY,CAAE,GAAEI,aAAc,uBAAsB,EAAEc,OAAO,KAAK;IACtFA;EACF,CAAC,CAAC,CAAC;EACHQ,iBAAiB,EAAE1B,YAAY,CAAE,GAAEI,aAAc,oBAAmB,EAAEc,OAAO,KAAK;IAChFA;EACF,CAAC,CAAC,CAAC;EACHS,qBAAqB,EAAE3B,YAAY,CAAE,GAAEI,aAAc,wBAAuB,EAAEc,OAAO,KAAK;IACxFA;EACF,CAAC,CAAC,CAAC;EACHU,kBAAkB,EAAE5B,YAAY,CAAE,GAAEI,aAAc,qBAAoB,EAAEc,OAAO,KAAK;IAClFA;EACF,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAMW,OAAO,GAAG,CAAC,CAAC;AAClB,SAASxB,QAAQ,EAAEK,QAAQ,IAAIoB,WAAW,EAAEjB,OAAO,IAAIkB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}