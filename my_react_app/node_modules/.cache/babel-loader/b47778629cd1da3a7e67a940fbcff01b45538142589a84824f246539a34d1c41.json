{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"callback\", \"profilePictureUrl\"],\n  _excluded2 = [\"callback\", \"profilePictureUrl\"];\nimport { call, put, retry, select, takeEvery, takeLeading } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { profileStateDemo, userDemo, userProfileDemo } from '../dummy';\nimport { delay } from '../utils';\nfunction* loadProfile() {\n  yield put(actions.setProfileState({\n    loading: true\n  }));\n  try {\n    const profile = yield retry(3, 2000, api.teams.getProfile);\n    const currentUser = yield select(state => state.auth.user);\n    actions.setUser(_extends({}, currentUser, profile));\n    yield put(actions.setProfileState({\n      profile,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setProfileState({\n      loading: false,\n      error: e.message\n    }));\n  }\n}\nfunction b64toBlob(base64, contentType) {\n  const sliceSize = 512;\n  const byteCharacters = atob(base64);\n  const byteArrays = [];\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n    byteArrays.push(new Uint8Array(byteNumbers));\n  }\n  return new Blob(byteArrays, {\n    type: contentType\n  });\n}\nfunction base64ToFormData(base64) {\n  let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'file';\n  const matchResult = base64.match(/^data:image\\/([A-Za-z-+\\/]+);base64,(.+)$/);\n  if (matchResult == null) {\n    return null;\n  } // Get the content type of the image\n\n  const contentType = `image/${matchResult[1]}`; // get the real base64 content of the file\n\n  const data = matchResult[2]; // Convert it to a blob to upload\n\n  const blob = b64toBlob(data, contentType); // Create a FormData and append the file with \"image\" as parameter name\n\n  const formDataToUpload = new FormData();\n  formDataToUpload.append(key, new File([blob], key, {\n    type: contentType\n  }));\n  return formDataToUpload;\n}\nfunction* saveProfile(_ref) {\n  let {\n      payload: {\n        callback,\n        profilePictureUrl\n      }\n    } = _ref,\n    payload = _objectWithoutPropertiesLoose(_ref.payload, _excluded);\n  yield put(actions.setProfileState({\n    saving: true,\n    error: null\n  }));\n  try {\n    const oldProfileData = yield select(state => state.auth.profileState.profile);\n    let newProfilePictureUrl = oldProfileData.profilePictureUrl;\n    if (profilePictureUrl !== oldProfileData.profilePictureUrl && profilePictureUrl) {\n      const matchResult = (profilePictureUrl || '').match(/^data:image\\/([A-Za-z-+\\/]+);base64,(.+)$/);\n      if (matchResult) {\n        const profileImage = base64ToFormData(profilePictureUrl, 'image');\n        if (profileImage) {\n          newProfilePictureUrl = yield call(api.teams.updateProfileImage, profileImage);\n          const imageTimeStamp = Date.now().toString();\n          const urlTemplate = new URL(newProfilePictureUrl);\n          urlTemplate.searchParams.set('t', imageTimeStamp);\n          newProfilePictureUrl = urlTemplate.href;\n        }\n      }\n    }\n    const newProfileData = _extends({}, oldProfileData, payload, {\n      profilePictureUrl: newProfilePictureUrl\n    });\n    const profile = yield call(api.teams.updateProfile, newProfileData);\n    const currentUser = yield select(state => state.auth.user);\n    yield put(actions.setUser(_extends({}, currentUser, profile)));\n    yield put(actions.setProfileState({\n      profile,\n      saving: false\n    }));\n    callback == null ? void 0 : callback(newProfileData);\n  } catch (e) {\n    yield put(actions.setProfileState({\n      saving: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null, e);\n  }\n}\nfunction changePassword(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    yield put(actions.setProfileState({\n      loading: true\n    }));\n    try {\n      var _payload$callback;\n      yield call(api.teams.changePassword, payload);\n      yield put(actions.setProfileState({\n        loading: false,\n        error: undefined\n      }));\n      (_payload$callback = payload.callback) == null ? void 0 : _payload$callback.call(payload, true);\n    } catch (e) {\n      var _payload$callback2;\n      yield put(actions.setProfileState({\n        loading: false,\n        error: e.message\n      }));\n      (_payload$callback2 = payload.callback) == null ? void 0 : _payload$callback2.call(payload, null, e);\n    }\n  }();\n}\nexport function* profileSagas() {\n  yield takeLeading(actions.loadProfile, loadProfile);\n  yield takeEvery(actions.saveProfile, saveProfile);\n  yield takeEvery(actions.changePassword, changePassword);\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadProfileMock() {\n  yield put(actions.setProfileState({\n    loading: true\n  }));\n  yield delay();\n  yield put(actions.setUser(_extends({}, userDemo, userProfileDemo)));\n  yield put(actions.setProfileState({\n    loading: false,\n    profile: userProfileDemo\n  }));\n}\nfunction* saveProfileMock(_ref2) {\n  let {\n      payload: {\n        callback,\n        profilePictureUrl\n      }\n    } = _ref2,\n    payload = _objectWithoutPropertiesLoose(_ref2.payload, _excluded2);\n  yield put(actions.setProfileState({\n    saving: true,\n    error: null\n  }));\n  const oldProfileData = profileStateDemo;\n  let newProfilePictureUrl = oldProfileData.profile.profilePictureUrl;\n  if (profilePictureUrl !== oldProfileData.profile.profilePictureUrl && profilePictureUrl) {\n    const matchResult = (profilePictureUrl || '').match(/^data:image\\/([A-Za-z-+\\/]+);base64,(.+)$/);\n    if (matchResult) {\n      newProfilePictureUrl = profilePictureUrl;\n    }\n  }\n  const newProfileData = _extends({}, oldProfileData.profile, payload, {\n    profilePictureUrl: newProfilePictureUrl\n  });\n  const currentUser = userDemo;\n  yield delay();\n  yield put(actions.setUser(_extends({}, currentUser, newProfileData)));\n  yield put(actions.setProfileState({\n    loading: false,\n    error: null,\n    saving: false,\n    profile: newProfileData\n  }));\n  callback == null ? void 0 : callback(newProfileData);\n}\nfunction changePasswordMock(_ref4) {\n  let {\n    payload\n  } = _ref4;\n  return function* () {\n    var _payload$callback3;\n    yield put(actions.setProfileState({\n      loading: true\n    }));\n    yield delay();\n    yield put(actions.setProfileState({\n      loading: false,\n      error: undefined\n    }));\n    (_payload$callback3 = payload.callback) == null ? void 0 : _payload$callback3.call(payload, true);\n  }();\n}\nexport function* profileSagasMock() {\n  yield takeLeading(actions.loadProfile, loadProfileMock);\n  yield takeEvery(actions.saveProfile, saveProfileMock);\n  yield takeEvery(actions.changePassword, changePasswordMock);\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","call","put","retry","select","takeEvery","takeLeading","api","actions","profileStateDemo","userDemo","userProfileDemo","delay","loadProfile","setProfileState","loading","profile","teams","getProfile","currentUser","state","auth","user","setUser","e","error","message","b64toBlob","base64","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","push","Uint8Array","Blob","type","base64ToFormData","key","matchResult","match","data","blob","formDataToUpload","FormData","append","File","saveProfile","_ref","payload","callback","profilePictureUrl","saving","oldProfileData","profileState","newProfilePictureUrl","profileImage","updateProfileImage","imageTimeStamp","Date","now","toString","urlTemplate","URL","searchParams","set","href","newProfileData","updateProfile","changePassword","_payload$callback","undefined","_payload$callback2","profileSagas","loadProfileMock","saveProfileMock","_ref2","changePasswordMock","_payload$callback3","profileSagasMock"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/redux-store/auth/ProfileState/saga.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"callback\", \"profilePictureUrl\"],\n      _excluded2 = [\"callback\", \"profilePictureUrl\"];\nimport { call, put, retry, select, takeEvery, takeLeading } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { profileStateDemo, userDemo, userProfileDemo } from '../dummy';\nimport { delay } from '../utils';\n\nfunction* loadProfile() {\n  yield put(actions.setProfileState({\n    loading: true\n  }));\n\n  try {\n    const profile = yield retry(3, 2000, api.teams.getProfile);\n    const currentUser = yield select(state => state.auth.user);\n    actions.setUser(_extends({}, currentUser, profile));\n    yield put(actions.setProfileState({\n      profile,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setProfileState({\n      loading: false,\n      error: e.message\n    }));\n  }\n}\n\nfunction b64toBlob(base64, contentType) {\n  const sliceSize = 512;\n  const byteCharacters = atob(base64);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n    const byteNumbers = new Array(slice.length);\n\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    byteArrays.push(new Uint8Array(byteNumbers));\n  }\n\n  return new Blob(byteArrays, {\n    type: contentType\n  });\n}\n\nfunction base64ToFormData(base64, key = 'file') {\n  const matchResult = base64.match(/^data:image\\/([A-Za-z-+\\/]+);base64,(.+)$/);\n\n  if (matchResult == null) {\n    return null;\n  } // Get the content type of the image\n\n\n  const contentType = `image/${matchResult[1]}`; // get the real base64 content of the file\n\n  const data = matchResult[2]; // Convert it to a blob to upload\n\n  const blob = b64toBlob(data, contentType); // Create a FormData and append the file with \"image\" as parameter name\n\n  const formDataToUpload = new FormData();\n  formDataToUpload.append(key, new File([blob], key, {\n    type: contentType\n  }));\n  return formDataToUpload;\n}\n\nfunction* saveProfile(_ref) {\n  let {\n    payload: {\n      callback,\n      profilePictureUrl\n    }\n  } = _ref,\n      payload = _objectWithoutPropertiesLoose(_ref.payload, _excluded);\n\n  yield put(actions.setProfileState({\n    saving: true,\n    error: null\n  }));\n\n  try {\n    const oldProfileData = yield select(state => state.auth.profileState.profile);\n    let newProfilePictureUrl = oldProfileData.profilePictureUrl;\n\n    if (profilePictureUrl !== oldProfileData.profilePictureUrl && profilePictureUrl) {\n      const matchResult = (profilePictureUrl || '').match(/^data:image\\/([A-Za-z-+\\/]+);base64,(.+)$/);\n\n      if (matchResult) {\n        const profileImage = base64ToFormData(profilePictureUrl, 'image');\n\n        if (profileImage) {\n          newProfilePictureUrl = yield call(api.teams.updateProfileImage, profileImage);\n          const imageTimeStamp = Date.now().toString();\n          const urlTemplate = new URL(newProfilePictureUrl);\n          urlTemplate.searchParams.set('t', imageTimeStamp);\n          newProfilePictureUrl = urlTemplate.href;\n        }\n      }\n    }\n\n    const newProfileData = _extends({}, oldProfileData, payload, {\n      profilePictureUrl: newProfilePictureUrl\n    });\n\n    const profile = yield call(api.teams.updateProfile, newProfileData);\n    const currentUser = yield select(state => state.auth.user);\n    yield put(actions.setUser(_extends({}, currentUser, profile)));\n    yield put(actions.setProfileState({\n      profile,\n      saving: false\n    }));\n    callback == null ? void 0 : callback(newProfileData);\n  } catch (e) {\n    yield put(actions.setProfileState({\n      saving: false,\n      error: e.message\n    }));\n    callback == null ? void 0 : callback(null, e);\n  }\n}\n\nfunction* changePassword({\n  payload\n}) {\n  yield put(actions.setProfileState({\n    loading: true\n  }));\n\n  try {\n    var _payload$callback;\n\n    yield call(api.teams.changePassword, payload);\n    yield put(actions.setProfileState({\n      loading: false,\n      error: undefined\n    }));\n    (_payload$callback = payload.callback) == null ? void 0 : _payload$callback.call(payload, true);\n  } catch (e) {\n    var _payload$callback2;\n\n    yield put(actions.setProfileState({\n      loading: false,\n      error: e.message\n    }));\n    (_payload$callback2 = payload.callback) == null ? void 0 : _payload$callback2.call(payload, null, e);\n  }\n}\n\nexport function* profileSagas() {\n  yield takeLeading(actions.loadProfile, loadProfile);\n  yield takeEvery(actions.saveProfile, saveProfile);\n  yield takeEvery(actions.changePassword, changePassword);\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadProfileMock() {\n  yield put(actions.setProfileState({\n    loading: true\n  }));\n  yield delay();\n  yield put(actions.setUser(_extends({}, userDemo, userProfileDemo)));\n  yield put(actions.setProfileState({\n    loading: false,\n    profile: userProfileDemo\n  }));\n}\n\nfunction* saveProfileMock(_ref2) {\n  let {\n    payload: {\n      callback,\n      profilePictureUrl\n    }\n  } = _ref2,\n      payload = _objectWithoutPropertiesLoose(_ref2.payload, _excluded2);\n\n  yield put(actions.setProfileState({\n    saving: true,\n    error: null\n  }));\n  const oldProfileData = profileStateDemo;\n  let newProfilePictureUrl = oldProfileData.profile.profilePictureUrl;\n\n  if (profilePictureUrl !== oldProfileData.profile.profilePictureUrl && profilePictureUrl) {\n    const matchResult = (profilePictureUrl || '').match(/^data:image\\/([A-Za-z-+\\/]+);base64,(.+)$/);\n\n    if (matchResult) {\n      newProfilePictureUrl = profilePictureUrl;\n    }\n  }\n\n  const newProfileData = _extends({}, oldProfileData.profile, payload, {\n    profilePictureUrl: newProfilePictureUrl\n  });\n\n  const currentUser = userDemo;\n  yield delay();\n  yield put(actions.setUser(_extends({}, currentUser, newProfileData)));\n  yield put(actions.setProfileState({\n    loading: false,\n    error: null,\n    saving: false,\n    profile: newProfileData\n  }));\n  callback == null ? void 0 : callback(newProfileData);\n}\n\nfunction* changePasswordMock({\n  payload\n}) {\n  var _payload$callback3;\n\n  yield put(actions.setProfileState({\n    loading: true\n  }));\n  yield delay();\n  yield put(actions.setProfileState({\n    loading: false,\n    error: undefined\n  }));\n  (_payload$callback3 = payload.callback) == null ? void 0 : _payload$callback3.call(payload, true);\n}\n\nexport function* profileSagasMock() {\n  yield takeLeading(actions.loadProfile, loadProfileMock);\n  yield takeEvery(actions.saveProfile, saveProfileMock);\n  yield takeEvery(actions.changePassword, changePasswordMock);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}