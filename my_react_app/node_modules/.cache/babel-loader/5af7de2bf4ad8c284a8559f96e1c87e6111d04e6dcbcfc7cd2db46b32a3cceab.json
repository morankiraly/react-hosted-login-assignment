{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"events\", \"url\"];\nimport { call, put, select, takeLeading } from 'redux-saga/effects';\nimport { api, ContextHolder } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { SignUpStage } from './interfaces';\nimport { AuthenticationTypes } from '../interfaces';\nimport { getMfaRequiredState, isMfaRequired } from '../LoginState/saga';\nexport function* loadAllowSignUps() {\n  yield put(actions.setSignUpState({\n    loading: true\n  }));\n  try {\n    const policy = yield call(api.auth.getVendorConfig);\n    const {\n      allowSignups: allowSignUps,\n      allowNotVerifiedUsersLogin\n    } = policy;\n    yield put(actions.setSignUpState({\n      loading: false,\n      allowSignUps,\n      allowNotVerifiedUsersLogin,\n      firstLoad: false\n    }));\n    yield put(actions.setSecurityPolicyPublicState({\n      policy,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setSignUpState({\n      loading: false,\n      error: e.message,\n      firstLoad: false\n    }));\n  }\n}\nexport function* signUpUser(_ref) {\n  let {\n      payload: {\n        events,\n        url\n      }\n    } = _ref,\n    payload = _objectWithoutPropertiesLoose(_ref.payload, _excluded);\n  yield put(actions.setSignUpState({\n    loading: true\n  }));\n  try {\n    const {\n      routes,\n      onRedirectTo\n    } = yield select(state => state.auth);\n    const {\n      shouldActivate,\n      user,\n      tenantId,\n      userId\n    } = yield call(api.auth.signUpUser, payload);\n    if (!payload.invitationToken) {\n      var _events$signUpComplet;\n      const {\n        email,\n        name,\n        companyName\n      } = payload;\n      events == null ? void 0 : (_events$signUpComplet = events.signUpComplete) == null ? void 0 : _events$signUpComplet.call(events, {\n        email,\n        name,\n        companyName,\n        url,\n        authenticationType: AuthenticationTypes.PASSWORD,\n        id: userId,\n        tenantId,\n        createdAt: new Date()\n      });\n    }\n    ContextHolder.setAccessToken(user == null ? void 0 : user.accessToken);\n    ContextHolder.setUser(user);\n    if (!shouldActivate && user && isMfaRequired(user)) {\n      const mfaRequiredState = yield getMfaRequiredState(user);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl);\n    } else {\n      yield put(actions.setSignUpState({\n        loading: false,\n        shouldActivate,\n        stage: SignUpStage.SignUpSuccess\n      }));\n      yield put(actions.setState({\n        user,\n        isAuthenticated: !!(user != null && user.accessToken)\n      }));\n      if (!shouldActivate) {\n        yield put(actions.loadTenants());\n      }\n    }\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setSignUpState({\n      loading: false,\n      error: e.message\n    }));\n  }\n  yield put(actions.setSignUpState({\n    loading: false\n  }));\n}\nexport function* resetSignUpStateSoft() {\n  const {\n    allowSignUps,\n    allowNotVerifiedUsersLogin\n  } = yield select(state => state.auth.signUpState);\n  yield put(actions.resetSignUpState());\n  yield put(actions.setSignUpState({\n    allowSignUps,\n    allowNotVerifiedUsersLogin\n  }));\n}\nexport function* signUpSaga() {\n  yield takeLeading(actions.signUpUser, signUpUser);\n  yield takeLeading(actions.resetSignUpStateSoft, resetSignUpStateSoft);\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","call","put","select","takeLeading","api","ContextHolder","actions","SignUpStage","AuthenticationTypes","getMfaRequiredState","isMfaRequired","loadAllowSignUps","setSignUpState","loading","policy","auth","getVendorConfig","allowSignups","allowSignUps","allowNotVerifiedUsersLogin","firstLoad","setSecurityPolicyPublicState","e","error","message","signUpUser","_ref","payload","events","url","routes","onRedirectTo","state","shouldActivate","user","tenantId","userId","invitationToken","_events$signUpComplet","email","name","companyName","signUpComplete","authenticationType","PASSWORD","id","createdAt","Date","setAccessToken","accessToken","setUser","mfaRequiredState","setState","loginUrl","stage","SignUpSuccess","isAuthenticated","loadTenants","resetSignUpStateSoft","signUpState","resetSignUpState","signUpSaga"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/auth/SignUp/saga.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"events\", \"url\"];\nimport { call, put, select, takeLeading } from 'redux-saga/effects';\nimport { api, ContextHolder } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { SignUpStage } from './interfaces';\nimport { AuthenticationTypes } from '../interfaces';\nimport { getMfaRequiredState, isMfaRequired } from '../LoginState/saga';\nexport function* loadAllowSignUps() {\n  yield put(actions.setSignUpState({\n    loading: true\n  }));\n\n  try {\n    const policy = yield call(api.auth.getVendorConfig);\n    const {\n      allowSignups: allowSignUps,\n      allowNotVerifiedUsersLogin\n    } = policy;\n    yield put(actions.setSignUpState({\n      loading: false,\n      allowSignUps,\n      allowNotVerifiedUsersLogin,\n      firstLoad: false\n    }));\n    yield put(actions.setSecurityPolicyPublicState({\n      policy,\n      loading: false\n    }));\n  } catch (e) {\n    yield put(actions.setSignUpState({\n      loading: false,\n      error: e.message,\n      firstLoad: false\n    }));\n  }\n}\nexport function* signUpUser(_ref) {\n  let {\n    payload: {\n      events,\n      url\n    }\n  } = _ref,\n      payload = _objectWithoutPropertiesLoose(_ref.payload, _excluded);\n\n  yield put(actions.setSignUpState({\n    loading: true\n  }));\n\n  try {\n    const {\n      routes,\n      onRedirectTo\n    } = yield select(state => state.auth);\n    const {\n      shouldActivate,\n      user,\n      tenantId,\n      userId\n    } = yield call(api.auth.signUpUser, payload);\n\n    if (!payload.invitationToken) {\n      var _events$signUpComplet;\n\n      const {\n        email,\n        name,\n        companyName\n      } = payload;\n      events == null ? void 0 : (_events$signUpComplet = events.signUpComplete) == null ? void 0 : _events$signUpComplet.call(events, {\n        email,\n        name,\n        companyName,\n        url,\n        authenticationType: AuthenticationTypes.PASSWORD,\n        id: userId,\n        tenantId,\n        createdAt: new Date()\n      });\n    }\n\n    ContextHolder.setAccessToken(user == null ? void 0 : user.accessToken);\n    ContextHolder.setUser(user);\n\n    if (!shouldActivate && user && isMfaRequired(user)) {\n      const mfaRequiredState = yield getMfaRequiredState(user);\n      yield put(actions.setState(mfaRequiredState));\n      onRedirectTo(routes.loginUrl);\n    } else {\n      yield put(actions.setSignUpState({\n        loading: false,\n        shouldActivate,\n        stage: SignUpStage.SignUpSuccess\n      }));\n      yield put(actions.setState({\n        user,\n        isAuthenticated: !!(user != null && user.accessToken)\n      }));\n\n      if (!shouldActivate) {\n        yield put(actions.loadTenants());\n      }\n    }\n  } catch (e) {\n    ContextHolder.setAccessToken(null);\n    ContextHolder.setUser(null);\n    yield put(actions.setSignUpState({\n      loading: false,\n      error: e.message\n    }));\n  }\n\n  yield put(actions.setSignUpState({\n    loading: false\n  }));\n}\nexport function* resetSignUpStateSoft() {\n  const {\n    allowSignUps,\n    allowNotVerifiedUsersLogin\n  } = yield select(state => state.auth.signUpState);\n  yield put(actions.resetSignUpState());\n  yield put(actions.setSignUpState({\n    allowSignUps,\n    allowNotVerifiedUsersLogin\n  }));\n}\nexport function* signUpSaga() {\n  yield takeLeading(actions.signUpUser, signUpUser);\n  yield takeLeading(actions.resetSignUpStateSoft, resetSignUpStateSoft);\n}"],"mappings":"AAAA,OAAOA,6BAA6B,MAAM,yDAAyD;AACnG,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;AACnC,SAASC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,WAAW,QAAQ,oBAAoB;AACnE,SAASC,GAAG,EAAEC,aAAa,QAAQ,oBAAoB;AACvD,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,mBAAmB,QAAQ,eAAe;AACnD,SAASC,mBAAmB,EAAEC,aAAa,QAAQ,oBAAoB;AACvE,OAAO,UAAUC,gBAAgB,GAAG;EAClC,MAAMV,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;IAC/BC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;EAEH,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMd,IAAI,CAACI,GAAG,CAACW,IAAI,CAACC,eAAe,CAAC;IACnD,MAAM;MACJC,YAAY,EAAEC,YAAY;MAC1BC;IACF,CAAC,GAAGL,MAAM;IACV,MAAMb,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;MAC/BC,OAAO,EAAE,KAAK;MACdK,YAAY;MACZC,0BAA0B;MAC1BC,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;IACH,MAAMnB,GAAG,CAACK,OAAO,CAACe,4BAA4B,CAAC;MAC7CP,MAAM;MACND,OAAO,EAAE;IACX,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOS,CAAC,EAAE;IACV,MAAMrB,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;MAC/BC,OAAO,EAAE,KAAK;MACdU,KAAK,EAAED,CAAC,CAACE,OAAO;MAChBJ,SAAS,EAAE;IACb,CAAC,CAAC,CAAC;EACL;AACF;AACA,OAAO,UAAUK,UAAU,CAACC,IAAI,EAAE;EAChC,IAAI;MACFC,OAAO,EAAE;QACPC,MAAM;QACNC;MACF;IACF,CAAC,GAAGH,IAAI;IACJC,OAAO,GAAG7B,6BAA6B,CAAC4B,IAAI,CAACC,OAAO,EAAE5B,SAAS,CAAC;EAEpE,MAAME,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;IAC/BC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;EAEH,IAAI;IACF,MAAM;MACJiB,MAAM;MACNC;IACF,CAAC,GAAG,MAAM7B,MAAM,CAAC8B,KAAK,IAAIA,KAAK,CAACjB,IAAI,CAAC;IACrC,MAAM;MACJkB,cAAc;MACdC,IAAI;MACJC,QAAQ;MACRC;IACF,CAAC,GAAG,MAAMpC,IAAI,CAACI,GAAG,CAACW,IAAI,CAACU,UAAU,EAAEE,OAAO,CAAC;IAE5C,IAAI,CAACA,OAAO,CAACU,eAAe,EAAE;MAC5B,IAAIC,qBAAqB;MAEzB,MAAM;QACJC,KAAK;QACLC,IAAI;QACJC;MACF,CAAC,GAAGd,OAAO;MACXC,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,CAACU,qBAAqB,GAAGV,MAAM,CAACc,cAAc,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,qBAAqB,CAACtC,IAAI,CAAC4B,MAAM,EAAE;QAC9HW,KAAK;QACLC,IAAI;QACJC,WAAW;QACXZ,GAAG;QACHc,kBAAkB,EAAEnC,mBAAmB,CAACoC,QAAQ;QAChDC,EAAE,EAAET,MAAM;QACVD,QAAQ;QACRW,SAAS,EAAE,IAAIC,IAAI;MACrB,CAAC,CAAC;IACJ;IAEA1C,aAAa,CAAC2C,cAAc,CAACd,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACe,WAAW,CAAC;IACtE5C,aAAa,CAAC6C,OAAO,CAAChB,IAAI,CAAC;IAE3B,IAAI,CAACD,cAAc,IAAIC,IAAI,IAAIxB,aAAa,CAACwB,IAAI,CAAC,EAAE;MAClD,MAAMiB,gBAAgB,GAAG,MAAM1C,mBAAmB,CAACyB,IAAI,CAAC;MACxD,MAAMjC,GAAG,CAACK,OAAO,CAAC8C,QAAQ,CAACD,gBAAgB,CAAC,CAAC;MAC7CpB,YAAY,CAACD,MAAM,CAACuB,QAAQ,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMpD,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;QAC/BC,OAAO,EAAE,KAAK;QACdoB,cAAc;QACdqB,KAAK,EAAE/C,WAAW,CAACgD;MACrB,CAAC,CAAC,CAAC;MACH,MAAMtD,GAAG,CAACK,OAAO,CAAC8C,QAAQ,CAAC;QACzBlB,IAAI;QACJsB,eAAe,EAAE,CAAC,EAAEtB,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACe,WAAW;MACtD,CAAC,CAAC,CAAC;MAEH,IAAI,CAAChB,cAAc,EAAE;QACnB,MAAMhC,GAAG,CAACK,OAAO,CAACmD,WAAW,EAAE,CAAC;MAClC;IACF;EACF,CAAC,CAAC,OAAOnC,CAAC,EAAE;IACVjB,aAAa,CAAC2C,cAAc,CAAC,IAAI,CAAC;IAClC3C,aAAa,CAAC6C,OAAO,CAAC,IAAI,CAAC;IAC3B,MAAMjD,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;MAC/BC,OAAO,EAAE,KAAK;MACdU,KAAK,EAAED,CAAC,CAACE;IACX,CAAC,CAAC,CAAC;EACL;EAEA,MAAMvB,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;IAC/BC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;AACL;AACA,OAAO,UAAU6C,oBAAoB,GAAG;EACtC,MAAM;IACJxC,YAAY;IACZC;EACF,CAAC,GAAG,MAAMjB,MAAM,CAAC8B,KAAK,IAAIA,KAAK,CAACjB,IAAI,CAAC4C,WAAW,CAAC;EACjD,MAAM1D,GAAG,CAACK,OAAO,CAACsD,gBAAgB,EAAE,CAAC;EACrC,MAAM3D,GAAG,CAACK,OAAO,CAACM,cAAc,CAAC;IAC/BM,YAAY;IACZC;EACF,CAAC,CAAC,CAAC;AACL;AACA,OAAO,UAAU0C,UAAU,GAAG;EAC5B,MAAM1D,WAAW,CAACG,OAAO,CAACmB,UAAU,EAAEA,UAAU,CAAC;EACjD,MAAMtB,WAAW,CAACG,OAAO,CAACoD,oBAAoB,EAAEA,oBAAoB,CAAC;AACvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}