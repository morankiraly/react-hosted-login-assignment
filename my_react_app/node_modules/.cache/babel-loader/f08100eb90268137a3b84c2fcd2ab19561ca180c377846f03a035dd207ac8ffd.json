{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { api } from '@frontegg/rest-api';\nimport { defaultItemsPerPage, actions, storeName } from './reducer';\nimport { all, call, put, takeLatest, select as sagaSelect } from 'redux-saga/effects';\nconst select = () => sagaSelect(_ => _[storeName]);\nfunction* loadStats() {\n  const {\n    sortBy,\n    sortDirection\n  } = yield select();\n  try {\n    const stats = yield call(api.audits.getAuditsStats, {\n      sortBy,\n      sortDirection,\n      count: defaultItemsPerPage\n    });\n    yield put(actions.loadStatsSuccess(stats));\n  } catch (e) {\n    const errorMessage = {\n      name: 'stats',\n      error: e\n    };\n    console.error('failed to load stats - ', e);\n    yield put(actions.loadItemFailedAction(errorMessage));\n  }\n}\nfunction* loadMetadata() {\n  try {\n    const result = yield call(api.metadata.getAuditsMetadata);\n    yield put(actions.loadMetadataSuccess(result));\n  } catch (e) {\n    const errorMessage = {\n      name: 'metadata',\n      error: e\n    };\n    console.error('failed to load metadata - ', e);\n    yield put(actions.loadItemFailedAction(errorMessage));\n  }\n}\nconst filterToObject = arr => arr.reduce((res, curr) => {\n  res[curr.key] = curr.value;\n  return res;\n}, {});\nfunction loadAuditsFunction(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    const {\n      filters,\n      sortBy,\n      sortDirection,\n      filter,\n      offset,\n      virtualScroll\n    } = yield select();\n    const {\n      appendMode = virtualScroll,\n      onlyOneLoad = true,\n      offset: incomeOffset\n    } = payload || {};\n    const {\n      rowsData\n    } = appendMode ? yield select() : {\n      rowsData: []\n    };\n    try {\n      const f2o = filterToObject(filters);\n      const {\n        data,\n        total\n      } = yield call(api.audits.getAudits, _extends({}, virtualScroll && {\n        paginationMode: 'virtual'\n      }, {\n        sortDirection,\n        sortBy,\n        filter\n      }, f2o, {\n        // TODO: refactor once api become V2 with query field for virtual scroll\n        offset: virtualScroll ? rowsData.length + incomeOffset || rowsData.length + offset : incomeOffset || offset,\n        count: defaultItemsPerPage\n      }));\n      yield put(actions.loadAuditsSuccess({\n        rowsData: [...rowsData, ...data],\n        total\n      }));\n      if (onlyOneLoad) {\n        yield put(actions.finishLoading());\n      }\n    } catch (e) {\n      const errorMessage = {\n        name: 'audits',\n        error: e\n      };\n      console.error('failed to load audits - ', e);\n      yield put(actions.loadItemFailedAction(errorMessage));\n    }\n  }();\n}\nfunction* initDataFunction() {\n  yield put(actions.startLoading());\n  yield all([loadStats(), loadMetadata(), loadAuditsFunction({\n    payload: {\n      onlyOneLoad: false\n    },\n    type: ''\n  })]);\n  yield put(actions.finishLoading());\n}\nfunction removeFilterFunction(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    const {\n      filters: allFilters\n    } = yield select();\n    const removedFilterIndex = allFilters.findIndex(item => item.key === payload.key);\n    if (removedFilterIndex < 0) {\n      return;\n    }\n    const newFilters = [...allFilters.slice(0, removedFilterIndex), ...allFilters.slice(removedFilterIndex + 1)];\n    yield put(actions.setFilterData(newFilters));\n  }();\n}\nfunction filterDataFunction(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    const {\n      filters: allFilters\n    } = yield select();\n    let filterIndex = allFilters.findIndex(item => item.key === payload.key);\n    if (filterIndex < 0) {\n      filterIndex = allFilters.length;\n    }\n    const newFilters = [...allFilters.slice(0, filterIndex), payload, ...allFilters.slice(filterIndex + 1)];\n    yield put(actions.setFilterData(newFilters));\n  }();\n}\nfunction* exportCsvFunction() {\n  const {\n    filters,\n    sortBy,\n    sortDirection,\n    filter,\n    headerProps\n  } = yield select();\n  const f2o = filterToObject(filters);\n  yield put(actions.startDownloadingCsv());\n  const outputFileName = `audits.csv`;\n  try {\n    yield api.audits.exportAudits(_extends({\n      endpoint: 'csv/v2',\n      headerProps,\n      sortDirection,\n      sortBy,\n      filter\n    }, f2o, {\n      offset: 0,\n      outputFileName\n    }));\n  } catch (e) {\n    console.error('failed to export audits - ', e);\n  } finally {\n    yield put(actions.stopDownloadingCsv());\n  }\n}\nexport function* sagas() {\n  yield takeLatest(actions.initData, initDataFunction);\n  yield takeLatest(actions.removeFilter, removeFilterFunction);\n  yield takeLatest(actions.filterData, filterDataFunction);\n  yield takeLatest([actions.loadAudits, actions.textSearch, actions.onPageChange], loadAuditsFunction);\n  yield takeLatest([actions.setFilterData, actions.setDataSorting, actions.startRefresh], () => loadAuditsFunction({\n    payload: {\n      appendMode: false\n    },\n    type: ''\n  }));\n  yield takeLatest(actions.exportCSV, exportCsvFunction);\n}","map":{"version":3,"names":["_extends","api","defaultItemsPerPage","actions","storeName","all","call","put","takeLatest","select","sagaSelect","_","loadStats","sortBy","sortDirection","stats","audits","getAuditsStats","count","loadStatsSuccess","e","errorMessage","name","error","console","loadItemFailedAction","loadMetadata","result","metadata","getAuditsMetadata","loadMetadataSuccess","filterToObject","arr","reduce","res","curr","key","value","loadAuditsFunction","payload","filters","filter","offset","virtualScroll","appendMode","onlyOneLoad","incomeOffset","rowsData","f2o","data","total","getAudits","paginationMode","length","loadAuditsSuccess","finishLoading","initDataFunction","startLoading","type","removeFilterFunction","allFilters","removedFilterIndex","findIndex","item","newFilters","slice","setFilterData","filterDataFunction","filterIndex","exportCsvFunction","headerProps","startDownloadingCsv","outputFileName","exportAudits","endpoint","stopDownloadingCsv","sagas","initData","removeFilter","filterData","loadAudits","textSearch","onPageChange","setDataSorting","startRefresh","exportCSV"],"sources":["/Users/sagiittah/Downloads/my-app/node_modules/@frontegg/redux-store/audits/backward-compatibility/saga.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { api } from '@frontegg/rest-api';\nimport { defaultItemsPerPage, actions, storeName } from './reducer';\nimport { all, call, put, takeLatest, select as sagaSelect } from 'redux-saga/effects';\n\nconst select = () => sagaSelect(_ => _[storeName]);\n\nfunction* loadStats() {\n  const {\n    sortBy,\n    sortDirection\n  } = yield select();\n\n  try {\n    const stats = yield call(api.audits.getAuditsStats, {\n      sortBy,\n      sortDirection,\n      count: defaultItemsPerPage\n    });\n    yield put(actions.loadStatsSuccess(stats));\n  } catch (e) {\n    const errorMessage = {\n      name: 'stats',\n      error: e\n    };\n    console.error('failed to load stats - ', e);\n    yield put(actions.loadItemFailedAction(errorMessage));\n  }\n}\n\nfunction* loadMetadata() {\n  try {\n    const result = yield call(api.metadata.getAuditsMetadata);\n    yield put(actions.loadMetadataSuccess(result));\n  } catch (e) {\n    const errorMessage = {\n      name: 'metadata',\n      error: e\n    };\n    console.error('failed to load metadata - ', e);\n    yield put(actions.loadItemFailedAction(errorMessage));\n  }\n}\n\nconst filterToObject = arr => arr.reduce((res, curr) => {\n  res[curr.key] = curr.value;\n  return res;\n}, {});\n\nfunction* loadAuditsFunction({\n  payload\n}) {\n  const {\n    filters,\n    sortBy,\n    sortDirection,\n    filter,\n    offset,\n    virtualScroll\n  } = yield select();\n  const {\n    appendMode = virtualScroll,\n    onlyOneLoad = true,\n    offset: incomeOffset\n  } = payload || {};\n  const {\n    rowsData\n  } = appendMode ? yield select() : {\n    rowsData: []\n  };\n\n  try {\n    const f2o = filterToObject(filters);\n    const {\n      data,\n      total\n    } = yield call(api.audits.getAudits, _extends({}, virtualScroll && {\n      paginationMode: 'virtual'\n    }, {\n      sortDirection,\n      sortBy,\n      filter\n    }, f2o, {\n      // TODO: refactor once api become V2 with query field for virtual scroll\n      offset: virtualScroll ? rowsData.length + incomeOffset || rowsData.length + offset : incomeOffset || offset,\n      count: defaultItemsPerPage\n    }));\n    yield put(actions.loadAuditsSuccess({\n      rowsData: [...rowsData, ...data],\n      total\n    }));\n\n    if (onlyOneLoad) {\n      yield put(actions.finishLoading());\n    }\n  } catch (e) {\n    const errorMessage = {\n      name: 'audits',\n      error: e\n    };\n    console.error('failed to load audits - ', e);\n    yield put(actions.loadItemFailedAction(errorMessage));\n  }\n}\n\nfunction* initDataFunction() {\n  yield put(actions.startLoading());\n  yield all([loadStats(), loadMetadata(), loadAuditsFunction({\n    payload: {\n      onlyOneLoad: false\n    },\n    type: ''\n  })]);\n  yield put(actions.finishLoading());\n}\n\nfunction* removeFilterFunction({\n  payload\n}) {\n  const {\n    filters: allFilters\n  } = yield select();\n  const removedFilterIndex = allFilters.findIndex(item => item.key === payload.key);\n\n  if (removedFilterIndex < 0) {\n    return;\n  }\n\n  const newFilters = [...allFilters.slice(0, removedFilterIndex), ...allFilters.slice(removedFilterIndex + 1)];\n  yield put(actions.setFilterData(newFilters));\n}\n\nfunction* filterDataFunction({\n  payload\n}) {\n  const {\n    filters: allFilters\n  } = yield select();\n  let filterIndex = allFilters.findIndex(item => item.key === payload.key);\n\n  if (filterIndex < 0) {\n    filterIndex = allFilters.length;\n  }\n\n  const newFilters = [...allFilters.slice(0, filterIndex), payload, ...allFilters.slice(filterIndex + 1)];\n  yield put(actions.setFilterData(newFilters));\n}\n\nfunction* exportCsvFunction() {\n  const {\n    filters,\n    sortBy,\n    sortDirection,\n    filter,\n    headerProps\n  } = yield select();\n  const f2o = filterToObject(filters);\n  yield put(actions.startDownloadingCsv());\n  const outputFileName = `audits.csv`;\n\n  try {\n    yield api.audits.exportAudits(_extends({\n      endpoint: 'csv/v2',\n      headerProps,\n      sortDirection,\n      sortBy,\n      filter\n    }, f2o, {\n      offset: 0,\n      outputFileName\n    }));\n  } catch (e) {\n    console.error('failed to export audits - ', e);\n  } finally {\n    yield put(actions.stopDownloadingCsv());\n  }\n}\n\nexport function* sagas() {\n  yield takeLatest(actions.initData, initDataFunction);\n  yield takeLatest(actions.removeFilter, removeFilterFunction);\n  yield takeLatest(actions.filterData, filterDataFunction);\n  yield takeLatest([actions.loadAudits, actions.textSearch, actions.onPageChange], loadAuditsFunction);\n  yield takeLatest([actions.setFilterData, actions.setDataSorting, actions.startRefresh], () => loadAuditsFunction({\n    payload: {\n      appendMode: false\n    },\n    type: ''\n  }));\n  yield takeLatest(actions.exportCSV, exportCsvFunction);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}