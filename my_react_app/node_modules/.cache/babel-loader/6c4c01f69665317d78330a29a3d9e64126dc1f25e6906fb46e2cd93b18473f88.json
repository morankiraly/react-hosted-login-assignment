{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport { typeReducer } from './utils';\nimport { initialState, reinitializeState } from './initialState';\nimport { authStoreName } from '../constants';\nimport { loginActions, loginReducers } from './LoginState';\nimport { activateAccountActions, activateAccountReducers } from './ActivateState';\nimport { acceptInvitationActions, acceptInvitationReducers } from './AcceptInvitationState';\nimport { forgotPasswordActions, forgotPasswordReducers } from './ForgotPasswordState';\nimport { ssoActions, ssoReducers } from './SSOState';\nimport { mfaActions, mfaReducers } from './MfaState';\nimport { profileActions, profileReducers } from './ProfileState';\nimport { teamActions, teamReducers } from './TeamState';\nimport { socialLoginsActions, socialLoginsReducer } from './SocialLogins';\nimport { signUpActions, signUpReducers } from './SignUp';\nimport { apiTokensActions, apiTokensReducers } from './ApiTokensState';\nimport { securityPolicyActions, securityPolicyReducers } from './SecurityPolicyState';\nimport { accountSettingsActions, accountSettingsReducers } from './AccountSettingsState';\nimport { tenantsActions, tenantsReducers } from './TenantsState';\nimport { rolesActions, rolesReducers } from './RolesState';\nimport { resetPhoneNumberActions, resetPhoneNumberReducers } from './ResetPhoneNumberState';\nimport { sessionsActions, sessionsReducers } from './SessionsState';\nimport { sessionsPolicyActions, sessionsPolicyReducers } from './SessionsPolicyState';\nimport { restrictionsActions, restrictionsReducers } from './RestrictionsState';\nimport { provisioningActions, provisioningReducers } from './Provisioning';\nimport { impersonateActions, impersonateReducers } from './ImpersonationState';\nconst {\n  reducer,\n  actions: sliceActions\n} = createSlice({\n  name: authStoreName,\n  initialState,\n  reducers: _extends({\n    resetState: state => _extends({}, state, reinitializeState),\n    setState: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      return _extends({}, state, payload);\n    },\n    setUser: typeReducer('user')\n  }, loginReducers, socialLoginsReducer, activateAccountReducers, impersonateReducers, acceptInvitationReducers, forgotPasswordReducers, resetPhoneNumberReducers, signUpReducers, profileReducers, ssoReducers, mfaReducers, teamReducers, apiTokensReducers, securityPolicyReducers, accountSettingsReducers, tenantsReducers, rolesReducers, sessionsReducers, sessionsPolicyReducers, restrictionsReducers, provisioningReducers)\n});\nconst actions = _extends({}, sliceActions, loginActions, socialLoginsActions, activateAccountActions, acceptInvitationActions, forgotPasswordActions, resetPhoneNumberActions, signUpActions, profileActions, ssoActions, mfaActions, teamActions, apiTokensActions, securityPolicyActions, accountSettingsActions, tenantsActions, rolesActions, sessionsActions, sessionsPolicyActions, restrictionsActions, provisioningActions, impersonateActions);\nexport { reducer, actions };","map":{"version":3,"names":["_extends","createSlice","typeReducer","initialState","reinitializeState","authStoreName","loginActions","loginReducers","activateAccountActions","activateAccountReducers","acceptInvitationActions","acceptInvitationReducers","forgotPasswordActions","forgotPasswordReducers","ssoActions","ssoReducers","mfaActions","mfaReducers","profileActions","profileReducers","teamActions","teamReducers","socialLoginsActions","socialLoginsReducer","signUpActions","signUpReducers","apiTokensActions","apiTokensReducers","securityPolicyActions","securityPolicyReducers","accountSettingsActions","accountSettingsReducers","tenantsActions","tenantsReducers","rolesActions","rolesReducers","resetPhoneNumberActions","resetPhoneNumberReducers","sessionsActions","sessionsReducers","sessionsPolicyActions","sessionsPolicyReducers","restrictionsActions","restrictionsReducers","provisioningActions","provisioningReducers","impersonateActions","impersonateReducers","reducer","actions","sliceActions","name","reducers","resetState","state","setState","payload","setUser"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/auth/reducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport { typeReducer } from './utils';\nimport { initialState, reinitializeState } from './initialState';\nimport { authStoreName } from '../constants';\nimport { loginActions, loginReducers } from './LoginState';\nimport { activateAccountActions, activateAccountReducers } from './ActivateState';\nimport { acceptInvitationActions, acceptInvitationReducers } from './AcceptInvitationState';\nimport { forgotPasswordActions, forgotPasswordReducers } from './ForgotPasswordState';\nimport { ssoActions, ssoReducers } from './SSOState';\nimport { mfaActions, mfaReducers } from './MfaState';\nimport { profileActions, profileReducers } from './ProfileState';\nimport { teamActions, teamReducers } from './TeamState';\nimport { socialLoginsActions, socialLoginsReducer } from './SocialLogins';\nimport { signUpActions, signUpReducers } from './SignUp';\nimport { apiTokensActions, apiTokensReducers } from './ApiTokensState';\nimport { securityPolicyActions, securityPolicyReducers } from './SecurityPolicyState';\nimport { accountSettingsActions, accountSettingsReducers } from './AccountSettingsState';\nimport { tenantsActions, tenantsReducers } from './TenantsState';\nimport { rolesActions, rolesReducers } from './RolesState';\nimport { resetPhoneNumberActions, resetPhoneNumberReducers } from './ResetPhoneNumberState';\nimport { sessionsActions, sessionsReducers } from './SessionsState';\nimport { sessionsPolicyActions, sessionsPolicyReducers } from './SessionsPolicyState';\nimport { restrictionsActions, restrictionsReducers } from './RestrictionsState';\nimport { provisioningActions, provisioningReducers } from './Provisioning';\nimport { impersonateActions, impersonateReducers } from './ImpersonationState';\nconst {\n  reducer,\n  actions: sliceActions\n} = createSlice({\n  name: authStoreName,\n  initialState,\n  reducers: _extends({\n    resetState: state => _extends({}, state, reinitializeState),\n    setState: (state, {\n      payload\n    }) => _extends({}, state, payload),\n    setUser: typeReducer('user')\n  }, loginReducers, socialLoginsReducer, activateAccountReducers, impersonateReducers, acceptInvitationReducers, forgotPasswordReducers, resetPhoneNumberReducers, signUpReducers, profileReducers, ssoReducers, mfaReducers, teamReducers, apiTokensReducers, securityPolicyReducers, accountSettingsReducers, tenantsReducers, rolesReducers, sessionsReducers, sessionsPolicyReducers, restrictionsReducers, provisioningReducers)\n});\n\nconst actions = _extends({}, sliceActions, loginActions, socialLoginsActions, activateAccountActions, acceptInvitationActions, forgotPasswordActions, resetPhoneNumberActions, signUpActions, profileActions, ssoActions, mfaActions, teamActions, apiTokensActions, securityPolicyActions, accountSettingsActions, tenantsActions, rolesActions, sessionsActions, sessionsPolicyActions, restrictionsActions, provisioningActions, impersonateActions);\n\nexport { reducer, actions };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}