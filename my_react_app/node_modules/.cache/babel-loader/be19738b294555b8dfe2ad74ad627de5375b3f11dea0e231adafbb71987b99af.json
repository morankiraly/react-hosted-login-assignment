{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nimport { errorsReducerForKey, loadersReducerForKey, resetStateByKey, typeReducerForKey } from '../utils';\nimport { authStoreName } from '../../constants';\nconst ssoState = {\n  firstLoad: true,\n  loading: true,\n  saving: false,\n  errors: {},\n  loaders: {},\n  ssoConfigurations: []\n};\nconst reducers = {\n  setSSOLoader: loadersReducerForKey('ssoState'),\n  setSSOError: errorsReducerForKey('ssoState'),\n  setSSOState: typeReducerForKey('ssoState'),\n  resetSSOState: resetStateByKey('ssoState', {\n    ssoState\n  })\n};\nconst actions = {\n  loadSSOConfigurationsV2: createAction(`${authStoreName}/loadSSOConfigurationsV2`),\n  saveSSOConfigurationV2: createAction(`${authStoreName}/saveSSOConfigurationV2`, payload => ({\n    payload\n  })),\n  updateSSOConfiguration: createAction(`${authStoreName}/updateSSOConfiguration`, payload => ({\n    payload\n  })),\n  deleteSSOConfiguration: createAction(`${authStoreName}/deleteSSOConfiguration`, payload => ({\n    payload\n  })),\n  saveSSODomain: createAction(`${authStoreName}/saveSSODomain`, payload => ({\n    payload\n  })),\n  deleteSSODomain: createAction(`${authStoreName}/deleteSSODomain`, payload => ({\n    payload\n  })),\n  validateSSODomainV2: createAction(`${authStoreName}/validateSSODomainV2`, payload => ({\n    payload\n  })),\n  setSSODefaultRoles: createAction(`${authStoreName}/setSSODefaultRoles`, payload => ({\n    payload\n  })),\n  setSSOGroups: createAction(`${authStoreName}/setSSOGroups`, payload => ({\n    payload\n  })),\n  updateSSOGroups: createAction(`${authStoreName}/updateSSOGroups`, payload => ({\n    payload\n  })),\n  saveSSOConfigurationByMetadata: createAction(`${authStoreName}/saveSSOConfigurationByMetadata`, payload => ({\n    payload\n  })),\n  updateSSOConfigurationByMetadata: createAction(`${authStoreName}/updateSSOConfigurationByMetadata`, payload => ({\n    payload\n  })),\n  loadSSOConfigurations: createAction(`${authStoreName}/loadSSOConfigurations`),\n  loadSSOAuthorizationRoles: createAction(`${authStoreName}/loadSSOAuthorizationRoles`),\n  saveSSOConfigurations: createAction(`${authStoreName}/saveSSOConfigurations`, payload => ({\n    payload\n  })),\n  // NOTE: use withCallback in case of promise response\n  saveSSOConfigurationsFile: createAction(`${authStoreName}/saveSSOConfigurationsFile`, payload => ({\n    payload\n  })),\n  saveSSOConfigurationsFileWithCallback: createAction(`${authStoreName}/saveSSOConfigurationsFileWithCallback`, payload => ({\n    payload\n  })),\n  validateSSODomain: createAction(`${authStoreName}/validateSSODomain`, payload => ({\n    payload\n  })),\n  updateSSOAuthorizationRoles: createAction(`${authStoreName}/updateSSOAuthorizationRoles`, payload => ({\n    payload\n  })),\n  deleteSamlGroup: createAction(`${authStoreName}/deleteSamlGroup`, payload => ({\n    payload\n  })),\n  createSamlGroup: createAction(`${authStoreName}/createSamlGroup`, payload => ({\n    payload\n  })),\n  oidcPostlogin: createAction(`${authStoreName}/oidcPostlogin`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { ssoState, reducers as ssoReducers, actions as ssoActions };","map":{"version":3,"names":["createAction","errorsReducerForKey","loadersReducerForKey","resetStateByKey","typeReducerForKey","authStoreName","ssoState","firstLoad","loading","saving","errors","loaders","ssoConfigurations","reducers","setSSOLoader","setSSOError","setSSOState","resetSSOState","actions","loadSSOConfigurationsV2","saveSSOConfigurationV2","payload","updateSSOConfiguration","deleteSSOConfiguration","saveSSODomain","deleteSSODomain","validateSSODomainV2","setSSODefaultRoles","setSSOGroups","updateSSOGroups","saveSSOConfigurationByMetadata","updateSSOConfigurationByMetadata","loadSSOConfigurations","loadSSOAuthorizationRoles","saveSSOConfigurations","saveSSOConfigurationsFile","saveSSOConfigurationsFileWithCallback","validateSSODomain","updateSSOAuthorizationRoles","deleteSamlGroup","createSamlGroup","oidcPostlogin","Matcher","ssoReducers","ssoActions"],"sources":["/Users/morank/Documents/my-app/node_modules/@frontegg/redux-store/auth/SSOState/index.js"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { errorsReducerForKey, loadersReducerForKey, resetStateByKey, typeReducerForKey } from '../utils';\nimport { authStoreName } from '../../constants';\nconst ssoState = {\n  firstLoad: true,\n  loading: true,\n  saving: false,\n  errors: {},\n  loaders: {},\n  ssoConfigurations: []\n};\nconst reducers = {\n  setSSOLoader: loadersReducerForKey('ssoState'),\n  setSSOError: errorsReducerForKey('ssoState'),\n  setSSOState: typeReducerForKey('ssoState'),\n  resetSSOState: resetStateByKey('ssoState', {\n    ssoState\n  })\n};\nconst actions = {\n  loadSSOConfigurationsV2: createAction(`${authStoreName}/loadSSOConfigurationsV2`),\n  saveSSOConfigurationV2: createAction(`${authStoreName}/saveSSOConfigurationV2`, payload => ({\n    payload\n  })),\n  updateSSOConfiguration: createAction(`${authStoreName}/updateSSOConfiguration`, payload => ({\n    payload\n  })),\n  deleteSSOConfiguration: createAction(`${authStoreName}/deleteSSOConfiguration`, payload => ({\n    payload\n  })),\n  saveSSODomain: createAction(`${authStoreName}/saveSSODomain`, payload => ({\n    payload\n  })),\n  deleteSSODomain: createAction(`${authStoreName}/deleteSSODomain`, payload => ({\n    payload\n  })),\n  validateSSODomainV2: createAction(`${authStoreName}/validateSSODomainV2`, payload => ({\n    payload\n  })),\n  setSSODefaultRoles: createAction(`${authStoreName}/setSSODefaultRoles`, payload => ({\n    payload\n  })),\n  setSSOGroups: createAction(`${authStoreName}/setSSOGroups`, payload => ({\n    payload\n  })),\n  updateSSOGroups: createAction(`${authStoreName}/updateSSOGroups`, payload => ({\n    payload\n  })),\n  saveSSOConfigurationByMetadata: createAction(`${authStoreName}/saveSSOConfigurationByMetadata`, payload => ({\n    payload\n  })),\n  updateSSOConfigurationByMetadata: createAction(`${authStoreName}/updateSSOConfigurationByMetadata`, payload => ({\n    payload\n  })),\n  loadSSOConfigurations: createAction(`${authStoreName}/loadSSOConfigurations`),\n  loadSSOAuthorizationRoles: createAction(`${authStoreName}/loadSSOAuthorizationRoles`),\n  saveSSOConfigurations: createAction(`${authStoreName}/saveSSOConfigurations`, payload => ({\n    payload\n  })),\n  // NOTE: use withCallback in case of promise response\n  saveSSOConfigurationsFile: createAction(`${authStoreName}/saveSSOConfigurationsFile`, payload => ({\n    payload\n  })),\n  saveSSOConfigurationsFileWithCallback: createAction(`${authStoreName}/saveSSOConfigurationsFileWithCallback`, payload => ({\n    payload\n  })),\n  validateSSODomain: createAction(`${authStoreName}/validateSSODomain`, payload => ({\n    payload\n  })),\n  updateSSOAuthorizationRoles: createAction(`${authStoreName}/updateSSOAuthorizationRoles`, payload => ({\n    payload\n  })),\n  deleteSamlGroup: createAction(`${authStoreName}/deleteSamlGroup`, payload => ({\n    payload\n  })),\n  createSamlGroup: createAction(`${authStoreName}/createSamlGroup`, payload => ({\n    payload\n  })),\n  oidcPostlogin: createAction(`${authStoreName}/oidcPostlogin`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { ssoState, reducers as ssoReducers, actions as ssoActions };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}