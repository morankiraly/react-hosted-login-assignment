{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nimport { typeReducerForKey, typeReducerNestedKey } from '../utils';\nimport { authStoreName } from '../../constants';\nimport { RestrictionType } from '@frontegg/rest-api';\nconst restrictionsState = {\n  ipRestrictions: {\n    loading: false,\n    pagination: {\n      _offset: 0,\n      _limit: 4,\n      _filter: RestrictionType.ALLOW\n    },\n    totalPages: 1,\n    userIpValid: false\n  },\n  emailDomainRestrictions: {\n    loading: true\n  }\n};\nconst reducers = {\n  setRestrictionsState: typeReducerForKey('restrictionsState'),\n  setIpRestrictionsState: typeReducerNestedKey('restrictionsState', 'ipRestrictions'),\n  setEmailDomainRestrictionsState: typeReducerNestedKey('restrictionsState', 'emailDomainRestrictions')\n};\nconst actions = {\n  checkIfUserIpValid: createAction(`${authStoreName}/checkIfUserIpValid`),\n  addCurrentUserIpAndActivate: createAction(`${authStoreName}/addCurrentUserIpAndActivate`, payload => ({\n    payload\n  })),\n  loadIpRestrictions: createAction(`${authStoreName}/loadIpRestrictions`),\n  saveIpRestriction: createAction(`${authStoreName}/saveIpRestriction`, payload => ({\n    payload\n  })),\n  saveIpRestrictionsConfig: createAction(`${authStoreName}/saveIpRestrictionsConfig`, payload => ({\n    payload\n  })),\n  deleteIpRestriction: createAction(`${authStoreName}/deleteIpRestriction`, payload => ({\n    payload\n  })),\n  loadEmailDomainRestrictions: createAction(`${authStoreName}/loadEmailDomainRestrictions`),\n  saveEmailDomainRestriction: createAction(`${authStoreName}/saveEmailDomainRestriction`, payload => ({\n    payload\n  })),\n  saveEmailDomainRestrictionsConfig: createAction(`${authStoreName}/saveEmailDomainRestrictionsConfig`, payload => ({\n    payload\n  })),\n  deleteEmailDomainRestriction: createAction(`${authStoreName}/deleteEmailDomainRestriction`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { restrictionsState, reducers as restrictionsReducers, actions as restrictionsActions };","map":{"version":3,"names":["createAction","typeReducerForKey","typeReducerNestedKey","authStoreName","RestrictionType","restrictionsState","ipRestrictions","loading","pagination","_offset","_limit","_filter","ALLOW","totalPages","userIpValid","emailDomainRestrictions","reducers","setRestrictionsState","setIpRestrictionsState","setEmailDomainRestrictionsState","actions","checkIfUserIpValid","addCurrentUserIpAndActivate","payload","loadIpRestrictions","saveIpRestriction","saveIpRestrictionsConfig","deleteIpRestriction","loadEmailDomainRestrictions","saveEmailDomainRestriction","saveEmailDomainRestrictionsConfig","deleteEmailDomainRestriction","Matcher","restrictionsReducers","restrictionsActions"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/auth/RestrictionsState/index.js"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport { typeReducerForKey, typeReducerNestedKey } from '../utils';\nimport { authStoreName } from '../../constants';\nimport { RestrictionType } from '@frontegg/rest-api';\nconst restrictionsState = {\n  ipRestrictions: {\n    loading: false,\n    pagination: {\n      _offset: 0,\n      _limit: 4,\n      _filter: RestrictionType.ALLOW\n    },\n    totalPages: 1,\n    userIpValid: false\n  },\n  emailDomainRestrictions: {\n    loading: true\n  }\n};\nconst reducers = {\n  setRestrictionsState: typeReducerForKey('restrictionsState'),\n  setIpRestrictionsState: typeReducerNestedKey('restrictionsState', 'ipRestrictions'),\n  setEmailDomainRestrictionsState: typeReducerNestedKey('restrictionsState', 'emailDomainRestrictions')\n};\nconst actions = {\n  checkIfUserIpValid: createAction(`${authStoreName}/checkIfUserIpValid`),\n  addCurrentUserIpAndActivate: createAction(`${authStoreName}/addCurrentUserIpAndActivate`, payload => ({\n    payload\n  })),\n  loadIpRestrictions: createAction(`${authStoreName}/loadIpRestrictions`),\n  saveIpRestriction: createAction(`${authStoreName}/saveIpRestriction`, payload => ({\n    payload\n  })),\n  saveIpRestrictionsConfig: createAction(`${authStoreName}/saveIpRestrictionsConfig`, payload => ({\n    payload\n  })),\n  deleteIpRestriction: createAction(`${authStoreName}/deleteIpRestriction`, payload => ({\n    payload\n  })),\n  loadEmailDomainRestrictions: createAction(`${authStoreName}/loadEmailDomainRestrictions`),\n  saveEmailDomainRestriction: createAction(`${authStoreName}/saveEmailDomainRestriction`, payload => ({\n    payload\n  })),\n  saveEmailDomainRestrictionsConfig: createAction(`${authStoreName}/saveEmailDomainRestrictionsConfig`, payload => ({\n    payload\n  })),\n  deleteEmailDomainRestriction: createAction(`${authStoreName}/deleteEmailDomainRestriction`, payload => ({\n    payload\n  }))\n};\n/**\n *  To be used for actions types after dispatch, and should contains\n *  the reducers and actions as standalone function\n */\n\n// noinspection JSUnusedLocalSymbols\n\n/**\n *  if you see error in matcher that's mean the DispatchAction does not\n *  contains the same functions in reducers and actions\n */\nconst Matcher = {};\nexport { restrictionsState, reducers as restrictionsReducers, actions as restrictionsActions };"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,iBAAiB,EAAEC,oBAAoB,QAAQ,UAAU;AAClE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,eAAe,QAAQ,oBAAoB;AACpD,MAAMC,iBAAiB,GAAG;EACxBC,cAAc,EAAE;IACdC,OAAO,EAAE,KAAK;IACdC,UAAU,EAAE;MACVC,OAAO,EAAE,CAAC;MACVC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAEP,eAAe,CAACQ;IAC3B,CAAC;IACDC,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE;EACf,CAAC;EACDC,uBAAuB,EAAE;IACvBR,OAAO,EAAE;EACX;AACF,CAAC;AACD,MAAMS,QAAQ,GAAG;EACfC,oBAAoB,EAAEhB,iBAAiB,CAAC,mBAAmB,CAAC;EAC5DiB,sBAAsB,EAAEhB,oBAAoB,CAAC,mBAAmB,EAAE,gBAAgB,CAAC;EACnFiB,+BAA+B,EAAEjB,oBAAoB,CAAC,mBAAmB,EAAE,yBAAyB;AACtG,CAAC;AACD,MAAMkB,OAAO,GAAG;EACdC,kBAAkB,EAAErB,YAAY,CAAE,GAAEG,aAAc,qBAAoB,CAAC;EACvEmB,2BAA2B,EAAEtB,YAAY,CAAE,GAAEG,aAAc,8BAA6B,EAAEoB,OAAO,KAAK;IACpGA;EACF,CAAC,CAAC,CAAC;EACHC,kBAAkB,EAAExB,YAAY,CAAE,GAAEG,aAAc,qBAAoB,CAAC;EACvEsB,iBAAiB,EAAEzB,YAAY,CAAE,GAAEG,aAAc,oBAAmB,EAAEoB,OAAO,KAAK;IAChFA;EACF,CAAC,CAAC,CAAC;EACHG,wBAAwB,EAAE1B,YAAY,CAAE,GAAEG,aAAc,2BAA0B,EAAEoB,OAAO,KAAK;IAC9FA;EACF,CAAC,CAAC,CAAC;EACHI,mBAAmB,EAAE3B,YAAY,CAAE,GAAEG,aAAc,sBAAqB,EAAEoB,OAAO,KAAK;IACpFA;EACF,CAAC,CAAC,CAAC;EACHK,2BAA2B,EAAE5B,YAAY,CAAE,GAAEG,aAAc,8BAA6B,CAAC;EACzF0B,0BAA0B,EAAE7B,YAAY,CAAE,GAAEG,aAAc,6BAA4B,EAAEoB,OAAO,KAAK;IAClGA;EACF,CAAC,CAAC,CAAC;EACHO,iCAAiC,EAAE9B,YAAY,CAAE,GAAEG,aAAc,oCAAmC,EAAEoB,OAAO,KAAK;IAChHA;EACF,CAAC,CAAC,CAAC;EACHQ,4BAA4B,EAAE/B,YAAY,CAAE,GAAEG,aAAc,+BAA8B,EAAEoB,OAAO,KAAK;IACtGA;EACF,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAMS,OAAO,GAAG,CAAC,CAAC;AAClB,SAAS3B,iBAAiB,EAAEW,QAAQ,IAAIiB,oBAAoB,EAAEb,OAAO,IAAIc,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}