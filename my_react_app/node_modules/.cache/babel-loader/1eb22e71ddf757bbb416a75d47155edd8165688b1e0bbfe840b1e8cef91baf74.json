{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { delay } from '../utils';\nimport { tenantsDemo } from '../dummy';\nimport { refreshToken } from '../LoginState/saga';\nfunction switchTenant(_ref) {\n  let {\n    payload: {\n      tenantId,\n      callback\n    }\n  } = _ref;\n  return function* () {\n    yield put(actions.setState({\n      isLoading: true\n    }));\n    try {\n      yield call(api.tenants.switchTenant, {\n        tenantId\n      });\n      yield call(refreshToken);\n      const callbackConsumed = callback == null ? void 0 : callback(true);\n      if (!callbackConsumed) {\n        yield put(actions.setState({\n          isLoading: false\n        }));\n      }\n    } catch (e) {\n      yield put(actions.setState({\n        isLoading: false\n      }));\n      callback == null ? void 0 : callback(false, e);\n    }\n  }();\n}\nfunction loadTenants(_ref2) {\n  let {\n    payload\n  } = _ref2;\n  return function* () {\n    yield put(actions.setTenantsState({\n      loading: true\n    }));\n    try {\n      var _payload$callback;\n      const tenants = yield call(api.tenants.getTenants);\n      yield put(actions.setTenantsState({\n        tenants,\n        loading: false\n      }));\n      payload == null ? void 0 : (_payload$callback = payload.callback) == null ? void 0 : _payload$callback.call(payload, []);\n    } catch (e) {\n      var _payload$callback2;\n      payload == null ? void 0 : (_payload$callback2 = payload.callback) == null ? void 0 : _payload$callback2.call(payload, [], e);\n      yield put(actions.setTenantsState({\n        loading: false\n      }));\n    }\n  }();\n}\nfunction loadSubTenants(_ref3) {\n  let {\n    payload\n  } = _ref3;\n  return function* () {\n    yield put(actions.setTenantsState({\n      loading: true\n    }));\n    try {\n      var _payload$callback3;\n      const subTenants = yield call(api.tenants.getSubTenants);\n      yield put(actions.setTenantsState({\n        subTenants,\n        loading: false\n      }));\n      payload == null ? void 0 : (_payload$callback3 = payload.callback) == null ? void 0 : _payload$callback3.call(payload, true);\n    } catch (e) {\n      var _payload$callback4;\n      yield put(actions.setTenantsState({\n        loading: false\n      }));\n      payload == null ? void 0 : (_payload$callback4 = payload.callback) == null ? void 0 : _payload$callback4.call(payload, null, e);\n    }\n  }();\n}\nfunction loadSubTenantsTree(_ref4) {\n  let {\n    payload\n  } = _ref4;\n  return function* () {\n    yield put(actions.setTenantsState({\n      loading: true\n    }));\n    try {\n      var _payload$callback5;\n      const tenantTree = yield call(api.tenants.getSubTenantsAsTree);\n      yield put(actions.setTenantsState({\n        tenantTree,\n        loading: false\n      }));\n      payload == null ? void 0 : (_payload$callback5 = payload.callback) == null ? void 0 : _payload$callback5.call(payload, true);\n    } catch (e) {\n      var _payload$callback6;\n      yield put(actions.setTenantsState({\n        loading: false\n      }));\n      payload == null ? void 0 : (_payload$callback6 = payload.callback) == null ? void 0 : _payload$callback6.call(payload, null, e);\n    }\n  }();\n}\nexport function* tenantsSagas() {\n  yield takeEvery(actions.loadTenants, loadTenants);\n  yield takeEvery(actions.loadSubTenants, loadSubTenants);\n  yield takeEvery(actions.switchTenant, switchTenant);\n  yield takeEvery(actions.loadSubTenantsTree, loadSubTenantsTree);\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadTenantsMock() {\n  yield put(actions.setTenantsState({\n    loading: true\n  }));\n  yield delay();\n  yield put(actions.setTenantsState({\n    tenants: tenantsDemo,\n    loading: false\n  }));\n}\nexport function* tenantsSagasMock() {\n  yield takeEvery(actions.loadTenants, loadTenantsMock);\n}","map":{"version":3,"names":["call","put","takeEvery","api","actions","delay","tenantsDemo","refreshToken","switchTenant","payload","tenantId","callback","setState","isLoading","tenants","callbackConsumed","e","loadTenants","setTenantsState","loading","_payload$callback","getTenants","_payload$callback2","loadSubTenants","_payload$callback3","subTenants","getSubTenants","_payload$callback4","loadSubTenantsTree","_payload$callback5","tenantTree","getSubTenantsAsTree","_payload$callback6","tenantsSagas","loadTenantsMock","tenantsSagasMock"],"sources":["/Users/morank/Documents/react-hosted-login-assignment/my-app/node_modules/@frontegg/redux-store/auth/TenantsState/saga.js"],"sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { api } from '@frontegg/rest-api';\nimport { actions } from '../reducer';\nimport { delay } from '../utils';\nimport { tenantsDemo } from '../dummy';\nimport { refreshToken } from '../LoginState/saga';\n\nfunction* switchTenant({\n  payload: {\n    tenantId,\n    callback\n  }\n}) {\n  yield put(actions.setState({\n    isLoading: true\n  }));\n\n  try {\n    yield call(api.tenants.switchTenant, {\n      tenantId\n    });\n    yield call(refreshToken);\n    const callbackConsumed = callback == null ? void 0 : callback(true);\n\n    if (!callbackConsumed) {\n      yield put(actions.setState({\n        isLoading: false\n      }));\n    }\n  } catch (e) {\n    yield put(actions.setState({\n      isLoading: false\n    }));\n    callback == null ? void 0 : callback(false, e);\n  }\n}\n\nfunction* loadTenants({\n  payload\n}) {\n  yield put(actions.setTenantsState({\n    loading: true\n  }));\n\n  try {\n    var _payload$callback;\n\n    const tenants = yield call(api.tenants.getTenants);\n    yield put(actions.setTenantsState({\n      tenants,\n      loading: false\n    }));\n    payload == null ? void 0 : (_payload$callback = payload.callback) == null ? void 0 : _payload$callback.call(payload, []);\n  } catch (e) {\n    var _payload$callback2;\n\n    payload == null ? void 0 : (_payload$callback2 = payload.callback) == null ? void 0 : _payload$callback2.call(payload, [], e);\n    yield put(actions.setTenantsState({\n      loading: false\n    }));\n  }\n}\n\nfunction* loadSubTenants({\n  payload\n}) {\n  yield put(actions.setTenantsState({\n    loading: true\n  }));\n\n  try {\n    var _payload$callback3;\n\n    const subTenants = yield call(api.tenants.getSubTenants);\n    yield put(actions.setTenantsState({\n      subTenants,\n      loading: false\n    }));\n    payload == null ? void 0 : (_payload$callback3 = payload.callback) == null ? void 0 : _payload$callback3.call(payload, true);\n  } catch (e) {\n    var _payload$callback4;\n\n    yield put(actions.setTenantsState({\n      loading: false\n    }));\n    payload == null ? void 0 : (_payload$callback4 = payload.callback) == null ? void 0 : _payload$callback4.call(payload, null, e);\n  }\n}\n\nfunction* loadSubTenantsTree({\n  payload\n}) {\n  yield put(actions.setTenantsState({\n    loading: true\n  }));\n\n  try {\n    var _payload$callback5;\n\n    const tenantTree = yield call(api.tenants.getSubTenantsAsTree);\n    yield put(actions.setTenantsState({\n      tenantTree,\n      loading: false\n    }));\n    payload == null ? void 0 : (_payload$callback5 = payload.callback) == null ? void 0 : _payload$callback5.call(payload, true);\n  } catch (e) {\n    var _payload$callback6;\n\n    yield put(actions.setTenantsState({\n      loading: false\n    }));\n    payload == null ? void 0 : (_payload$callback6 = payload.callback) == null ? void 0 : _payload$callback6.call(payload, null, e);\n  }\n}\n\nexport function* tenantsSagas() {\n  yield takeEvery(actions.loadTenants, loadTenants);\n  yield takeEvery(actions.loadSubTenants, loadSubTenants);\n  yield takeEvery(actions.switchTenant, switchTenant);\n  yield takeEvery(actions.loadSubTenantsTree, loadSubTenantsTree);\n}\n/*********************************\n *  Preview Sagas\n *********************************/\n\nfunction* loadTenantsMock() {\n  yield put(actions.setTenantsState({\n    loading: true\n  }));\n  yield delay();\n  yield put(actions.setTenantsState({\n    tenants: tenantsDemo,\n    loading: false\n  }));\n}\n\nexport function* tenantsSagasMock() {\n  yield takeEvery(actions.loadTenants, loadTenantsMock);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}