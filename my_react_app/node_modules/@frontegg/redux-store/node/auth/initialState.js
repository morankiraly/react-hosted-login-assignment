"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reinitializeState = exports.initialState = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _LoginState = require("./LoginState");

var _ActivateState = require("./ActivateState");

var _AcceptInvitationState = require("./AcceptInvitationState");

var _ForgotPasswordState = require("./ForgotPasswordState");

var _ResetPhoneNumberState = require("./ResetPhoneNumberState");

var _SSOState = require("./SSOState");

var _ProfileState = require("./ProfileState");

var _MfaState = require("./MfaState");

var _TeamState = require("./TeamState");

var _SocialLogins = require("./SocialLogins");

var _SignUp = require("./SignUp");

var _ApiTokensState = require("./ApiTokensState");

var _SecurityPolicyState = require("./SecurityPolicyState");

var _AccountSettingsState = require("./AccountSettingsState");

var _TenantsState = require("./TenantsState");

var _RolesState = require("./RolesState");

var _SessionsState = require("./SessionsState");

var _SessionsPolicyState = require("./SessionsPolicyState");

var _RestrictionsState = require("./RestrictionsState");

var _Provisioning = require("./Provisioning");

const reinitializeState = {
  isAuthenticated: false,
  isLoading: true,
  isSSOAuth: false,
  user: null,
  signUpState: _SignUp.signUpState,
  loginState: _LoginState.loginState,
  activateState: _ActivateState.activateState,
  acceptInvitationState: _AcceptInvitationState.acceptInvitationState,
  forgotPasswordState: _ForgotPasswordState.forgotPasswordState,
  ssoState: _SSOState.ssoState,
  profileState: _ProfileState.profileState,
  mfaState: _MfaState.mfaState,
  teamState: _TeamState.teamState,
  socialLoginState: _SocialLogins.socialLoginState,
  apiTokensState: _ApiTokensState.apiTokensState,
  securityPolicyState: _SecurityPolicyState.securityPolicyState,
  accountSettingsState: _AccountSettingsState.accountSettingsState,
  tenantsState: _TenantsState.tenantsState,
  rolesState: _RolesState.rolesState,
  resetPhoneNumberState: _ResetPhoneNumberState.resetPhoneNumberState,
  sessionsState: _SessionsState.sessionsState,
  sessionsPolicyState: _SessionsPolicyState.sessionsPolicyState,
  restrictionsState: _RestrictionsState.restrictionsState,
  provisioningState: _Provisioning.provisioningState
};
exports.reinitializeState = reinitializeState;
const initialState = (0, _extends2.default)({
  routes: {
    authenticatedUrl: '/',
    loginUrl: '/account/login',
    logoutUrl: '/account/logout',
    activateUrl: '/account/activate',
    impersonationUrl: '/account/impersonate',
    acceptInvitationUrl: '/account/invitation/accept',
    forgetPasswordUrl: '/account/forget-password',
    resetPhoneNumberUrl: '/account/reset-phone-number',
    resetPasswordUrl: '/account/reset-password',
    socialLoginCallbackUrl: '/account/social/success',
    signUpUrl: '/account/sign-up',
    oidcRedirectUrl: '/account/oidc/callback',
    samlCallbackUrl: '/account/saml/callback',
    magicLinkCallbackUrl: '/account/login/magic-link',
    hostedLoginRedirectUrl: '/oauth/callback'
  },
  onRedirectTo: () => {}
}, reinitializeState);
exports.initialState = initialState;