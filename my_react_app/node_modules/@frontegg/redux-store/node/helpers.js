"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createRandomString = createRandomString;
exports.generateActionCreator = generateActionCreator;
exports.generateCodeChallenge = generateCodeChallenge;
exports.omitProps = omitProps;
exports.readFileAsText = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _toolkit = require("@reduxjs/toolkit");

// eslint-disable-next-line @typescript-eslint/no-explicit-any
function omitProps(props, keys) {
  const newProps = (0, _extends2.default)({}, props);
  keys.forEach(key => {
    delete newProps[key];
  });
  return newProps;
}

function generateActionCreator(storeName) {
  return (key, withPayload) => withPayload ? (0, _toolkit.createAction)(`${storeName}/${key}`, payload => ({
    payload
  })) : (0, _toolkit.createAction)(`${storeName}/${key}`);
}

async function generateCodeChallenge(codeVerifier) {
  const digest = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(codeVerifier)); // @ts-ignore

  return btoa(String.fromCharCode(...new Uint8Array(digest))).replace(/=/g, '').replace(/\+/g, '-').replace(/\//g, '_');
}

function createRandomString(length = 16) {
  let text = '';
  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';

  for (let i = 0; i < length; i++) {
    text += possible.charAt(Math.floor(Math.random() * possible.length));
  }

  return text;
}

const readFileAsText = file => new Promise((resolve, reject) => {
  const reader = new FileReader();
  reader.readAsText(file);

  reader.onload = () => resolve(reader.result);

  reader.onerror = reject;
});

exports.readFileAsText = readFileAsText;