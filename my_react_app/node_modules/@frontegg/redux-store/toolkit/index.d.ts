import { AuthPageRoutes, AuthState } from '../auth';
import { ContextOptions } from '@frontegg/rest-api';
import { AuditsState } from '../audits';
import { OldAuditsState } from '../audits/backward-compatibility';
import { EnhancedStore } from './redux-types';
export * from './redux';
export * from './redux-saga';
declare type InitialState = {
    context: ContextOptions;
};
export { bindActionCreators } from '@reduxjs/toolkit';
export type { CaseReducerActions, SliceCaseReducers } from '@reduxjs/toolkit';
export interface RootState {
    context?: ContextOptions;
    urlStrategy: 'hash' | 'path';
    previewMode?: boolean;
}
export declare const createFronteggStore: (rootInitialState: InitialState, storeHolder?: any, previewMode?: boolean, authInitialState?: (Partial<Pick<AuthState, "user" | "error" | "onRedirectTo" | "isAuthenticated" | "userIp" | "isLoading" | "keepSessionAlive" | "isSSOAuth" | "ssoACS" | "loginState" | "activateState" | "acceptInvitationState" | "forgotPasswordState" | "resetPhoneNumberState" | "ssoState" | "profileState" | "mfaState" | "teamState" | "socialLoginState" | "signUpState" | "apiTokensState" | "securityPolicyState" | "restrictionsState" | "provisioningState" | "accountSettingsState" | "tenantsState" | "rolesState" | "sessionsState" | "hostedLoginBox" | "disableSilentRefresh" | "sessionsPolicyState" | "impersonateState" | "header" | "loaderComponent">> & {
    routes?: Partial<AuthPageRoutes> | undefined;
}) | undefined, overrideInitialState?: Partial<{
    auth: Partial<Omit<AuthState, 'routes'>> & {
        routes?: Partial<AuthPageRoutes>;
    };
    auditLogs: Partial<AuditsState>;
    audits: Partial<OldAuditsState>;
}> | undefined, builderMode?: boolean, urlStrategy?: 'hash' | 'path') => EnhancedStore;
