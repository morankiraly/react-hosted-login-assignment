import { IUserProfile } from '../teams/interfaces';
import { ContextOptions, RedirectOptions } from '../interfaces';
export declare class ContextHolder {
    private static instance;
    private context;
    private accessToken;
    private user;
    private onRedirectTo;
    private logout;
    private constructor();
    static getInstance(): ContextHolder;
    static setContext(context: ContextOptions): void;
    static setAccessToken(accessToken: string | null): void;
    static setUser(user: IUserProfile | null): void;
    static setOnRedirectTo(onRedirectTo: (path: string, opts?: RedirectOptions) => void): void;
    static setLogout(logout: (callback?: () => void) => void, logoutUrl: string): void;
    static getContext(): ContextOptions;
    static getAccessToken(): string | null;
    static getUser(): IUserProfile | null;
    static onRedirectTo(path: string, opts?: RedirectOptions): void;
    static logout(callback?: () => void): void;
}
export declare const FronteggContext: {
    getContext: () => ContextOptions;
    getAccessToken: () => string | null;
    getUser: () => IUserProfile | null;
    onRedirectTo: (path: string, opts: RedirectOptions) => void;
    logout: (callback?: (() => void) | undefined) => void;
};
