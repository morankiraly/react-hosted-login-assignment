/** @license Frontegg v3.0.71
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import * as auth from './auth';
import * as teams from './teams';
import * as metadata from './metadata';
import * as reports from './reports';
import * as notifications from './notifications';
import * as audits from './audits';
import * as fetch from './fetch';
import * as connectivity from './connectivity';
import * as tenants from './tenants';
import * as accountSettings from './account-settings';
import * as roles from './roles';
import * as subscriptions from './subscriptions';
import { FronteggApiError } from './error';
import * as vendor from './vendor';
import * as subTenants from './sub-tenants';
import * as featureFlags from './feature-flags';
import * as directory from './directory';
import * as impersonate from './impersonate';
import { ContextHolder, FronteggContext } from './ContextHolder';
export * from './interfaces';
export * from './auth/interfaces';
export * from './teams/interfaces';
export * from './metadata/interfaces';
export * from './reports/interfaces';
export * from './connectivity/interfaces';
export * from './notifications/interfaces';
export * from './audits/interfaces';
export * from './tenants/interfaces';
export * from './account-settings/interfaces';
export * from './roles/interfaces';
export * from './subscriptions/interfaces';
export * from './vendor/interfaces';
export * from './sub-tenants/interfaces';
export * from './routers';
export * from './feature-flags';
export * from './feature-flags/interfaces';
export * from './directory';
export * from './directory/interfaces';
export * from './impersonate/interfaces';
import { AuthStrategyEnum, SocialLoginProviders } from './auth';
import { ISubscriptionCancellationPolicy, ISubscriptionStatus, PaymentMethodType, ProviderType } from './subscriptions';
const api = {
  auth,
  teams,
  metadata,
  reports,
  connectivity,
  notifications,
  audits,
  tenants,
  accountSettings,
  roles,
  subscriptions,
  vendor,
  subTenants,
  featureFlags,
  directory,
  impersonate
};
export { fetch, ContextHolder, FronteggContext, api, FronteggApiError, AuthStrategyEnum, SocialLoginProviders, ISubscriptionCancellationPolicy, ISubscriptionStatus, PaymentMethodType, ProviderType };
export default {
  fetch,
  ContextHolder,
  FronteggContext,
  api,
  FronteggApiError,
  AuthStrategyEnum,
  SocialLoginProviders,
  ISubscriptionCancellationPolicy,
  ISubscriptionStatus,
  PaymentMethodType,
  ProviderType
};